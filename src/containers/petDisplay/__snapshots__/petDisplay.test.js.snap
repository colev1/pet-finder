// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Pet Display matches the snapshot 1`] = `
ReactWrapper {
  Symbol(enzyme.__unrendered__): <PetDisplay
    addSelectedPet={[MockFunction]}
    fetchSearchedPets={[MockFunction]}
    hasErrored=""
    isLoadingPets={false}
    searchedPets={
      Array [
        Object {
          "age": "Adult",
          "animal": "Small & Furry",
          "breed": "Rat",
          "contactInfo": Object {
            "address": "1 dog st",
            "city": "The Colony",
            "email": "bob@gmail.com",
            "state": "TX",
            "zip": "75056",
          },
          "id": "42642357",
          "name": "Curly",
          "photos": Array [
            "img1",
            "img2",
            "img3",
            "img4",
            "img5",
          ],
          "sex": "M",
          "shelterId": "TX2295",
          "size": "S",
        },
      ]
    }
  />,
  Symbol(enzyme.__renderer__): Object {
    "batchedUpdates": [Function],
    "getNode": [Function],
    "render": [Function],
    "simulateError": [Function],
    "simulateEvent": [Function],
    "unmount": [Function],
  },
  Symbol(enzyme.__root__): [Circular],
  Symbol(enzyme.__node__): Object {
    "instance": PetDisplay {
      "_reactInternalFiber": FiberNode {
        "_debugID": 50,
        "_debugIsCurrentlyTiming": false,
        "_debugOwner": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "addSelectedPet": [MockFunction],
              "fetchSearchedPets": [MockFunction],
              "hasErrored": "",
              "isLoadingPets": false,
              "searchedPets": Array [
                Object {
                  "age": "Adult",
                  "animal": "Small & Furry",
                  "breed": "Rat",
                  "contactInfo": Object {
                    "address": "1 dog st",
                    "city": "The Colony",
                    "email": "bob@gmail.com",
                    "state": "TX",
                    "zip": "75056",
                  },
                  "id": "42642357",
                  "name": "Curly",
                  "photos": Array [
                    "img1",
                    "img2",
                    "img3",
                    "img4",
                    "img5",
                  ],
                  "sex": "M",
                  "shelterId": "TX2295",
                  "size": "S",
                },
              ],
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "addSelectedPet": [MockFunction],
              "fetchSearchedPets": [MockFunction],
              "hasErrored": "",
              "isLoadingPets": false,
              "searchedPets": Array [
                Object {
                  "age": "Adult",
                  "animal": "Small & Furry",
                  "breed": "Rat",
                  "contactInfo": Object {
                    "address": "1 dog st",
                    "city": "The Colony",
                    "email": "bob@gmail.com",
                    "state": "TX",
                    "zip": "75056",
                  },
                  "id": "42642357",
                  "name": "Curly",
                  "photos": Array [
                    "img1",
                    "img2",
                    "img3",
                    "img4",
                    "img5",
                  ],
                  "sex": "M",
                  "shelterId": "TX2295",
                  "size": "S",
                },
              ],
            },
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <form
                      class="selection-form"
                    >
                      <p
                        class="grid-item"
                      >
                        animal
                      </p>
                      <p
                        class="grid-item"
                      >
                        age 
                      </p>
                      <p
                        class="grid-item"
                      >
                        sex 
                      </p>
                      <select
                        class="grid-item"
                        name="animal"
                      >
                        <option
                          disabled=""
                          selected=""
                          value="all"
                        >
                          all animals
                        </option>
                        <option
                          value="dog"
                        >
                           dogs
                        </option>
                        <option
                          value="cat"
                        >
                           cats
                        </option>
                        <option
                          value="rabbit"
                        >
                           rabbits
                        </option>
                        <option
                          value="smallfurry"
                        >
                           small furry animals
                        </option>
                        <option
                          value="barnyard"
                        >
                           barnyard animals
                        </option>
                        <option
                          value="bird"
                        >
                           birds 
                        </option>
                      </select>
                      <select
                        class="grid-item"
                        name="age"
                      >
                        <option
                          disabled=""
                        >
                          choose an age..
                        </option>
                        <option
                          value="Baby"
                        >
                          baby
                        </option>
                        <option
                          value="Young"
                        >
                          young
                        </option>
                        <option
                          value="Adult"
                        >
                          adult
                        </option>
                        <option
                          value="Senior"
                        >
                          senior
                        </option>
                      </select>
                      <select
                        class="grid-item"
                        name="sex"
                      >
                        <option
                          value="M"
                        >
                          male
                        </option>
                        <option
                          value="F"
                        >
                          female
                        </option>
                      </select>
                      <button
                        type="submit"
                      >
                         search! 
                      </button>
                    </form>
                    <article
                      class="pet-display"
                    >
                      <div
                        class="pet-card"
                      >
                        <div>
                          <h1>
                             
                            Curly
                             
                          </h1>
                          <p
                            class="animal-type"
                          >
                              
                            Rat
                             
                          </p>
                        </div>
                        <img
                          alt="Pet"
                          class="display-img image-1"
                          src="img3"
                        />
                        <img
                          alt="Pet"
                          class="display-img image-2"
                          src="img3"
                        />
                        <div
                          class="pet-description"
                        >
                          age: 
                          Adult
                           
                          <br />
                          size: 
                          S
                           
                          <br />
                          sex: 
                          M
                        </div>
                      </div>
                    </article>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "addSelectedPet": [MockFunction],
                          "fetchSearchedPets": [MockFunction],
                          "hasErrored": "",
                          "isLoadingPets": false,
                          "searchedPets": Array [
                            Object {
                              "age": "Adult",
                              "animal": "Small & Furry",
                              "breed": "Rat",
                              "contactInfo": Object {
                                "address": "1 dog st",
                                "city": "The Colony",
                                "email": "bob@gmail.com",
                                "state": "TX",
                                "zip": "75056",
                              },
                              "id": "42642357",
                              "name": "Curly",
                              "photos": Array [
                                "img1",
                                "img2",
                                "img3",
                                "img4",
                                "img5",
                              ],
                              "sex": "M",
                              "shelterId": "TX2295",
                              "size": "S",
                            },
                          ],
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "addSelectedPet": [MockFunction],
                          "fetchSearchedPets": [MockFunction],
                          "hasErrored": "",
                          "isLoadingPets": false,
                          "searchedPets": Array [
                            Object {
                              "age": "Adult",
                              "animal": "Small & Furry",
                              "breed": "Rat",
                              "contactInfo": Object {
                                "address": "1 dog st",
                                "city": "The Colony",
                                "email": "bob@gmail.com",
                                "state": "TX",
                                "zip": "75056",
                              },
                              "id": "42642357",
                              "name": "Curly",
                              "photos": Array [
                                "img1",
                                "img2",
                                "img3",
                                "img4",
                                "img5",
                              ],
                              "sex": "M",
                              "shelterId": "TX2295",
                              "size": "S",
                            },
                          ],
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "addSelectedPet": [MockFunction],
                    "fetchSearchedPets": [MockFunction],
                    "hasErrored": "",
                    "isLoadingPets": false,
                    "searchedPets": Array [
                      Object {
                        "age": "Adult",
                        "animal": "Small & Furry",
                        "breed": "Rat",
                        "contactInfo": Object {
                          "address": "1 dog st",
                          "city": "The Colony",
                          "email": "bob@gmail.com",
                          "state": "TX",
                          "zip": "75056",
                        },
                        "id": "42642357",
                        "name": "Curly",
                        "photos": Array [
                          "img1",
                          "img2",
                          "img3",
                          "img4",
                          "img5",
                        ],
                        "sex": "M",
                        "shelterId": "TX2295",
                        "size": "S",
                      },
                    ],
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                  <form
                    class="selection-form"
                  >
                    <p
                      class="grid-item"
                    >
                      animal
                    </p>
                    <p
                      class="grid-item"
                    >
                      age 
                    </p>
                    <p
                      class="grid-item"
                    >
                      sex 
                    </p>
                    <select
                      class="grid-item"
                      name="animal"
                    >
                      <option
                        disabled=""
                        selected=""
                        value="all"
                      >
                        all animals
                      </option>
                      <option
                        value="dog"
                      >
                         dogs
                      </option>
                      <option
                        value="cat"
                      >
                         cats
                      </option>
                      <option
                        value="rabbit"
                      >
                         rabbits
                      </option>
                      <option
                        value="smallfurry"
                      >
                         small furry animals
                      </option>
                      <option
                        value="barnyard"
                      >
                         barnyard animals
                      </option>
                      <option
                        value="bird"
                      >
                         birds 
                      </option>
                    </select>
                    <select
                      class="grid-item"
                      name="age"
                    >
                      <option
                        disabled=""
                      >
                        choose an age..
                      </option>
                      <option
                        value="Baby"
                      >
                        baby
                      </option>
                      <option
                        value="Young"
                      >
                        young
                      </option>
                      <option
                        value="Adult"
                      >
                        adult
                      </option>
                      <option
                        value="Senior"
                      >
                        senior
                      </option>
                    </select>
                    <select
                      class="grid-item"
                      name="sex"
                    >
                      <option
                        value="M"
                      >
                        male
                      </option>
                      <option
                        value="F"
                      >
                        female
                      </option>
                    </select>
                    <button
                      type="submit"
                    >
                       search! 
                    </button>
                  </form>
                  <article
                    class="pet-display"
                  >
                    <div
                      class="pet-card"
                    >
                      <div>
                        <h1>
                           
                          Curly
                           
                        </h1>
                        <p
                          class="animal-type"
                        >
                            
                          Rat
                           
                        </p>
                      </div>
                      <img
                        alt="Pet"
                        class="display-img image-1"
                        src="img3"
                      />
                      <img
                        alt="Pet"
                        class="display-img image-2"
                        src="img3"
                      />
                      <div
                        class="pet-description"
                      >
                        age: 
                        Adult
                         
                        <br />
                        size: 
                        S
                         
                        <br />
                        sex: 
                        M
                      </div>
                    </div>
                  </article>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "addSelectedPet": [MockFunction],
                      "fetchSearchedPets": [MockFunction],
                      "hasErrored": "",
                      "isLoadingPets": false,
                      "searchedPets": Array [
                        Object {
                          "age": "Adult",
                          "animal": "Small & Furry",
                          "breed": "Rat",
                          "contactInfo": Object {
                            "address": "1 dog st",
                            "city": "The Colony",
                            "email": "bob@gmail.com",
                            "state": "TX",
                            "zip": "75056",
                          },
                          "id": "42642357",
                          "name": "Curly",
                          "photos": Array [
                            "img1",
                            "img2",
                            "img3",
                            "img4",
                            "img5",
                          ],
                          "sex": "M",
                          "shelterId": "TX2295",
                          "size": "S",
                        },
                      ],
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "addSelectedPet": [MockFunction],
              "fetchSearchedPets": [MockFunction],
              "hasErrored": "",
              "isLoadingPets": false,
              "searchedPets": Array [
                Object {
                  "age": "Adult",
                  "animal": "Small & Furry",
                  "breed": "Rat",
                  "contactInfo": Object {
                    "address": "1 dog st",
                    "city": "The Colony",
                    "email": "bob@gmail.com",
                    "state": "TX",
                    "zip": "75056",
                  },
                  "id": "42642357",
                  "name": "Curly",
                  "photos": Array [
                    "img1",
                    "img2",
                    "img3",
                    "img4",
                    "img5",
                  ],
                  "sex": "M",
                  "shelterId": "TX2295",
                  "size": "S",
                },
              ],
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <form
                      class="selection-form"
                    >
                      <p
                        class="grid-item"
                      >
                        animal
                      </p>
                      <p
                        class="grid-item"
                      >
                        age 
                      </p>
                      <p
                        class="grid-item"
                      >
                        sex 
                      </p>
                      <select
                        class="grid-item"
                        name="animal"
                      >
                        <option
                          disabled=""
                          selected=""
                          value="all"
                        >
                          all animals
                        </option>
                        <option
                          value="dog"
                        >
                           dogs
                        </option>
                        <option
                          value="cat"
                        >
                           cats
                        </option>
                        <option
                          value="rabbit"
                        >
                           rabbits
                        </option>
                        <option
                          value="smallfurry"
                        >
                           small furry animals
                        </option>
                        <option
                          value="barnyard"
                        >
                           barnyard animals
                        </option>
                        <option
                          value="bird"
                        >
                           birds 
                        </option>
                      </select>
                      <select
                        class="grid-item"
                        name="age"
                      >
                        <option
                          disabled=""
                        >
                          choose an age..
                        </option>
                        <option
                          value="Baby"
                        >
                          baby
                        </option>
                        <option
                          value="Young"
                        >
                          young
                        </option>
                        <option
                          value="Adult"
                        >
                          adult
                        </option>
                        <option
                          value="Senior"
                        >
                          senior
                        </option>
                      </select>
                      <select
                        class="grid-item"
                        name="sex"
                      >
                        <option
                          value="M"
                        >
                          male
                        </option>
                        <option
                          value="F"
                        >
                          female
                        </option>
                      </select>
                      <button
                        type="submit"
                      >
                         search! 
                      </button>
                    </form>
                    <article
                      class="pet-display"
                    >
                      <div
                        class="pet-card"
                      >
                        <div>
                          <h1>
                             
                            Curly
                             
                          </h1>
                          <p
                            class="animal-type"
                          >
                              
                            Rat
                             
                          </p>
                        </div>
                        <img
                          alt="Pet"
                          class="display-img image-1"
                          src="img3"
                        />
                        <img
                          alt="Pet"
                          class="display-img image-2"
                          src="img3"
                        />
                        <div
                          class="pet-description"
                        >
                          age: 
                          Adult
                           
                          <br />
                          size: 
                          S
                           
                          <br />
                          sex: 
                          M
                        </div>
                      </div>
                    </article>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "addSelectedPet": [MockFunction],
                          "fetchSearchedPets": [MockFunction],
                          "hasErrored": "",
                          "isLoadingPets": false,
                          "searchedPets": Array [
                            Object {
                              "age": "Adult",
                              "animal": "Small & Furry",
                              "breed": "Rat",
                              "contactInfo": Object {
                                "address": "1 dog st",
                                "city": "The Colony",
                                "email": "bob@gmail.com",
                                "state": "TX",
                                "zip": "75056",
                              },
                              "id": "42642357",
                              "name": "Curly",
                              "photos": Array [
                                "img1",
                                "img2",
                                "img3",
                                "img4",
                                "img5",
                              ],
                              "sex": "M",
                              "shelterId": "TX2295",
                              "size": "S",
                            },
                          ],
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "addSelectedPet": [MockFunction],
                          "fetchSearchedPets": [MockFunction],
                          "hasErrored": "",
                          "isLoadingPets": false,
                          "searchedPets": Array [
                            Object {
                              "age": "Adult",
                              "animal": "Small & Furry",
                              "breed": "Rat",
                              "contactInfo": Object {
                                "address": "1 dog st",
                                "city": "The Colony",
                                "email": "bob@gmail.com",
                                "state": "TX",
                                "zip": "75056",
                              },
                              "id": "42642357",
                              "name": "Curly",
                              "photos": Array [
                                "img1",
                                "img2",
                                "img3",
                                "img4",
                                "img5",
                              ],
                              "sex": "M",
                              "shelterId": "TX2295",
                              "size": "S",
                            },
                          ],
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "addSelectedPet": [MockFunction],
                    "fetchSearchedPets": [MockFunction],
                    "hasErrored": "",
                    "isLoadingPets": false,
                    "searchedPets": Array [
                      Object {
                        "age": "Adult",
                        "animal": "Small & Furry",
                        "breed": "Rat",
                        "contactInfo": Object {
                          "address": "1 dog st",
                          "city": "The Colony",
                          "email": "bob@gmail.com",
                          "state": "TX",
                          "zip": "75056",
                        },
                        "id": "42642357",
                        "name": "Curly",
                        "photos": Array [
                          "img1",
                          "img2",
                          "img3",
                          "img4",
                          "img5",
                        ],
                        "sex": "M",
                        "shelterId": "TX2295",
                        "size": "S",
                      },
                    ],
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                  <form
                    class="selection-form"
                  >
                    <p
                      class="grid-item"
                    >
                      animal
                    </p>
                    <p
                      class="grid-item"
                    >
                      age 
                    </p>
                    <p
                      class="grid-item"
                    >
                      sex 
                    </p>
                    <select
                      class="grid-item"
                      name="animal"
                    >
                      <option
                        disabled=""
                        selected=""
                        value="all"
                      >
                        all animals
                      </option>
                      <option
                        value="dog"
                      >
                         dogs
                      </option>
                      <option
                        value="cat"
                      >
                         cats
                      </option>
                      <option
                        value="rabbit"
                      >
                         rabbits
                      </option>
                      <option
                        value="smallfurry"
                      >
                         small furry animals
                      </option>
                      <option
                        value="barnyard"
                      >
                         barnyard animals
                      </option>
                      <option
                        value="bird"
                      >
                         birds 
                      </option>
                    </select>
                    <select
                      class="grid-item"
                      name="age"
                    >
                      <option
                        disabled=""
                      >
                        choose an age..
                      </option>
                      <option
                        value="Baby"
                      >
                        baby
                      </option>
                      <option
                        value="Young"
                      >
                        young
                      </option>
                      <option
                        value="Adult"
                      >
                        adult
                      </option>
                      <option
                        value="Senior"
                      >
                        senior
                      </option>
                    </select>
                    <select
                      class="grid-item"
                      name="sex"
                    >
                      <option
                        value="M"
                      >
                        male
                      </option>
                      <option
                        value="F"
                      >
                        female
                      </option>
                    </select>
                    <button
                      type="submit"
                    >
                       search! 
                    </button>
                  </form>
                  <article
                    class="pet-display"
                  >
                    <div
                      class="pet-card"
                    >
                      <div>
                        <h1>
                           
                          Curly
                           
                        </h1>
                        <p
                          class="animal-type"
                        >
                            
                          Rat
                           
                        </p>
                      </div>
                      <img
                        alt="Pet"
                        class="display-img image-1"
                        src="img3"
                      />
                      <img
                        alt="Pet"
                        class="display-img image-2"
                        src="img3"
                      />
                      <div
                        class="pet-description"
                      >
                        age: 
                        Adult
                         
                        <br />
                        size: 
                        S
                         
                        <br />
                        sex: 
                        M
                      </div>
                    </div>
                  </article>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "addSelectedPet": [MockFunction],
                      "fetchSearchedPets": [MockFunction],
                      "hasErrored": "",
                      "isLoadingPets": false,
                      "searchedPets": Array [
                        Object {
                          "age": "Adult",
                          "animal": "Small & Furry",
                          "breed": "Rat",
                          "contactInfo": Object {
                            "address": "1 dog st",
                            "city": "The Colony",
                            "email": "bob@gmail.com",
                            "state": "TX",
                            "zip": "75056",
                          },
                          "id": "42642357",
                          "name": "Curly",
                          "photos": Array [
                            "img1",
                            "img2",
                            "img3",
                            "img4",
                            "img5",
                          ],
                          "sex": "M",
                          "shelterId": "TX2295",
                          "size": "S",
                        },
                      ],
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "addSelectedPet": [MockFunction],
                "fetchSearchedPets": [MockFunction],
                "hasErrored": "",
                "isLoadingPets": false,
                "searchedPets": Array [
                  Object {
                    "age": "Adult",
                    "animal": "Small & Furry",
                    "breed": "Rat",
                    "contactInfo": Object {
                      "address": "1 dog st",
                      "city": "The Colony",
                      "email": "bob@gmail.com",
                      "state": "TX",
                      "zip": "75056",
                    },
                    "id": "42642357",
                    "name": "Curly",
                    "photos": Array [
                      "img1",
                      "img2",
                      "img3",
                      "img4",
                      "img5",
                    ],
                    "sex": "M",
                    "shelterId": "TX2295",
                    "size": "S",
                  },
                ],
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "addSelectedPet": [MockFunction],
                "fetchSearchedPets": [MockFunction],
                "hasErrored": "",
                "isLoadingPets": false,
                "searchedPets": Array [
                  Object {
                    "age": "Adult",
                    "animal": "Small & Furry",
                    "breed": "Rat",
                    "contactInfo": Object {
                      "address": "1 dog st",
                      "city": "The Colony",
                      "email": "bob@gmail.com",
                      "state": "TX",
                      "zip": "75056",
                    },
                    "id": "42642357",
                    "name": "Curly",
                    "photos": Array [
                      "img1",
                      "img2",
                      "img3",
                      "img4",
                      "img5",
                    ],
                    "sex": "M",
                    "shelterId": "TX2295",
                    "size": "S",
                  },
                ],
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_debugSource": null,
        "actualDuration": 0,
        "actualStartTime": -1,
        "alternate": null,
        "child": FiberNode {
          "_debugID": 51,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": [Circular],
          "_debugSource": Object {
            "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
            "lineNumber": 74,
          },
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 52,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
              "lineNumber": 75,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 54,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                "lineNumber": 76,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "p",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": "animal",
                "className": "grid-item",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": "animal",
                "className": "grid-item",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugID": 55,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                  "lineNumber": 77,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "p",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "age ",
                  "className": "grid-item",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "age ",
                  "className": "grid-item",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 56,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                    "lineNumber": 78,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "p",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 2,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "sex ",
                    "className": "grid-item",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "sex ",
                    "className": "grid-item",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 57,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                      "lineNumber": 79,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 61,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                        "lineNumber": 80,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "option",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": "all animals",
                        "disabled": true,
                        "value": "all",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": "all animals",
                        "disabled": true,
                        "value": "all",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 62,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                          "lineNumber": 81,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "option",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": " dogs",
                          "value": "dog",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": " dogs",
                          "value": "dog",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 63,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                            "lineNumber": 82,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "option",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 2,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": " cats",
                            "value": "cat",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": " cats",
                            "value": "cat",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 64,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                              "lineNumber": 83,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "option",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 3,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": " rabbits",
                              "value": "rabbit",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": " rabbits",
                              "value": "rabbit",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 65,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                                "lineNumber": 84,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "option",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 4,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": " small furry animals",
                                "value": "smallfurry",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": " small furry animals",
                                "value": "smallfurry",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 66,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                                  "lineNumber": 85,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "option",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 5,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": " barnyard animals",
                                  "value": "barnyard",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": " barnyard animals",
                                  "value": "barnyard",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugID": 67,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                                    "lineNumber": 86,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "elementType": "option",
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 6,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": " birds ",
                                    "value": "bird",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": " birds ",
                                    "value": "bird",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <option
                                    value="bird"
                                  >
                                     birds 
                                  </option>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "option",
                                  "updateQueue": null,
                                },
                                "stateNode": <option
                                  value="barnyard"
                                >
                                   barnyard animals
                                </option>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "option",
                                "updateQueue": null,
                              },
                              "stateNode": <option
                                value="smallfurry"
                              >
                                 small furry animals
                              </option>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "option",
                              "updateQueue": null,
                            },
                            "stateNode": <option
                              value="rabbit"
                            >
                               rabbits
                            </option>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "option",
                            "updateQueue": null,
                          },
                          "stateNode": <option
                            value="cat"
                          >
                             cats
                          </option>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "option",
                          "updateQueue": null,
                        },
                        "stateNode": <option
                          value="dog"
                        >
                           dogs
                        </option>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "option",
                        "updateQueue": null,
                      },
                      "stateNode": <option
                        disabled=""
                        selected=""
                        value="all"
                      >
                        all animals
                      </option>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "option",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "select",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 3,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <option
                          disabled={true}
                          value="all"
                        >
                          all animals
                        </option>,
                        <option
                          value="dog"
                        >
                           dogs
                        </option>,
                        <option
                          value="cat"
                        >
                           cats
                        </option>,
                        <option
                          value="rabbit"
                        >
                           rabbits
                        </option>,
                        <option
                          value="smallfurry"
                        >
                           small furry animals
                        </option>,
                        <option
                          value="barnyard"
                        >
                           barnyard animals
                        </option>,
                        <option
                          value="bird"
                        >
                           birds 
                        </option>,
                      ],
                      "className": "grid-item",
                      "defaultValue": "all",
                      "name": "animal",
                      "onChange": [Function],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <option
                          disabled={true}
                          value="all"
                        >
                          all animals
                        </option>,
                        <option
                          value="dog"
                        >
                           dogs
                        </option>,
                        <option
                          value="cat"
                        >
                           cats
                        </option>,
                        <option
                          value="rabbit"
                        >
                           rabbits
                        </option>,
                        <option
                          value="smallfurry"
                        >
                           small furry animals
                        </option>,
                        <option
                          value="barnyard"
                        >
                           barnyard animals
                        </option>,
                        <option
                          value="bird"
                        >
                           birds 
                        </option>,
                      ],
                      "className": "grid-item",
                      "defaultValue": "all",
                      "name": "animal",
                      "onChange": [Function],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 58,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                        "lineNumber": 88,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 68,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                          "lineNumber": 89,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "option",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "choose an age..",
                          "disabled": true,
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "choose an age..",
                          "disabled": true,
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 69,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                            "lineNumber": 90,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "option",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "baby",
                            "value": "Baby",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "baby",
                            "value": "Baby",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 70,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                              "lineNumber": 91,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "option",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "young",
                              "value": "Young",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "young",
                              "value": "Young",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 71,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                                "lineNumber": 92,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "option",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 3,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "adult",
                                "value": "Adult",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "adult",
                                "value": "Adult",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 72,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                                  "lineNumber": 93,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "option",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 4,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "senior",
                                  "value": "Senior",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "senior",
                                  "value": "Senior",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": null,
                                "stateNode": <option
                                  value="Senior"
                                >
                                  senior
                                </option>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "option",
                                "updateQueue": null,
                              },
                              "stateNode": <option
                                value="Adult"
                              >
                                adult
                              </option>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "option",
                              "updateQueue": null,
                            },
                            "stateNode": <option
                              value="Young"
                            >
                              young
                            </option>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "option",
                            "updateQueue": null,
                          },
                          "stateNode": <option
                            value="Baby"
                          >
                            baby
                          </option>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "option",
                          "updateQueue": null,
                        },
                        "stateNode": <option
                          disabled=""
                        >
                          choose an age..
                        </option>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "option",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "select",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 4,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <option
                            disabled={true}
                          >
                            choose an age..
                          </option>,
                          <option
                            value="Baby"
                          >
                            baby
                          </option>,
                          <option
                            value="Young"
                          >
                            young
                          </option>,
                          <option
                            value="Adult"
                          >
                            adult
                          </option>,
                          <option
                            value="Senior"
                          >
                            senior
                          </option>,
                        ],
                        "className": "grid-item",
                        "name": "age",
                        "onChange": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <option
                            disabled={true}
                          >
                            choose an age..
                          </option>,
                          <option
                            value="Baby"
                          >
                            baby
                          </option>,
                          <option
                            value="Young"
                          >
                            young
                          </option>,
                          <option
                            value="Adult"
                          >
                            adult
                          </option>,
                          <option
                            value="Senior"
                          >
                            senior
                          </option>,
                        ],
                        "className": "grid-item",
                        "name": "age",
                        "onChange": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 59,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                          "lineNumber": 95,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 73,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                            "lineNumber": 96,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "option",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "male",
                            "value": "M",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "male",
                            "value": "M",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 74,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                              "lineNumber": 97,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "option",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "female",
                              "value": "F",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "female",
                              "value": "F",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <option
                              value="F"
                            >
                              female
                            </option>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "option",
                            "updateQueue": null,
                          },
                          "stateNode": <option
                            value="M"
                          >
                            male
                          </option>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "option",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "select",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 5,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <option
                              value="M"
                            >
                              male
                            </option>,
                            <option
                              value="F"
                            >
                              female
                            </option>,
                          ],
                          "className": "grid-item",
                          "name": "sex",
                          "onChange": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <option
                              value="M"
                            >
                              male
                            </option>,
                            <option
                              value="F"
                            >
                              female
                            </option>,
                          ],
                          "className": "grid-item",
                          "name": "sex",
                          "onChange": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 60,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                            "lineNumber": 99,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "button",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 6,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": " search! ",
                            "type": "submit",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": " search! ",
                            "type": "submit",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <button
                            type="submit"
                          >
                             search! 
                          </button>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "button",
                          "updateQueue": null,
                        },
                        "stateNode": <select
                          class="grid-item"
                          name="sex"
                        >
                          <option
                            value="M"
                          >
                            male
                          </option>
                          <option
                            value="F"
                          >
                            female
                          </option>
                        </select>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "select",
                        "updateQueue": null,
                      },
                      "stateNode": <select
                        class="grid-item"
                        name="age"
                      >
                        <option
                          disabled=""
                        >
                          choose an age..
                        </option>
                        <option
                          value="Baby"
                        >
                          baby
                        </option>
                        <option
                          value="Young"
                        >
                          young
                        </option>
                        <option
                          value="Adult"
                        >
                          adult
                        </option>
                        <option
                          value="Senior"
                        >
                          senior
                        </option>
                      </select>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "select",
                      "updateQueue": null,
                    },
                    "stateNode": <select
                      class="grid-item"
                      name="animal"
                    >
                      <option
                        disabled=""
                        selected=""
                        value="all"
                      >
                        all animals
                      </option>
                      <option
                        value="dog"
                      >
                         dogs
                      </option>
                      <option
                        value="cat"
                      >
                         cats
                      </option>
                      <option
                        value="rabbit"
                      >
                         rabbits
                      </option>
                      <option
                        value="smallfurry"
                      >
                         small furry animals
                      </option>
                      <option
                        value="barnyard"
                      >
                         barnyard animals
                      </option>
                      <option
                        value="bird"
                      >
                         birds 
                      </option>
                    </select>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "select",
                    "updateQueue": null,
                  },
                  "stateNode": <p
                    class="grid-item"
                  >
                    sex 
                  </p>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "p",
                  "updateQueue": null,
                },
                "stateNode": <p
                  class="grid-item"
                >
                  age 
                </p>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "p",
                "updateQueue": null,
              },
              "stateNode": <p
                class="grid-item"
              >
                animal
              </p>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "p",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 0,
            "elementType": "form",
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <p
                  className="grid-item"
                >
                  animal
                </p>,
                <p
                  className="grid-item"
                >
                  age 
                </p>,
                <p
                  className="grid-item"
                >
                  sex 
                </p>,
                <select
                  className="grid-item"
                  defaultValue="all"
                  name="animal"
                  onChange={[Function]}
                >
                  <option
                    disabled={true}
                    value="all"
                  >
                    all animals
                  </option>
                  <option
                    value="dog"
                  >
                     dogs
                  </option>
                  <option
                    value="cat"
                  >
                     cats
                  </option>
                  <option
                    value="rabbit"
                  >
                     rabbits
                  </option>
                  <option
                    value="smallfurry"
                  >
                     small furry animals
                  </option>
                  <option
                    value="barnyard"
                  >
                     barnyard animals
                  </option>
                  <option
                    value="bird"
                  >
                     birds 
                  </option>
                </select>,
                <select
                  className="grid-item"
                  name="age"
                  onChange={[Function]}
                >
                  <option
                    disabled={true}
                  >
                    choose an age..
                  </option>
                  <option
                    value="Baby"
                  >
                    baby
                  </option>
                  <option
                    value="Young"
                  >
                    young
                  </option>
                  <option
                    value="Adult"
                  >
                    adult
                  </option>
                  <option
                    value="Senior"
                  >
                    senior
                  </option>
                </select>,
                <select
                  className="grid-item"
                  name="sex"
                  onChange={[Function]}
                >
                  <option
                    value="M"
                  >
                    male
                  </option>
                  <option
                    value="F"
                  >
                    female
                  </option>
                </select>,
                <button
                  type="submit"
                >
                   search! 
                </button>,
              ],
              "className": "selection-form",
              "onSubmit": [Function],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <p
                  className="grid-item"
                >
                  animal
                </p>,
                <p
                  className="grid-item"
                >
                  age 
                </p>,
                <p
                  className="grid-item"
                >
                  sex 
                </p>,
                <select
                  className="grid-item"
                  defaultValue="all"
                  name="animal"
                  onChange={[Function]}
                >
                  <option
                    disabled={true}
                    value="all"
                  >
                    all animals
                  </option>
                  <option
                    value="dog"
                  >
                     dogs
                  </option>
                  <option
                    value="cat"
                  >
                     cats
                  </option>
                  <option
                    value="rabbit"
                  >
                     rabbits
                  </option>
                  <option
                    value="smallfurry"
                  >
                     small furry animals
                  </option>
                  <option
                    value="barnyard"
                  >
                     barnyard animals
                  </option>
                  <option
                    value="bird"
                  >
                     birds 
                  </option>
                </select>,
                <select
                  className="grid-item"
                  name="age"
                  onChange={[Function]}
                >
                  <option
                    disabled={true}
                  >
                    choose an age..
                  </option>
                  <option
                    value="Baby"
                  >
                    baby
                  </option>
                  <option
                    value="Young"
                  >
                    young
                  </option>
                  <option
                    value="Adult"
                  >
                    adult
                  </option>
                  <option
                    value="Senior"
                  >
                    senior
                  </option>
                </select>,
                <select
                  className="grid-item"
                  name="sex"
                  onChange={[Function]}
                >
                  <option
                    value="M"
                  >
                    male
                  </option>
                  <option
                    value="F"
                  >
                    female
                  </option>
                </select>,
                <button
                  type="submit"
                >
                   search! 
                </button>,
              ],
              "className": "selection-form",
              "onSubmit": [Function],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": FiberNode {
              "_debugID": 53,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                "lineNumber": 101,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 75,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                  "lineNumber": 50,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 76,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                    "lineNumber": 51,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 80,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                      "lineNumber": 52,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 82,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": null,
                      "_debugSource": null,
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": null,
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": " ",
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": " ",
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 83,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": "Curly",
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": "Curly",
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 84,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 2,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": " ",
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": " ",
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode":  ,
                          "tag": 6,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": null,
                        },
                        "stateNode": Curly,
                        "tag": 6,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": null,
                      },
                      "stateNode":  ,
                      "tag": 6,
                      "treeBaseDuration": 0,
                      "type": null,
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "h1",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        " ",
                        "Curly",
                        " ",
                      ],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        " ",
                        "Curly",
                        " ",
                      ],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 81,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                        "lineNumber": 53,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 85,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": "  ",
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": "  ",
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 86,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": "Rat",
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": "Rat",
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 87,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": null,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": " ",
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": " ",
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode":  ,
                            "tag": 6,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": null,
                          },
                          "stateNode": Rat,
                          "tag": 6,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": null,
                        },
                        "stateNode":   ,
                        "tag": 6,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "p",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          "  ",
                          "Rat",
                          " ",
                        ],
                        "className": "animal-type",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          "  ",
                          "Rat",
                          " ",
                        ],
                        "className": "animal-type",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": null,
                      "stateNode": <p
                        class="animal-type"
                      >
                          
                        Rat
                         
                      </p>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "p",
                      "updateQueue": null,
                    },
                    "stateNode": <h1>
                       
                      Curly
                       
                    </h1>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "h1",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <h1>
                         
                        Curly
                         
                      </h1>,
                      <p
                        className="animal-type"
                      >
                          
                        Rat
                         
                      </p>,
                    ],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <h1>
                         
                        Curly
                         
                      </h1>,
                      <p
                        className="animal-type"
                      >
                          
                        Rat
                         
                      </p>,
                    ],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 77,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                      "lineNumber": 55,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "img",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 1,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "alt": "Pet",
                      "className": "display-img image-1",
                      "src": "img3",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "alt": "Pet",
                      "className": "display-img image-1",
                      "src": "img3",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 78,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                        "lineNumber": 56,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "img",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 2,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "alt": "Pet",
                        "className": "display-img image-2",
                        "src": "img3",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "alt": "Pet",
                        "className": "display-img image-2",
                        "src": "img3",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 79,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                          "lineNumber": 57,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 88,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": "age: ",
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": "age: ",
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 89,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": null,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": "Adult",
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": "Adult",
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 90,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 2,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": " ",
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": " ",
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 91,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                                  "lineNumber": 58,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "br",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 3,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {},
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {},
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugID": 92,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": null,
                                  "_debugSource": null,
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "elementType": null,
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 4,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": "size: ",
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": "size: ",
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugID": 93,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childExpirationTime": 0,
                                    "effectTag": 0,
                                    "elementType": null,
                                    "expirationTime": 0,
                                    "firstContextDependency": null,
                                    "firstEffect": null,
                                    "index": 5,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": "S",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "S",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugID": 94,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childExpirationTime": 0,
                                      "effectTag": 0,
                                      "elementType": null,
                                      "expirationTime": 0,
                                      "firstContextDependency": null,
                                      "firstEffect": null,
                                      "index": 6,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": " ",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": " ",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugID": 95,
                                        "_debugIsCurrentlyTiming": false,
                                        "_debugOwner": [Circular],
                                        "_debugSource": Object {
                                          "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                                          "lineNumber": 59,
                                        },
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childExpirationTime": 0,
                                        "effectTag": 0,
                                        "elementType": "br",
                                        "expirationTime": 0,
                                        "firstContextDependency": null,
                                        "firstEffect": null,
                                        "index": 7,
                                        "key": null,
                                        "lastEffect": null,
                                        "memoizedProps": Object {},
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": Object {},
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugID": 96,
                                          "_debugIsCurrentlyTiming": false,
                                          "_debugOwner": null,
                                          "_debugSource": null,
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childExpirationTime": 0,
                                          "effectTag": 0,
                                          "elementType": null,
                                          "expirationTime": 0,
                                          "firstContextDependency": null,
                                          "firstEffect": null,
                                          "index": 8,
                                          "key": null,
                                          "lastEffect": null,
                                          "memoizedProps": "sex: ",
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": "sex: ",
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugID": 97,
                                            "_debugIsCurrentlyTiming": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childExpirationTime": 0,
                                            "effectTag": 0,
                                            "elementType": null,
                                            "expirationTime": 0,
                                            "firstContextDependency": null,
                                            "firstEffect": null,
                                            "index": 9,
                                            "key": null,
                                            "lastEffect": null,
                                            "memoizedProps": "M",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "M",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": null,
                                            "stateNode": M,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": sex: ,
                                          "tag": 6,
                                          "treeBaseDuration": 0,
                                          "type": null,
                                          "updateQueue": null,
                                        },
                                        "stateNode": <br />,
                                        "tag": 5,
                                        "treeBaseDuration": 0,
                                        "type": "br",
                                        "updateQueue": null,
                                      },
                                      "stateNode":  ,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": S,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": size: ,
                                  "tag": 6,
                                  "treeBaseDuration": 0,
                                  "type": null,
                                  "updateQueue": null,
                                },
                                "stateNode": <br />,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "br",
                                "updateQueue": null,
                              },
                              "stateNode":  ,
                              "tag": 6,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": null,
                            },
                            "stateNode": Adult,
                            "tag": 6,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": null,
                          },
                          "stateNode": age: ,
                          "tag": 6,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "div",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 3,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            "age: ",
                            "Adult",
                            " ",
                            <br />,
                            "size: ",
                            "S",
                            " ",
                            <br />,
                            "sex: ",
                            "M",
                          ],
                          "className": "pet-description",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            "age: ",
                            "Adult",
                            " ",
                            <br />,
                            "size: ",
                            "S",
                            " ",
                            <br />,
                            "sex: ",
                            "M",
                          ],
                          "className": "pet-description",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <div
                          class="pet-description"
                        >
                          age: 
                          Adult
                           
                          <br />
                          size: 
                          S
                           
                          <br />
                          sex: 
                          M
                        </div>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "div",
                        "updateQueue": null,
                      },
                      "stateNode": <img
                        alt="Pet"
                        class="display-img image-2"
                        src="img3"
                      />,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "img",
                      "updateQueue": null,
                    },
                    "stateNode": <img
                      alt="Pet"
                      class="display-img image-1"
                      src="img3"
                    />,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "img",
                    "updateQueue": null,
                  },
                  "stateNode": <div>
                    <h1>
                       
                      Curly
                       
                    </h1>
                    <p
                      class="animal-type"
                    >
                        
                      Rat
                       
                    </p>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "div",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": "42642357",
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div>
                      <h1>
                         
                        Curly
                         
                      </h1>
                      <p
                        className="animal-type"
                      >
                          
                        Rat
                         
                      </p>
                    </div>,
                    <img
                      alt="Pet"
                      className="display-img image-1"
                      src="img3"
                    />,
                    <img
                      alt="Pet"
                      className="display-img image-2"
                      src="img3"
                    />,
                    <div
                      className="pet-description"
                    >
                      age: 
                      Adult
                       
                      <br />
                      size: 
                      S
                       
                      <br />
                      sex: 
                      M
                    </div>,
                  ],
                  "className": "pet-card",
                  "onClick": [Function],
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <div>
                      <h1>
                         
                        Curly
                         
                      </h1>
                      <p
                        className="animal-type"
                      >
                          
                        Rat
                         
                      </p>
                    </div>,
                    <img
                      alt="Pet"
                      className="display-img image-1"
                      src="img3"
                    />,
                    <img
                      alt="Pet"
                      className="display-img image-2"
                      src="img3"
                    />,
                    <div
                      className="pet-description"
                    >
                      age: 
                      Adult
                       
                      <br />
                      size: 
                      S
                       
                      <br />
                      sex: 
                      M
                    </div>,
                  ],
                  "className": "pet-card",
                  "onClick": [Function],
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <div
                  class="pet-card"
                >
                  <div>
                    <h1>
                       
                      Curly
                       
                    </h1>
                    <p
                      class="animal-type"
                    >
                        
                      Rat
                       
                    </p>
                  </div>
                  <img
                    alt="Pet"
                    class="display-img image-1"
                    src="img3"
                  />
                  <img
                    alt="Pet"
                    class="display-img image-2"
                    src="img3"
                  />
                  <div
                    class="pet-description"
                  >
                    age: 
                    Adult
                     
                    <br />
                    size: 
                    S
                     
                    <br />
                    sex: 
                    M
                  </div>
                </div>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "div",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "article",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 1,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <div
                    className="pet-card"
                    onClick={[Function]}
                  >
                    <div>
                      <h1>
                         
                        Curly
                         
                      </h1>
                      <p
                        className="animal-type"
                      >
                          
                        Rat
                         
                      </p>
                    </div>
                    <img
                      alt="Pet"
                      className="display-img image-1"
                      src="img3"
                    />
                    <img
                      alt="Pet"
                      className="display-img image-2"
                      src="img3"
                    />
                    <div
                      className="pet-description"
                    >
                      age: 
                      Adult
                       
                      <br />
                      size: 
                      S
                       
                      <br />
                      sex: 
                      M
                    </div>
                  </div>,
                ],
                "className": "pet-display",
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <div
                    className="pet-card"
                    onClick={[Function]}
                  >
                    <div>
                      <h1>
                         
                        Curly
                         
                      </h1>
                      <p
                        className="animal-type"
                      >
                          
                        Rat
                         
                      </p>
                    </div>
                    <img
                      alt="Pet"
                      className="display-img image-1"
                      src="img3"
                    />
                    <img
                      alt="Pet"
                      className="display-img image-2"
                      src="img3"
                    />
                    <div
                      className="pet-description"
                    >
                      age: 
                      Adult
                       
                      <br />
                      size: 
                      S
                       
                      <br />
                      sex: 
                      M
                    </div>
                  </div>,
                ],
                "className": "pet-display",
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": <article
                class="pet-display"
              >
                <div
                  class="pet-card"
                >
                  <div>
                    <h1>
                       
                      Curly
                       
                    </h1>
                    <p
                      class="animal-type"
                    >
                        
                      Rat
                       
                    </p>
                  </div>
                  <img
                    alt="Pet"
                    class="display-img image-1"
                    src="img3"
                  />
                  <img
                    alt="Pet"
                    class="display-img image-2"
                    src="img3"
                  />
                  <div
                    class="pet-description"
                  >
                    age: 
                    Adult
                     
                    <br />
                    size: 
                    S
                     
                    <br />
                    sex: 
                    M
                  </div>
                </div>
              </article>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "article",
              "updateQueue": null,
            },
            "stateNode": <form
              class="selection-form"
            >
              <p
                class="grid-item"
              >
                animal
              </p>
              <p
                class="grid-item"
              >
                age 
              </p>
              <p
                class="grid-item"
              >
                sex 
              </p>
              <select
                class="grid-item"
                name="animal"
              >
                <option
                  disabled=""
                  selected=""
                  value="all"
                >
                  all animals
                </option>
                <option
                  value="dog"
                >
                   dogs
                </option>
                <option
                  value="cat"
                >
                   cats
                </option>
                <option
                  value="rabbit"
                >
                   rabbits
                </option>
                <option
                  value="smallfurry"
                >
                   small furry animals
                </option>
                <option
                  value="barnyard"
                >
                   barnyard animals
                </option>
                <option
                  value="bird"
                >
                   birds 
                </option>
              </select>
              <select
                class="grid-item"
                name="age"
              >
                <option
                  disabled=""
                >
                  choose an age..
                </option>
                <option
                  value="Baby"
                >
                  baby
                </option>
                <option
                  value="Young"
                >
                  young
                </option>
                <option
                  value="Adult"
                >
                  adult
                </option>
                <option
                  value="Senior"
                >
                  senior
                </option>
              </select>
              <select
                class="grid-item"
                name="sex"
              >
                <option
                  value="M"
                >
                  male
                </option>
                <option
                  value="F"
                >
                  female
                </option>
              </select>
              <button
                type="submit"
              >
                 search! 
              </button>
            </form>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "form",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 0,
          "elementType": "div",
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "children": Array [
              <form
                className="selection-form"
                onSubmit={[Function]}
              >
                <p
                  className="grid-item"
                >
                  animal
                </p>
                <p
                  className="grid-item"
                >
                  age 
                </p>
                <p
                  className="grid-item"
                >
                  sex 
                </p>
                <select
                  className="grid-item"
                  defaultValue="all"
                  name="animal"
                  onChange={[Function]}
                >
                  <option
                    disabled={true}
                    value="all"
                  >
                    all animals
                  </option>
                  <option
                    value="dog"
                  >
                     dogs
                  </option>
                  <option
                    value="cat"
                  >
                     cats
                  </option>
                  <option
                    value="rabbit"
                  >
                     rabbits
                  </option>
                  <option
                    value="smallfurry"
                  >
                     small furry animals
                  </option>
                  <option
                    value="barnyard"
                  >
                     barnyard animals
                  </option>
                  <option
                    value="bird"
                  >
                     birds 
                  </option>
                </select>
                <select
                  className="grid-item"
                  name="age"
                  onChange={[Function]}
                >
                  <option
                    disabled={true}
                  >
                    choose an age..
                  </option>
                  <option
                    value="Baby"
                  >
                    baby
                  </option>
                  <option
                    value="Young"
                  >
                    young
                  </option>
                  <option
                    value="Adult"
                  >
                    adult
                  </option>
                  <option
                    value="Senior"
                  >
                    senior
                  </option>
                </select>
                <select
                  className="grid-item"
                  name="sex"
                  onChange={[Function]}
                >
                  <option
                    value="M"
                  >
                    male
                  </option>
                  <option
                    value="F"
                  >
                    female
                  </option>
                </select>
                <button
                  type="submit"
                >
                   search! 
                </button>
              </form>,
              <article
                className="pet-display"
              >
                <div
                  className="pet-card"
                  onClick={[Function]}
                >
                  <div>
                    <h1>
                       
                      Curly
                       
                    </h1>
                    <p
                      className="animal-type"
                    >
                        
                      Rat
                       
                    </p>
                  </div>
                  <img
                    alt="Pet"
                    className="display-img image-1"
                    src="img3"
                  />
                  <img
                    alt="Pet"
                    className="display-img image-2"
                    src="img3"
                  />
                  <div
                    className="pet-description"
                  >
                    age: 
                    Adult
                     
                    <br />
                    size: 
                    S
                     
                    <br />
                    sex: 
                    M
                  </div>
                </div>
              </article>,
            ],
          },
          "memoizedState": null,
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "children": Array [
              <form
                className="selection-form"
                onSubmit={[Function]}
              >
                <p
                  className="grid-item"
                >
                  animal
                </p>
                <p
                  className="grid-item"
                >
                  age 
                </p>
                <p
                  className="grid-item"
                >
                  sex 
                </p>
                <select
                  className="grid-item"
                  defaultValue="all"
                  name="animal"
                  onChange={[Function]}
                >
                  <option
                    disabled={true}
                    value="all"
                  >
                    all animals
                  </option>
                  <option
                    value="dog"
                  >
                     dogs
                  </option>
                  <option
                    value="cat"
                  >
                     cats
                  </option>
                  <option
                    value="rabbit"
                  >
                     rabbits
                  </option>
                  <option
                    value="smallfurry"
                  >
                     small furry animals
                  </option>
                  <option
                    value="barnyard"
                  >
                     barnyard animals
                  </option>
                  <option
                    value="bird"
                  >
                     birds 
                  </option>
                </select>
                <select
                  className="grid-item"
                  name="age"
                  onChange={[Function]}
                >
                  <option
                    disabled={true}
                  >
                    choose an age..
                  </option>
                  <option
                    value="Baby"
                  >
                    baby
                  </option>
                  <option
                    value="Young"
                  >
                    young
                  </option>
                  <option
                    value="Adult"
                  >
                    adult
                  </option>
                  <option
                    value="Senior"
                  >
                    senior
                  </option>
                </select>
                <select
                  className="grid-item"
                  name="sex"
                  onChange={[Function]}
                >
                  <option
                    value="M"
                  >
                    male
                  </option>
                  <option
                    value="F"
                  >
                    female
                  </option>
                </select>
                <button
                  type="submit"
                >
                   search! 
                </button>
              </form>,
              <article
                className="pet-display"
              >
                <div
                  className="pet-card"
                  onClick={[Function]}
                >
                  <div>
                    <h1>
                       
                      Curly
                       
                    </h1>
                    <p
                      className="animal-type"
                    >
                        
                      Rat
                       
                    </p>
                  </div>
                  <img
                    alt="Pet"
                    className="display-img image-1"
                    src="img3"
                  />
                  <img
                    alt="Pet"
                    className="display-img image-2"
                    src="img3"
                  />
                  <div
                    className="pet-description"
                  >
                    age: 
                    Adult
                     
                    <br />
                    size: 
                    S
                     
                    <br />
                    sex: 
                    M
                  </div>
                </div>
              </article>,
            ],
          },
          "ref": null,
          "return": [Circular],
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": <div>
            <form
              class="selection-form"
            >
              <p
                class="grid-item"
              >
                animal
              </p>
              <p
                class="grid-item"
              >
                age 
              </p>
              <p
                class="grid-item"
              >
                sex 
              </p>
              <select
                class="grid-item"
                name="animal"
              >
                <option
                  disabled=""
                  selected=""
                  value="all"
                >
                  all animals
                </option>
                <option
                  value="dog"
                >
                   dogs
                </option>
                <option
                  value="cat"
                >
                   cats
                </option>
                <option
                  value="rabbit"
                >
                   rabbits
                </option>
                <option
                  value="smallfurry"
                >
                   small furry animals
                </option>
                <option
                  value="barnyard"
                >
                   barnyard animals
                </option>
                <option
                  value="bird"
                >
                   birds 
                </option>
              </select>
              <select
                class="grid-item"
                name="age"
              >
                <option
                  disabled=""
                >
                  choose an age..
                </option>
                <option
                  value="Baby"
                >
                  baby
                </option>
                <option
                  value="Young"
                >
                  young
                </option>
                <option
                  value="Adult"
                >
                  adult
                </option>
                <option
                  value="Senior"
                >
                  senior
                </option>
              </select>
              <select
                class="grid-item"
                name="sex"
              >
                <option
                  value="M"
                >
                  male
                </option>
                <option
                  value="F"
                >
                  female
                </option>
              </select>
              <button
                type="submit"
              >
                 search! 
              </button>
            </form>
            <article
              class="pet-display"
            >
              <div
                class="pet-card"
              >
                <div>
                  <h1>
                     
                    Curly
                     
                  </h1>
                  <p
                    class="animal-type"
                  >
                      
                    Rat
                     
                  </p>
                </div>
                <img
                  alt="Pet"
                  class="display-img image-1"
                  src="img3"
                />
                <img
                  alt="Pet"
                  class="display-img image-2"
                  src="img3"
                />
                <div
                  class="pet-description"
                >
                  age: 
                  Adult
                   
                  <br />
                  size: 
                  S
                   
                  <br />
                  sex: 
                  M
                </div>
              </div>
            </article>
          </div>,
          "tag": 5,
          "treeBaseDuration": 0,
          "type": "div",
          "updateQueue": null,
        },
        "childExpirationTime": 0,
        "effectTag": 1,
        "elementType": [Function],
        "expirationTime": 0,
        "firstContextDependency": null,
        "firstEffect": null,
        "index": 0,
        "key": null,
        "lastEffect": null,
        "memoizedProps": Object {
          "addSelectedPet": [MockFunction],
          "fetchSearchedPets": [MockFunction],
          "hasErrored": "",
          "isLoadingPets": false,
          "searchedPets": Array [
            Object {
              "age": "Adult",
              "animal": "Small & Furry",
              "breed": "Rat",
              "contactInfo": Object {
                "address": "1 dog st",
                "city": "The Colony",
                "email": "bob@gmail.com",
                "state": "TX",
                "zip": "75056",
              },
              "id": "42642357",
              "name": "Curly",
              "photos": Array [
                "img1",
                "img2",
                "img3",
                "img4",
                "img5",
              ],
              "sex": "M",
              "shelterId": "TX2295",
              "size": "S",
            },
          ],
        },
        "memoizedState": Object {
          "age": "",
          "animal": "",
          "location": "",
          "sex": "",
        },
        "mode": 0,
        "nextEffect": null,
        "pendingProps": Object {
          "addSelectedPet": [MockFunction],
          "fetchSearchedPets": [MockFunction],
          "hasErrored": "",
          "isLoadingPets": false,
          "searchedPets": Array [
            Object {
              "age": "Adult",
              "animal": "Small & Furry",
              "breed": "Rat",
              "contactInfo": Object {
                "address": "1 dog st",
                "city": "The Colony",
                "email": "bob@gmail.com",
                "state": "TX",
                "zip": "75056",
              },
              "id": "42642357",
              "name": "Curly",
              "photos": Array [
                "img1",
                "img2",
                "img3",
                "img4",
                "img5",
              ],
              "sex": "M",
              "shelterId": "TX2295",
              "size": "S",
            },
          ],
        },
        "ref": null,
        "return": FiberNode {
          "_debugID": 49,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": null,
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": [Circular],
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "addSelectedPet": [MockFunction],
              "fetchSearchedPets": [MockFunction],
              "hasErrored": "",
              "isLoadingPets": false,
              "searchedPets": Array [
                Object {
                  "age": "Adult",
                  "animal": "Small & Furry",
                  "breed": "Rat",
                  "contactInfo": Object {
                    "address": "1 dog st",
                    "city": "The Colony",
                    "email": "bob@gmail.com",
                    "state": "TX",
                    "zip": "75056",
                  },
                  "id": "42642357",
                  "name": "Curly",
                  "photos": Array [
                    "img1",
                    "img2",
                    "img3",
                    "img4",
                    "img5",
                  ],
                  "sex": "M",
                  "shelterId": "TX2295",
                  "size": "S",
                },
              ],
            },
          },
          "memoizedState": Object {
            "context": null,
            "mount": true,
            "props": Object {
              "addSelectedPet": [MockFunction],
              "fetchSearchedPets": [MockFunction],
              "hasErrored": "",
              "isLoadingPets": false,
              "searchedPets": Array [
                Object {
                  "age": "Adult",
                  "animal": "Small & Furry",
                  "breed": "Rat",
                  "contactInfo": Object {
                    "address": "1 dog st",
                    "city": "The Colony",
                    "email": "bob@gmail.com",
                    "state": "TX",
                    "zip": "75056",
                  },
                  "id": "42642357",
                  "name": "Curly",
                  "photos": Array [
                    "img1",
                    "img2",
                    "img3",
                    "img4",
                    "img5",
                  ],
                  "sex": "M",
                  "shelterId": "TX2295",
                  "size": "S",
                },
              ],
            },
          },
          "mode": 0,
          "nextEffect": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <form
                      class="selection-form"
                    >
                      <p
                        class="grid-item"
                      >
                        animal
                      </p>
                      <p
                        class="grid-item"
                      >
                        age 
                      </p>
                      <p
                        class="grid-item"
                      >
                        sex 
                      </p>
                      <select
                        class="grid-item"
                        name="animal"
                      >
                        <option
                          disabled=""
                          selected=""
                          value="all"
                        >
                          all animals
                        </option>
                        <option
                          value="dog"
                        >
                           dogs
                        </option>
                        <option
                          value="cat"
                        >
                           cats
                        </option>
                        <option
                          value="rabbit"
                        >
                           rabbits
                        </option>
                        <option
                          value="smallfurry"
                        >
                           small furry animals
                        </option>
                        <option
                          value="barnyard"
                        >
                           barnyard animals
                        </option>
                        <option
                          value="bird"
                        >
                           birds 
                        </option>
                      </select>
                      <select
                        class="grid-item"
                        name="age"
                      >
                        <option
                          disabled=""
                        >
                          choose an age..
                        </option>
                        <option
                          value="Baby"
                        >
                          baby
                        </option>
                        <option
                          value="Young"
                        >
                          young
                        </option>
                        <option
                          value="Adult"
                        >
                          adult
                        </option>
                        <option
                          value="Senior"
                        >
                          senior
                        </option>
                      </select>
                      <select
                        class="grid-item"
                        name="sex"
                      >
                        <option
                          value="M"
                        >
                          male
                        </option>
                        <option
                          value="F"
                        >
                          female
                        </option>
                      </select>
                      <button
                        type="submit"
                      >
                         search! 
                      </button>
                    </form>
                    <article
                      class="pet-display"
                    >
                      <div
                        class="pet-card"
                      >
                        <div>
                          <h1>
                             
                            Curly
                             
                          </h1>
                          <p
                            class="animal-type"
                          >
                              
                            Rat
                             
                          </p>
                        </div>
                        <img
                          alt="Pet"
                          class="display-img image-1"
                          src="img3"
                        />
                        <img
                          alt="Pet"
                          class="display-img image-2"
                          src="img3"
                        />
                        <div
                          class="pet-description"
                        >
                          age: 
                          Adult
                           
                          <br />
                          size: 
                          S
                           
                          <br />
                          sex: 
                          M
                        </div>
                      </div>
                    </article>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "addSelectedPet": [MockFunction],
                          "fetchSearchedPets": [MockFunction],
                          "hasErrored": "",
                          "isLoadingPets": false,
                          "searchedPets": Array [
                            Object {
                              "age": "Adult",
                              "animal": "Small & Furry",
                              "breed": "Rat",
                              "contactInfo": Object {
                                "address": "1 dog st",
                                "city": "The Colony",
                                "email": "bob@gmail.com",
                                "state": "TX",
                                "zip": "75056",
                              },
                              "id": "42642357",
                              "name": "Curly",
                              "photos": Array [
                                "img1",
                                "img2",
                                "img3",
                                "img4",
                                "img5",
                              ],
                              "sex": "M",
                              "shelterId": "TX2295",
                              "size": "S",
                            },
                          ],
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "addSelectedPet": [MockFunction],
                          "fetchSearchedPets": [MockFunction],
                          "hasErrored": "",
                          "isLoadingPets": false,
                          "searchedPets": Array [
                            Object {
                              "age": "Adult",
                              "animal": "Small & Furry",
                              "breed": "Rat",
                              "contactInfo": Object {
                                "address": "1 dog st",
                                "city": "The Colony",
                                "email": "bob@gmail.com",
                                "state": "TX",
                                "zip": "75056",
                              },
                              "id": "42642357",
                              "name": "Curly",
                              "photos": Array [
                                "img1",
                                "img2",
                                "img3",
                                "img4",
                                "img5",
                              ],
                              "sex": "M",
                              "shelterId": "TX2295",
                              "size": "S",
                            },
                          ],
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "addSelectedPet": [MockFunction],
                    "fetchSearchedPets": [MockFunction],
                    "hasErrored": "",
                    "isLoadingPets": false,
                    "searchedPets": Array [
                      Object {
                        "age": "Adult",
                        "animal": "Small & Furry",
                        "breed": "Rat",
                        "contactInfo": Object {
                          "address": "1 dog st",
                          "city": "The Colony",
                          "email": "bob@gmail.com",
                          "state": "TX",
                          "zip": "75056",
                        },
                        "id": "42642357",
                        "name": "Curly",
                        "photos": Array [
                          "img1",
                          "img2",
                          "img3",
                          "img4",
                          "img5",
                        ],
                        "sex": "M",
                        "shelterId": "TX2295",
                        "size": "S",
                      },
                    ],
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                  <form
                    class="selection-form"
                  >
                    <p
                      class="grid-item"
                    >
                      animal
                    </p>
                    <p
                      class="grid-item"
                    >
                      age 
                    </p>
                    <p
                      class="grid-item"
                    >
                      sex 
                    </p>
                    <select
                      class="grid-item"
                      name="animal"
                    >
                      <option
                        disabled=""
                        selected=""
                        value="all"
                      >
                        all animals
                      </option>
                      <option
                        value="dog"
                      >
                         dogs
                      </option>
                      <option
                        value="cat"
                      >
                         cats
                      </option>
                      <option
                        value="rabbit"
                      >
                         rabbits
                      </option>
                      <option
                        value="smallfurry"
                      >
                         small furry animals
                      </option>
                      <option
                        value="barnyard"
                      >
                         barnyard animals
                      </option>
                      <option
                        value="bird"
                      >
                         birds 
                      </option>
                    </select>
                    <select
                      class="grid-item"
                      name="age"
                    >
                      <option
                        disabled=""
                      >
                        choose an age..
                      </option>
                      <option
                        value="Baby"
                      >
                        baby
                      </option>
                      <option
                        value="Young"
                      >
                        young
                      </option>
                      <option
                        value="Adult"
                      >
                        adult
                      </option>
                      <option
                        value="Senior"
                      >
                        senior
                      </option>
                    </select>
                    <select
                      class="grid-item"
                      name="sex"
                    >
                      <option
                        value="M"
                      >
                        male
                      </option>
                      <option
                        value="F"
                      >
                        female
                      </option>
                    </select>
                    <button
                      type="submit"
                    >
                       search! 
                    </button>
                  </form>
                  <article
                    class="pet-display"
                  >
                    <div
                      class="pet-card"
                    >
                      <div>
                        <h1>
                           
                          Curly
                           
                        </h1>
                        <p
                          class="animal-type"
                        >
                            
                          Rat
                           
                        </p>
                      </div>
                      <img
                        alt="Pet"
                        class="display-img image-1"
                        src="img3"
                      />
                      <img
                        alt="Pet"
                        class="display-img image-2"
                        src="img3"
                      />
                      <div
                        class="pet-description"
                      >
                        age: 
                        Adult
                         
                        <br />
                        size: 
                        S
                         
                        <br />
                        sex: 
                        M
                      </div>
                    </div>
                  </article>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "addSelectedPet": [MockFunction],
                      "fetchSearchedPets": [MockFunction],
                      "hasErrored": "",
                      "isLoadingPets": false,
                      "searchedPets": Array [
                        Object {
                          "age": "Adult",
                          "animal": "Small & Furry",
                          "breed": "Rat",
                          "contactInfo": Object {
                            "address": "1 dog st",
                            "city": "The Colony",
                            "email": "bob@gmail.com",
                            "state": "TX",
                            "zip": "75056",
                          },
                          "id": "42642357",
                          "name": "Curly",
                          "photos": Array [
                            "img1",
                            "img2",
                            "img3",
                            "img4",
                            "img5",
                          ],
                          "sex": "M",
                          "shelterId": "TX2295",
                          "size": "S",
                        },
                      ],
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "pendingProps": Object {
            "Component": [Function],
            "context": null,
            "props": Object {
              "addSelectedPet": [MockFunction],
              "fetchSearchedPets": [MockFunction],
              "hasErrored": "",
              "isLoadingPets": false,
              "searchedPets": Array [
                Object {
                  "age": "Adult",
                  "animal": "Small & Furry",
                  "breed": "Rat",
                  "contactInfo": Object {
                    "address": "1 dog st",
                    "city": "The Colony",
                    "email": "bob@gmail.com",
                    "state": "TX",
                    "zip": "75056",
                  },
                  "id": "42642357",
                  "name": "Curly",
                  "photos": Array [
                    "img1",
                    "img2",
                    "img3",
                    "img4",
                    "img5",
                  ],
                  "sex": "M",
                  "shelterId": "TX2295",
                  "size": "S",
                },
              ],
            },
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 47,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": [Circular],
              "child": null,
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": null,
              "expirationTime": 1073741823,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": null,
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <form
                      class="selection-form"
                    >
                      <p
                        class="grid-item"
                      >
                        animal
                      </p>
                      <p
                        class="grid-item"
                      >
                        age 
                      </p>
                      <p
                        class="grid-item"
                      >
                        sex 
                      </p>
                      <select
                        class="grid-item"
                        name="animal"
                      >
                        <option
                          disabled=""
                          selected=""
                          value="all"
                        >
                          all animals
                        </option>
                        <option
                          value="dog"
                        >
                           dogs
                        </option>
                        <option
                          value="cat"
                        >
                           cats
                        </option>
                        <option
                          value="rabbit"
                        >
                           rabbits
                        </option>
                        <option
                          value="smallfurry"
                        >
                           small furry animals
                        </option>
                        <option
                          value="barnyard"
                        >
                           barnyard animals
                        </option>
                        <option
                          value="bird"
                        >
                           birds 
                        </option>
                      </select>
                      <select
                        class="grid-item"
                        name="age"
                      >
                        <option
                          disabled=""
                        >
                          choose an age..
                        </option>
                        <option
                          value="Baby"
                        >
                          baby
                        </option>
                        <option
                          value="Young"
                        >
                          young
                        </option>
                        <option
                          value="Adult"
                        >
                          adult
                        </option>
                        <option
                          value="Senior"
                        >
                          senior
                        </option>
                      </select>
                      <select
                        class="grid-item"
                        name="sex"
                      >
                        <option
                          value="M"
                        >
                          male
                        </option>
                        <option
                          value="F"
                        >
                          female
                        </option>
                      </select>
                      <button
                        type="submit"
                      >
                         search! 
                      </button>
                    </form>
                    <article
                      class="pet-display"
                    >
                      <div
                        class="pet-card"
                      >
                        <div>
                          <h1>
                             
                            Curly
                             
                          </h1>
                          <p
                            class="animal-type"
                          >
                              
                            Rat
                             
                          </p>
                        </div>
                        <img
                          alt="Pet"
                          class="display-img image-1"
                          src="img3"
                        />
                        <img
                          alt="Pet"
                          class="display-img image-2"
                          src="img3"
                        />
                        <div
                          class="pet-description"
                        >
                          age: 
                          Adult
                           
                          <br />
                          size: 
                          S
                           
                          <br />
                          sex: 
                          M
                        </div>
                      </div>
                    </article>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": null,
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "addSelectedPet": [MockFunction],
                          "fetchSearchedPets": [MockFunction],
                          "hasErrored": "",
                          "isLoadingPets": false,
                          "searchedPets": Array [
                            Object {
                              "age": "Adult",
                              "animal": "Small & Furry",
                              "breed": "Rat",
                              "contactInfo": Object {
                                "address": "1 dog st",
                                "city": "The Colony",
                                "email": "bob@gmail.com",
                                "state": "TX",
                                "zip": "75056",
                              },
                              "id": "42642357",
                              "name": "Curly",
                              "photos": Array [
                                "img1",
                                "img2",
                                "img3",
                                "img4",
                                "img5",
                              ],
                              "sex": "M",
                              "shelterId": "TX2295",
                              "size": "S",
                            },
                          ],
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": Object {
                  "callback": null,
                  "expirationTime": 1073741823,
                  "next": null,
                  "nextEffect": null,
                  "payload": Object {
                    "element": <WrapperComponent
                      Component={[Function]}
                      context={null}
                      props={
                        Object {
                          "addSelectedPet": [MockFunction],
                          "fetchSearchedPets": [MockFunction],
                          "hasErrored": "",
                          "isLoadingPets": false,
                          "searchedPets": Array [
                            Object {
                              "age": "Adult",
                              "animal": "Small & Furry",
                              "breed": "Rat",
                              "contactInfo": Object {
                                "address": "1 dog st",
                                "city": "The Colony",
                                "email": "bob@gmail.com",
                                "state": "TX",
                                "zip": "75056",
                              },
                              "id": "42642357",
                              "name": "Curly",
                              "photos": Array [
                                "img1",
                                "img2",
                                "img3",
                                "img4",
                                "img5",
                              ],
                              "sex": "M",
                              "shelterId": "TX2295",
                              "size": "S",
                            },
                          ],
                        }
                      }
                    />,
                  },
                  "tag": 0,
                },
              },
            },
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 32,
            "elementType": null,
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": [Circular],
            "index": 0,
            "key": null,
            "lastEffect": [Circular],
            "memoizedProps": null,
            "memoizedState": Object {
              "element": <WrapperComponent
                Component={[Function]}
                context={null}
                props={
                  Object {
                    "addSelectedPet": [MockFunction],
                    "fetchSearchedPets": [MockFunction],
                    "hasErrored": "",
                    "isLoadingPets": false,
                    "searchedPets": Array [
                      Object {
                        "age": "Adult",
                        "animal": "Small & Furry",
                        "breed": "Rat",
                        "contactInfo": Object {
                          "address": "1 dog st",
                          "city": "The Colony",
                          "email": "bob@gmail.com",
                          "state": "TX",
                          "zip": "75056",
                        },
                        "id": "42642357",
                        "name": "Curly",
                        "photos": Array [
                          "img1",
                          "img2",
                          "img3",
                          "img4",
                          "img5",
                        ],
                        "sex": "M",
                        "shelterId": "TX2295",
                        "size": "S",
                      },
                    ],
                  }
                }
              />,
            },
            "mode": 0,
            "nextEffect": null,
            "pendingProps": null,
            "ref": null,
            "return": null,
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": Object {
              "containerInfo": <div>
                <div>
                  <form
                    class="selection-form"
                  >
                    <p
                      class="grid-item"
                    >
                      animal
                    </p>
                    <p
                      class="grid-item"
                    >
                      age 
                    </p>
                    <p
                      class="grid-item"
                    >
                      sex 
                    </p>
                    <select
                      class="grid-item"
                      name="animal"
                    >
                      <option
                        disabled=""
                        selected=""
                        value="all"
                      >
                        all animals
                      </option>
                      <option
                        value="dog"
                      >
                         dogs
                      </option>
                      <option
                        value="cat"
                      >
                         cats
                      </option>
                      <option
                        value="rabbit"
                      >
                         rabbits
                      </option>
                      <option
                        value="smallfurry"
                      >
                         small furry animals
                      </option>
                      <option
                        value="barnyard"
                      >
                         barnyard animals
                      </option>
                      <option
                        value="bird"
                      >
                         birds 
                      </option>
                    </select>
                    <select
                      class="grid-item"
                      name="age"
                    >
                      <option
                        disabled=""
                      >
                        choose an age..
                      </option>
                      <option
                        value="Baby"
                      >
                        baby
                      </option>
                      <option
                        value="Young"
                      >
                        young
                      </option>
                      <option
                        value="Adult"
                      >
                        adult
                      </option>
                      <option
                        value="Senior"
                      >
                        senior
                      </option>
                    </select>
                    <select
                      class="grid-item"
                      name="sex"
                    >
                      <option
                        value="M"
                      >
                        male
                      </option>
                      <option
                        value="F"
                      >
                        female
                      </option>
                    </select>
                    <button
                      type="submit"
                    >
                       search! 
                    </button>
                  </form>
                  <article
                    class="pet-display"
                  >
                    <div
                      class="pet-card"
                    >
                      <div>
                        <h1>
                           
                          Curly
                           
                        </h1>
                        <p
                          class="animal-type"
                        >
                            
                          Rat
                           
                        </p>
                      </div>
                      <img
                        alt="Pet"
                        class="display-img image-1"
                        src="img3"
                      />
                      <img
                        alt="Pet"
                        class="display-img image-2"
                        src="img3"
                      />
                      <div
                        class="pet-description"
                      >
                        age: 
                        Adult
                         
                        <br />
                        size: 
                        S
                         
                        <br />
                        sex: 
                        M
                      </div>
                    </div>
                  </article>
                </div>
              </div>,
              "context": Object {},
              "current": [Circular],
              "didError": false,
              "earliestPendingTime": 0,
              "earliestSuspendedTime": 0,
              "expirationTime": 0,
              "finishedWork": null,
              "firstBatch": null,
              "hydrate": false,
              "interactionThreadID": 12,
              "latestPendingTime": 0,
              "latestPingedTime": 0,
              "latestSuspendedTime": 0,
              "memoizedInteractions": Set {},
              "nextExpirationTimeToWorkOn": 0,
              "nextScheduledRoot": null,
              "pendingChildren": null,
              "pendingCommitExpirationTime": 0,
              "pendingContext": null,
              "pendingInteractionMap": Map {},
              "pingCache": null,
              "timeoutHandle": -1,
            },
            "tag": 3,
            "treeBaseDuration": 0,
            "type": null,
            "updateQueue": Object {
              "baseState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "addSelectedPet": [MockFunction],
                      "fetchSearchedPets": [MockFunction],
                      "hasErrored": "",
                      "isLoadingPets": false,
                      "searchedPets": Array [
                        Object {
                          "age": "Adult",
                          "animal": "Small & Furry",
                          "breed": "Rat",
                          "contactInfo": Object {
                            "address": "1 dog st",
                            "city": "The Colony",
                            "email": "bob@gmail.com",
                            "state": "TX",
                            "zip": "75056",
                          },
                          "id": "42642357",
                          "name": "Curly",
                          "photos": Array [
                            "img1",
                            "img2",
                            "img3",
                            "img4",
                            "img5",
                          ],
                          "sex": "M",
                          "shelterId": "TX2295",
                          "size": "S",
                        },
                      ],
                    }
                  }
                />,
              },
              "firstCapturedEffect": null,
              "firstCapturedUpdate": null,
              "firstEffect": null,
              "firstUpdate": null,
              "lastCapturedEffect": null,
              "lastCapturedUpdate": null,
              "lastEffect": null,
              "lastUpdate": null,
            },
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": WrapperComponent {
            "_reactInternalFiber": [Circular],
            "_reactInternalInstance": Object {},
            "context": Object {},
            "props": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "addSelectedPet": [MockFunction],
                "fetchSearchedPets": [MockFunction],
                "hasErrored": "",
                "isLoadingPets": false,
                "searchedPets": Array [
                  Object {
                    "age": "Adult",
                    "animal": "Small & Furry",
                    "breed": "Rat",
                    "contactInfo": Object {
                      "address": "1 dog st",
                      "city": "The Colony",
                      "email": "bob@gmail.com",
                      "state": "TX",
                      "zip": "75056",
                    },
                    "id": "42642357",
                    "name": "Curly",
                    "photos": Array [
                      "img1",
                      "img2",
                      "img3",
                      "img4",
                      "img5",
                    ],
                    "sex": "M",
                    "shelterId": "TX2295",
                    "size": "S",
                  },
                ],
              },
            },
            "refs": Object {},
            "state": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "addSelectedPet": [MockFunction],
                "fetchSearchedPets": [MockFunction],
                "hasErrored": "",
                "isLoadingPets": false,
                "searchedPets": Array [
                  Object {
                    "age": "Adult",
                    "animal": "Small & Furry",
                    "breed": "Rat",
                    "contactInfo": Object {
                      "address": "1 dog st",
                      "city": "The Colony",
                      "email": "bob@gmail.com",
                      "state": "TX",
                      "zip": "75056",
                    },
                    "id": "42642357",
                    "name": "Curly",
                    "photos": Array [
                      "img1",
                      "img2",
                      "img3",
                      "img4",
                      "img5",
                    ],
                    "sex": "M",
                    "shelterId": "TX2295",
                    "size": "S",
                  },
                ],
              },
            },
            "updater": Object {
              "enqueueForceUpdate": [Function],
              "enqueueReplaceState": [Function],
              "enqueueSetState": [Function],
              "isMounted": [Function],
            },
          },
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "selfBaseDuration": 0,
        "sibling": null,
        "stateNode": [Circular],
        "tag": 1,
        "treeBaseDuration": 0,
        "type": [Function],
        "updateQueue": null,
      },
      "_reactInternalInstance": Object {},
      "context": Object {},
      "displayMore": [Function],
      "handleChange": [Function],
      "handleSubmit": [Function],
      "props": Object {
        "addSelectedPet": [MockFunction],
        "fetchSearchedPets": [MockFunction],
        "hasErrored": "",
        "isLoadingPets": false,
        "searchedPets": Array [
          Object {
            "age": "Adult",
            "animal": "Small & Furry",
            "breed": "Rat",
            "contactInfo": Object {
              "address": "1 dog st",
              "city": "The Colony",
              "email": "bob@gmail.com",
              "state": "TX",
              "zip": "75056",
            },
            "id": "42642357",
            "name": "Curly",
            "photos": Array [
              "img1",
              "img2",
              "img3",
              "img4",
              "img5",
            ],
            "sex": "M",
            "shelterId": "TX2295",
            "size": "S",
          },
        ],
      },
      "refs": Object {},
      "state": Object {
        "age": "",
        "animal": "",
        "location": "",
        "sex": "",
      },
      "updater": Object {
        "enqueueForceUpdate": [Function],
        "enqueueReplaceState": [Function],
        "enqueueSetState": [Function],
        "isMounted": [Function],
      },
    },
    "key": undefined,
    "nodeType": "class",
    "props": Object {
      "addSelectedPet": [MockFunction],
      "fetchSearchedPets": [MockFunction],
      "hasErrored": "",
      "isLoadingPets": false,
      "searchedPets": Array [
        Object {
          "age": "Adult",
          "animal": "Small & Furry",
          "breed": "Rat",
          "contactInfo": Object {
            "address": "1 dog st",
            "city": "The Colony",
            "email": "bob@gmail.com",
            "state": "TX",
            "zip": "75056",
          },
          "id": "42642357",
          "name": "Curly",
          "photos": Array [
            "img1",
            "img2",
            "img3",
            "img4",
            "img5",
          ],
          "sex": "M",
          "shelterId": "TX2295",
          "size": "S",
        },
      ],
    },
    "ref": null,
    "rendered": Object {
      "instance": <div>
        <form
          class="selection-form"
        >
          <p
            class="grid-item"
          >
            animal
          </p>
          <p
            class="grid-item"
          >
            age 
          </p>
          <p
            class="grid-item"
          >
            sex 
          </p>
          <select
            class="grid-item"
            name="animal"
          >
            <option
              disabled=""
              selected=""
              value="all"
            >
              all animals
            </option>
            <option
              value="dog"
            >
               dogs
            </option>
            <option
              value="cat"
            >
               cats
            </option>
            <option
              value="rabbit"
            >
               rabbits
            </option>
            <option
              value="smallfurry"
            >
               small furry animals
            </option>
            <option
              value="barnyard"
            >
               barnyard animals
            </option>
            <option
              value="bird"
            >
               birds 
            </option>
          </select>
          <select
            class="grid-item"
            name="age"
          >
            <option
              disabled=""
            >
              choose an age..
            </option>
            <option
              value="Baby"
            >
              baby
            </option>
            <option
              value="Young"
            >
              young
            </option>
            <option
              value="Adult"
            >
              adult
            </option>
            <option
              value="Senior"
            >
              senior
            </option>
          </select>
          <select
            class="grid-item"
            name="sex"
          >
            <option
              value="M"
            >
              male
            </option>
            <option
              value="F"
            >
              female
            </option>
          </select>
          <button
            type="submit"
          >
             search! 
          </button>
        </form>
        <article
          class="pet-display"
        >
          <div
            class="pet-card"
          >
            <div>
              <h1>
                 
                Curly
                 
              </h1>
              <p
                class="animal-type"
              >
                  
                Rat
                 
              </p>
            </div>
            <img
              alt="Pet"
              class="display-img image-1"
              src="img3"
            />
            <img
              alt="Pet"
              class="display-img image-2"
              src="img3"
            />
            <div
              class="pet-description"
            >
              age: 
              Adult
               
              <br />
              size: 
              S
               
              <br />
              sex: 
              M
            </div>
          </div>
        </article>
      </div>,
      "key": undefined,
      "nodeType": "host",
      "props": Object {
        "children": Array [
          <form
            className="selection-form"
            onSubmit={[Function]}
          >
            <p
              className="grid-item"
            >
              animal
            </p>
            <p
              className="grid-item"
            >
              age 
            </p>
            <p
              className="grid-item"
            >
              sex 
            </p>
            <select
              className="grid-item"
              defaultValue="all"
              name="animal"
              onChange={[Function]}
            >
              <option
                disabled={true}
                value="all"
              >
                all animals
              </option>
              <option
                value="dog"
              >
                 dogs
              </option>
              <option
                value="cat"
              >
                 cats
              </option>
              <option
                value="rabbit"
              >
                 rabbits
              </option>
              <option
                value="smallfurry"
              >
                 small furry animals
              </option>
              <option
                value="barnyard"
              >
                 barnyard animals
              </option>
              <option
                value="bird"
              >
                 birds 
              </option>
            </select>
            <select
              className="grid-item"
              name="age"
              onChange={[Function]}
            >
              <option
                disabled={true}
              >
                choose an age..
              </option>
              <option
                value="Baby"
              >
                baby
              </option>
              <option
                value="Young"
              >
                young
              </option>
              <option
                value="Adult"
              >
                adult
              </option>
              <option
                value="Senior"
              >
                senior
              </option>
            </select>
            <select
              className="grid-item"
              name="sex"
              onChange={[Function]}
            >
              <option
                value="M"
              >
                male
              </option>
              <option
                value="F"
              >
                female
              </option>
            </select>
            <button
              type="submit"
            >
               search! 
            </button>
          </form>,
          <article
            className="pet-display"
          >
            <div
              className="pet-card"
              onClick={[Function]}
            >
              <div>
                <h1>
                   
                  Curly
                   
                </h1>
                <p
                  className="animal-type"
                >
                    
                  Rat
                   
                </p>
              </div>
              <img
                alt="Pet"
                className="display-img image-1"
                src="img3"
              />
              <img
                alt="Pet"
                className="display-img image-2"
                src="img3"
              />
              <div
                className="pet-description"
              >
                age: 
                Adult
                 
                <br />
                size: 
                S
                 
                <br />
                sex: 
                M
              </div>
            </div>
          </article>,
        ],
      },
      "ref": null,
      "rendered": Array [
        Object {
          "instance": <form
            class="selection-form"
          >
            <p
              class="grid-item"
            >
              animal
            </p>
            <p
              class="grid-item"
            >
              age 
            </p>
            <p
              class="grid-item"
            >
              sex 
            </p>
            <select
              class="grid-item"
              name="animal"
            >
              <option
                disabled=""
                selected=""
                value="all"
              >
                all animals
              </option>
              <option
                value="dog"
              >
                 dogs
              </option>
              <option
                value="cat"
              >
                 cats
              </option>
              <option
                value="rabbit"
              >
                 rabbits
              </option>
              <option
                value="smallfurry"
              >
                 small furry animals
              </option>
              <option
                value="barnyard"
              >
                 barnyard animals
              </option>
              <option
                value="bird"
              >
                 birds 
              </option>
            </select>
            <select
              class="grid-item"
              name="age"
            >
              <option
                disabled=""
              >
                choose an age..
              </option>
              <option
                value="Baby"
              >
                baby
              </option>
              <option
                value="Young"
              >
                young
              </option>
              <option
                value="Adult"
              >
                adult
              </option>
              <option
                value="Senior"
              >
                senior
              </option>
            </select>
            <select
              class="grid-item"
              name="sex"
            >
              <option
                value="M"
              >
                male
              </option>
              <option
                value="F"
              >
                female
              </option>
            </select>
            <button
              type="submit"
            >
               search! 
            </button>
          </form>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <p
                className="grid-item"
              >
                animal
              </p>,
              <p
                className="grid-item"
              >
                age 
              </p>,
              <p
                className="grid-item"
              >
                sex 
              </p>,
              <select
                className="grid-item"
                defaultValue="all"
                name="animal"
                onChange={[Function]}
              >
                <option
                  disabled={true}
                  value="all"
                >
                  all animals
                </option>
                <option
                  value="dog"
                >
                   dogs
                </option>
                <option
                  value="cat"
                >
                   cats
                </option>
                <option
                  value="rabbit"
                >
                   rabbits
                </option>
                <option
                  value="smallfurry"
                >
                   small furry animals
                </option>
                <option
                  value="barnyard"
                >
                   barnyard animals
                </option>
                <option
                  value="bird"
                >
                   birds 
                </option>
              </select>,
              <select
                className="grid-item"
                name="age"
                onChange={[Function]}
              >
                <option
                  disabled={true}
                >
                  choose an age..
                </option>
                <option
                  value="Baby"
                >
                  baby
                </option>
                <option
                  value="Young"
                >
                  young
                </option>
                <option
                  value="Adult"
                >
                  adult
                </option>
                <option
                  value="Senior"
                >
                  senior
                </option>
              </select>,
              <select
                className="grid-item"
                name="sex"
                onChange={[Function]}
              >
                <option
                  value="M"
                >
                  male
                </option>
                <option
                  value="F"
                >
                  female
                </option>
              </select>,
              <button
                type="submit"
              >
                 search! 
              </button>,
            ],
            "className": "selection-form",
            "onSubmit": [Function],
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <p
                class="grid-item"
              >
                animal
              </p>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "animal",
                "className": "grid-item",
              },
              "ref": null,
              "rendered": Array [
                "animal",
              ],
              "type": "p",
            },
            Object {
              "instance": <p
                class="grid-item"
              >
                age 
              </p>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "age ",
                "className": "grid-item",
              },
              "ref": null,
              "rendered": Array [
                "age ",
              ],
              "type": "p",
            },
            Object {
              "instance": <p
                class="grid-item"
              >
                sex 
              </p>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": "sex ",
                "className": "grid-item",
              },
              "ref": null,
              "rendered": Array [
                "sex ",
              ],
              "type": "p",
            },
            Object {
              "instance": <select
                class="grid-item"
                name="animal"
              >
                <option
                  disabled=""
                  selected=""
                  value="all"
                >
                  all animals
                </option>
                <option
                  value="dog"
                >
                   dogs
                </option>
                <option
                  value="cat"
                >
                   cats
                </option>
                <option
                  value="rabbit"
                >
                   rabbits
                </option>
                <option
                  value="smallfurry"
                >
                   small furry animals
                </option>
                <option
                  value="barnyard"
                >
                   barnyard animals
                </option>
                <option
                  value="bird"
                >
                   birds 
                </option>
              </select>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    disabled={true}
                    value="all"
                  >
                    all animals
                  </option>,
                  <option
                    value="dog"
                  >
                     dogs
                  </option>,
                  <option
                    value="cat"
                  >
                     cats
                  </option>,
                  <option
                    value="rabbit"
                  >
                     rabbits
                  </option>,
                  <option
                    value="smallfurry"
                  >
                     small furry animals
                  </option>,
                  <option
                    value="barnyard"
                  >
                     barnyard animals
                  </option>,
                  <option
                    value="bird"
                  >
                     birds 
                  </option>,
                ],
                "className": "grid-item",
                "defaultValue": "all",
                "name": "animal",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <option
                    disabled=""
                    selected=""
                    value="all"
                  >
                    all animals
                  </option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "all animals",
                    "disabled": true,
                    "value": "all",
                  },
                  "ref": null,
                  "rendered": Array [
                    "all animals",
                  ],
                  "type": "option",
                },
                Object {
                  "instance": <option
                    value="dog"
                  >
                     dogs
                  </option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " dogs",
                    "value": "dog",
                  },
                  "ref": null,
                  "rendered": Array [
                    " dogs",
                  ],
                  "type": "option",
                },
                Object {
                  "instance": <option
                    value="cat"
                  >
                     cats
                  </option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " cats",
                    "value": "cat",
                  },
                  "ref": null,
                  "rendered": Array [
                    " cats",
                  ],
                  "type": "option",
                },
                Object {
                  "instance": <option
                    value="rabbit"
                  >
                     rabbits
                  </option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " rabbits",
                    "value": "rabbit",
                  },
                  "ref": null,
                  "rendered": Array [
                    " rabbits",
                  ],
                  "type": "option",
                },
                Object {
                  "instance": <option
                    value="smallfurry"
                  >
                     small furry animals
                  </option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " small furry animals",
                    "value": "smallfurry",
                  },
                  "ref": null,
                  "rendered": Array [
                    " small furry animals",
                  ],
                  "type": "option",
                },
                Object {
                  "instance": <option
                    value="barnyard"
                  >
                     barnyard animals
                  </option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " barnyard animals",
                    "value": "barnyard",
                  },
                  "ref": null,
                  "rendered": Array [
                    " barnyard animals",
                  ],
                  "type": "option",
                },
                Object {
                  "instance": <option
                    value="bird"
                  >
                     birds 
                  </option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": " birds ",
                    "value": "bird",
                  },
                  "ref": null,
                  "rendered": Array [
                    " birds ",
                  ],
                  "type": "option",
                },
              ],
              "type": "select",
            },
            Object {
              "instance": <select
                class="grid-item"
                name="age"
              >
                <option
                  disabled=""
                >
                  choose an age..
                </option>
                <option
                  value="Baby"
                >
                  baby
                </option>
                <option
                  value="Young"
                >
                  young
                </option>
                <option
                  value="Adult"
                >
                  adult
                </option>
                <option
                  value="Senior"
                >
                  senior
                </option>
              </select>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    disabled={true}
                  >
                    choose an age..
                  </option>,
                  <option
                    value="Baby"
                  >
                    baby
                  </option>,
                  <option
                    value="Young"
                  >
                    young
                  </option>,
                  <option
                    value="Adult"
                  >
                    adult
                  </option>,
                  <option
                    value="Senior"
                  >
                    senior
                  </option>,
                ],
                "className": "grid-item",
                "name": "age",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <option
                    disabled=""
                  >
                    choose an age..
                  </option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "choose an age..",
                    "disabled": true,
                  },
                  "ref": null,
                  "rendered": Array [
                    "choose an age..",
                  ],
                  "type": "option",
                },
                Object {
                  "instance": <option
                    value="Baby"
                  >
                    baby
                  </option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "baby",
                    "value": "Baby",
                  },
                  "ref": null,
                  "rendered": Array [
                    "baby",
                  ],
                  "type": "option",
                },
                Object {
                  "instance": <option
                    value="Young"
                  >
                    young
                  </option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "young",
                    "value": "Young",
                  },
                  "ref": null,
                  "rendered": Array [
                    "young",
                  ],
                  "type": "option",
                },
                Object {
                  "instance": <option
                    value="Adult"
                  >
                    adult
                  </option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "adult",
                    "value": "Adult",
                  },
                  "ref": null,
                  "rendered": Array [
                    "adult",
                  ],
                  "type": "option",
                },
                Object {
                  "instance": <option
                    value="Senior"
                  >
                    senior
                  </option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "senior",
                    "value": "Senior",
                  },
                  "ref": null,
                  "rendered": Array [
                    "senior",
                  ],
                  "type": "option",
                },
              ],
              "type": "select",
            },
            Object {
              "instance": <select
                class="grid-item"
                name="sex"
              >
                <option
                  value="M"
                >
                  male
                </option>
                <option
                  value="F"
                >
                  female
                </option>
              </select>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <option
                    value="M"
                  >
                    male
                  </option>,
                  <option
                    value="F"
                  >
                    female
                  </option>,
                ],
                "className": "grid-item",
                "name": "sex",
                "onChange": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <option
                    value="M"
                  >
                    male
                  </option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "male",
                    "value": "M",
                  },
                  "ref": null,
                  "rendered": Array [
                    "male",
                  ],
                  "type": "option",
                },
                Object {
                  "instance": <option
                    value="F"
                  >
                    female
                  </option>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": "female",
                    "value": "F",
                  },
                  "ref": null,
                  "rendered": Array [
                    "female",
                  ],
                  "type": "option",
                },
              ],
              "type": "select",
            },
            Object {
              "instance": <button
                type="submit"
              >
                 search! 
              </button>,
              "key": undefined,
              "nodeType": "host",
              "props": Object {
                "children": " search! ",
                "type": "submit",
              },
              "ref": null,
              "rendered": Array [
                " search! ",
              ],
              "type": "button",
            },
          ],
          "type": "form",
        },
        Object {
          "instance": <article
            class="pet-display"
          >
            <div
              class="pet-card"
            >
              <div>
                <h1>
                   
                  Curly
                   
                </h1>
                <p
                  class="animal-type"
                >
                    
                  Rat
                   
                </p>
              </div>
              <img
                alt="Pet"
                class="display-img image-1"
                src="img3"
              />
              <img
                alt="Pet"
                class="display-img image-2"
                src="img3"
              />
              <div
                class="pet-description"
              >
                age: 
                Adult
                 
                <br />
                size: 
                S
                 
                <br />
                sex: 
                M
              </div>
            </div>
          </article>,
          "key": undefined,
          "nodeType": "host",
          "props": Object {
            "children": Array [
              <div
                className="pet-card"
                onClick={[Function]}
              >
                <div>
                  <h1>
                     
                    Curly
                     
                  </h1>
                  <p
                    className="animal-type"
                  >
                      
                    Rat
                     
                  </p>
                </div>
                <img
                  alt="Pet"
                  className="display-img image-1"
                  src="img3"
                />
                <img
                  alt="Pet"
                  className="display-img image-2"
                  src="img3"
                />
                <div
                  className="pet-description"
                >
                  age: 
                  Adult
                   
                  <br />
                  size: 
                  S
                   
                  <br />
                  sex: 
                  M
                </div>
              </div>,
            ],
            "className": "pet-display",
          },
          "ref": null,
          "rendered": Array [
            Object {
              "instance": <div
                class="pet-card"
              >
                <div>
                  <h1>
                     
                    Curly
                     
                  </h1>
                  <p
                    class="animal-type"
                  >
                      
                    Rat
                     
                  </p>
                </div>
                <img
                  alt="Pet"
                  class="display-img image-1"
                  src="img3"
                />
                <img
                  alt="Pet"
                  class="display-img image-2"
                  src="img3"
                />
                <div
                  class="pet-description"
                >
                  age: 
                  Adult
                   
                  <br />
                  size: 
                  S
                   
                  <br />
                  sex: 
                  M
                </div>
              </div>,
              "key": "42642357",
              "nodeType": "host",
              "props": Object {
                "children": Array [
                  <div>
                    <h1>
                       
                      Curly
                       
                    </h1>
                    <p
                      className="animal-type"
                    >
                        
                      Rat
                       
                    </p>
                  </div>,
                  <img
                    alt="Pet"
                    className="display-img image-1"
                    src="img3"
                  />,
                  <img
                    alt="Pet"
                    className="display-img image-2"
                    src="img3"
                  />,
                  <div
                    className="pet-description"
                  >
                    age: 
                    Adult
                     
                    <br />
                    size: 
                    S
                     
                    <br />
                    sex: 
                    M
                  </div>,
                ],
                "className": "pet-card",
                "onClick": [Function],
              },
              "ref": null,
              "rendered": Array [
                Object {
                  "instance": <div>
                    <h1>
                       
                      Curly
                       
                    </h1>
                    <p
                      class="animal-type"
                    >
                        
                      Rat
                       
                    </p>
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      <h1>
                         
                        Curly
                         
                      </h1>,
                      <p
                        className="animal-type"
                      >
                          
                        Rat
                         
                      </p>,
                    ],
                  },
                  "ref": null,
                  "rendered": Array [
                    Object {
                      "instance": <h1>
                         
                        Curly
                         
                      </h1>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          " ",
                          "Curly",
                          " ",
                        ],
                      },
                      "ref": null,
                      "rendered": Array [
                        " ",
                        "Curly",
                        " ",
                      ],
                      "type": "h1",
                    },
                    Object {
                      "instance": <p
                        class="animal-type"
                      >
                          
                        Rat
                         
                      </p>,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {
                        "children": Array [
                          "  ",
                          "Rat",
                          " ",
                        ],
                        "className": "animal-type",
                      },
                      "ref": null,
                      "rendered": Array [
                        "  ",
                        "Rat",
                        " ",
                      ],
                      "type": "p",
                    },
                  ],
                  "type": "div",
                },
                Object {
                  "instance": <img
                    alt="Pet"
                    class="display-img image-1"
                    src="img3"
                  />,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "alt": "Pet",
                    "className": "display-img image-1",
                    "src": "img3",
                  },
                  "ref": null,
                  "rendered": Array [
                    undefined,
                  ],
                  "type": "img",
                },
                Object {
                  "instance": <img
                    alt="Pet"
                    class="display-img image-2"
                    src="img3"
                  />,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "alt": "Pet",
                    "className": "display-img image-2",
                    "src": "img3",
                  },
                  "ref": null,
                  "rendered": Array [
                    undefined,
                  ],
                  "type": "img",
                },
                Object {
                  "instance": <div
                    class="pet-description"
                  >
                    age: 
                    Adult
                     
                    <br />
                    size: 
                    S
                     
                    <br />
                    sex: 
                    M
                  </div>,
                  "key": undefined,
                  "nodeType": "host",
                  "props": Object {
                    "children": Array [
                      "age: ",
                      "Adult",
                      " ",
                      <br />,
                      "size: ",
                      "S",
                      " ",
                      <br />,
                      "sex: ",
                      "M",
                    ],
                    "className": "pet-description",
                  },
                  "ref": null,
                  "rendered": Array [
                    "age: ",
                    "Adult",
                    " ",
                    Object {
                      "instance": <br />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "br",
                    },
                    "size: ",
                    "S",
                    " ",
                    Object {
                      "instance": <br />,
                      "key": undefined,
                      "nodeType": "host",
                      "props": Object {},
                      "ref": null,
                      "rendered": Array [
                        undefined,
                      ],
                      "type": "br",
                    },
                    "sex: ",
                    "M",
                  ],
                  "type": "div",
                },
              ],
              "type": "div",
            },
          ],
          "type": "article",
        },
      ],
      "type": "div",
    },
    "type": [Function],
  },
  Symbol(enzyme.__nodes__): Array [
    Object {
      "instance": PetDisplay {
        "_reactInternalFiber": FiberNode {
          "_debugID": 50,
          "_debugIsCurrentlyTiming": false,
          "_debugOwner": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "addSelectedPet": [MockFunction],
                "fetchSearchedPets": [MockFunction],
                "hasErrored": "",
                "isLoadingPets": false,
                "searchedPets": Array [
                  Object {
                    "age": "Adult",
                    "animal": "Small & Furry",
                    "breed": "Rat",
                    "contactInfo": Object {
                      "address": "1 dog st",
                      "city": "The Colony",
                      "email": "bob@gmail.com",
                      "state": "TX",
                      "zip": "75056",
                    },
                    "id": "42642357",
                    "name": "Curly",
                    "photos": Array [
                      "img1",
                      "img2",
                      "img3",
                      "img4",
                      "img5",
                    ],
                    "sex": "M",
                    "shelterId": "TX2295",
                    "size": "S",
                  },
                ],
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "addSelectedPet": [MockFunction],
                "fetchSearchedPets": [MockFunction],
                "hasErrored": "",
                "isLoadingPets": false,
                "searchedPets": Array [
                  Object {
                    "age": "Adult",
                    "animal": "Small & Furry",
                    "breed": "Rat",
                    "contactInfo": Object {
                      "address": "1 dog st",
                      "city": "The Colony",
                      "email": "bob@gmail.com",
                      "state": "TX",
                      "zip": "75056",
                    },
                    "id": "42642357",
                    "name": "Curly",
                    "photos": Array [
                      "img1",
                      "img2",
                      "img3",
                      "img4",
                      "img5",
                    ],
                    "sex": "M",
                    "shelterId": "TX2295",
                    "size": "S",
                  },
                ],
              },
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <form
                        class="selection-form"
                      >
                        <p
                          class="grid-item"
                        >
                          animal
                        </p>
                        <p
                          class="grid-item"
                        >
                          age 
                        </p>
                        <p
                          class="grid-item"
                        >
                          sex 
                        </p>
                        <select
                          class="grid-item"
                          name="animal"
                        >
                          <option
                            disabled=""
                            selected=""
                            value="all"
                          >
                            all animals
                          </option>
                          <option
                            value="dog"
                          >
                             dogs
                          </option>
                          <option
                            value="cat"
                          >
                             cats
                          </option>
                          <option
                            value="rabbit"
                          >
                             rabbits
                          </option>
                          <option
                            value="smallfurry"
                          >
                             small furry animals
                          </option>
                          <option
                            value="barnyard"
                          >
                             barnyard animals
                          </option>
                          <option
                            value="bird"
                          >
                             birds 
                          </option>
                        </select>
                        <select
                          class="grid-item"
                          name="age"
                        >
                          <option
                            disabled=""
                          >
                            choose an age..
                          </option>
                          <option
                            value="Baby"
                          >
                            baby
                          </option>
                          <option
                            value="Young"
                          >
                            young
                          </option>
                          <option
                            value="Adult"
                          >
                            adult
                          </option>
                          <option
                            value="Senior"
                          >
                            senior
                          </option>
                        </select>
                        <select
                          class="grid-item"
                          name="sex"
                        >
                          <option
                            value="M"
                          >
                            male
                          </option>
                          <option
                            value="F"
                          >
                            female
                          </option>
                        </select>
                        <button
                          type="submit"
                        >
                           search! 
                        </button>
                      </form>
                      <article
                        class="pet-display"
                      >
                        <div
                          class="pet-card"
                        >
                          <div>
                            <h1>
                               
                              Curly
                               
                            </h1>
                            <p
                              class="animal-type"
                            >
                                
                              Rat
                               
                            </p>
                          </div>
                          <img
                            alt="Pet"
                            class="display-img image-1"
                            src="img3"
                          />
                          <img
                            alt="Pet"
                            class="display-img image-2"
                            src="img3"
                          />
                          <div
                            class="pet-description"
                          >
                            age: 
                            Adult
                             
                            <br />
                            size: 
                            S
                             
                            <br />
                            sex: 
                            M
                          </div>
                        </div>
                      </article>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "addSelectedPet": [MockFunction],
                            "fetchSearchedPets": [MockFunction],
                            "hasErrored": "",
                            "isLoadingPets": false,
                            "searchedPets": Array [
                              Object {
                                "age": "Adult",
                                "animal": "Small & Furry",
                                "breed": "Rat",
                                "contactInfo": Object {
                                  "address": "1 dog st",
                                  "city": "The Colony",
                                  "email": "bob@gmail.com",
                                  "state": "TX",
                                  "zip": "75056",
                                },
                                "id": "42642357",
                                "name": "Curly",
                                "photos": Array [
                                  "img1",
                                  "img2",
                                  "img3",
                                  "img4",
                                  "img5",
                                ],
                                "sex": "M",
                                "shelterId": "TX2295",
                                "size": "S",
                              },
                            ],
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "addSelectedPet": [MockFunction],
                            "fetchSearchedPets": [MockFunction],
                            "hasErrored": "",
                            "isLoadingPets": false,
                            "searchedPets": Array [
                              Object {
                                "age": "Adult",
                                "animal": "Small & Furry",
                                "breed": "Rat",
                                "contactInfo": Object {
                                  "address": "1 dog st",
                                  "city": "The Colony",
                                  "email": "bob@gmail.com",
                                  "state": "TX",
                                  "zip": "75056",
                                },
                                "id": "42642357",
                                "name": "Curly",
                                "photos": Array [
                                  "img1",
                                  "img2",
                                  "img3",
                                  "img4",
                                  "img5",
                                ],
                                "sex": "M",
                                "shelterId": "TX2295",
                                "size": "S",
                              },
                            ],
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "addSelectedPet": [MockFunction],
                      "fetchSearchedPets": [MockFunction],
                      "hasErrored": "",
                      "isLoadingPets": false,
                      "searchedPets": Array [
                        Object {
                          "age": "Adult",
                          "animal": "Small & Furry",
                          "breed": "Rat",
                          "contactInfo": Object {
                            "address": "1 dog st",
                            "city": "The Colony",
                            "email": "bob@gmail.com",
                            "state": "TX",
                            "zip": "75056",
                          },
                          "id": "42642357",
                          "name": "Curly",
                          "photos": Array [
                            "img1",
                            "img2",
                            "img3",
                            "img4",
                            "img5",
                          ],
                          "sex": "M",
                          "shelterId": "TX2295",
                          "size": "S",
                        },
                      ],
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <form
                      class="selection-form"
                    >
                      <p
                        class="grid-item"
                      >
                        animal
                      </p>
                      <p
                        class="grid-item"
                      >
                        age 
                      </p>
                      <p
                        class="grid-item"
                      >
                        sex 
                      </p>
                      <select
                        class="grid-item"
                        name="animal"
                      >
                        <option
                          disabled=""
                          selected=""
                          value="all"
                        >
                          all animals
                        </option>
                        <option
                          value="dog"
                        >
                           dogs
                        </option>
                        <option
                          value="cat"
                        >
                           cats
                        </option>
                        <option
                          value="rabbit"
                        >
                           rabbits
                        </option>
                        <option
                          value="smallfurry"
                        >
                           small furry animals
                        </option>
                        <option
                          value="barnyard"
                        >
                           barnyard animals
                        </option>
                        <option
                          value="bird"
                        >
                           birds 
                        </option>
                      </select>
                      <select
                        class="grid-item"
                        name="age"
                      >
                        <option
                          disabled=""
                        >
                          choose an age..
                        </option>
                        <option
                          value="Baby"
                        >
                          baby
                        </option>
                        <option
                          value="Young"
                        >
                          young
                        </option>
                        <option
                          value="Adult"
                        >
                          adult
                        </option>
                        <option
                          value="Senior"
                        >
                          senior
                        </option>
                      </select>
                      <select
                        class="grid-item"
                        name="sex"
                      >
                        <option
                          value="M"
                        >
                          male
                        </option>
                        <option
                          value="F"
                        >
                          female
                        </option>
                      </select>
                      <button
                        type="submit"
                      >
                         search! 
                      </button>
                    </form>
                    <article
                      class="pet-display"
                    >
                      <div
                        class="pet-card"
                      >
                        <div>
                          <h1>
                             
                            Curly
                             
                          </h1>
                          <p
                            class="animal-type"
                          >
                              
                            Rat
                             
                          </p>
                        </div>
                        <img
                          alt="Pet"
                          class="display-img image-1"
                          src="img3"
                        />
                        <img
                          alt="Pet"
                          class="display-img image-2"
                          src="img3"
                        />
                        <div
                          class="pet-description"
                        >
                          age: 
                          Adult
                           
                          <br />
                          size: 
                          S
                           
                          <br />
                          sex: 
                          M
                        </div>
                      </div>
                    </article>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "addSelectedPet": [MockFunction],
                        "fetchSearchedPets": [MockFunction],
                        "hasErrored": "",
                        "isLoadingPets": false,
                        "searchedPets": Array [
                          Object {
                            "age": "Adult",
                            "animal": "Small & Furry",
                            "breed": "Rat",
                            "contactInfo": Object {
                              "address": "1 dog st",
                              "city": "The Colony",
                              "email": "bob@gmail.com",
                              "state": "TX",
                              "zip": "75056",
                            },
                            "id": "42642357",
                            "name": "Curly",
                            "photos": Array [
                              "img1",
                              "img2",
                              "img3",
                              "img4",
                              "img5",
                            ],
                            "sex": "M",
                            "shelterId": "TX2295",
                            "size": "S",
                          },
                        ],
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "addSelectedPet": [MockFunction],
                "fetchSearchedPets": [MockFunction],
                "hasErrored": "",
                "isLoadingPets": false,
                "searchedPets": Array [
                  Object {
                    "age": "Adult",
                    "animal": "Small & Furry",
                    "breed": "Rat",
                    "contactInfo": Object {
                      "address": "1 dog st",
                      "city": "The Colony",
                      "email": "bob@gmail.com",
                      "state": "TX",
                      "zip": "75056",
                    },
                    "id": "42642357",
                    "name": "Curly",
                    "photos": Array [
                      "img1",
                      "img2",
                      "img3",
                      "img4",
                      "img5",
                    ],
                    "sex": "M",
                    "shelterId": "TX2295",
                    "size": "S",
                  },
                ],
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <form
                        class="selection-form"
                      >
                        <p
                          class="grid-item"
                        >
                          animal
                        </p>
                        <p
                          class="grid-item"
                        >
                          age 
                        </p>
                        <p
                          class="grid-item"
                        >
                          sex 
                        </p>
                        <select
                          class="grid-item"
                          name="animal"
                        >
                          <option
                            disabled=""
                            selected=""
                            value="all"
                          >
                            all animals
                          </option>
                          <option
                            value="dog"
                          >
                             dogs
                          </option>
                          <option
                            value="cat"
                          >
                             cats
                          </option>
                          <option
                            value="rabbit"
                          >
                             rabbits
                          </option>
                          <option
                            value="smallfurry"
                          >
                             small furry animals
                          </option>
                          <option
                            value="barnyard"
                          >
                             barnyard animals
                          </option>
                          <option
                            value="bird"
                          >
                             birds 
                          </option>
                        </select>
                        <select
                          class="grid-item"
                          name="age"
                        >
                          <option
                            disabled=""
                          >
                            choose an age..
                          </option>
                          <option
                            value="Baby"
                          >
                            baby
                          </option>
                          <option
                            value="Young"
                          >
                            young
                          </option>
                          <option
                            value="Adult"
                          >
                            adult
                          </option>
                          <option
                            value="Senior"
                          >
                            senior
                          </option>
                        </select>
                        <select
                          class="grid-item"
                          name="sex"
                        >
                          <option
                            value="M"
                          >
                            male
                          </option>
                          <option
                            value="F"
                          >
                            female
                          </option>
                        </select>
                        <button
                          type="submit"
                        >
                           search! 
                        </button>
                      </form>
                      <article
                        class="pet-display"
                      >
                        <div
                          class="pet-card"
                        >
                          <div>
                            <h1>
                               
                              Curly
                               
                            </h1>
                            <p
                              class="animal-type"
                            >
                                
                              Rat
                               
                            </p>
                          </div>
                          <img
                            alt="Pet"
                            class="display-img image-1"
                            src="img3"
                          />
                          <img
                            alt="Pet"
                            class="display-img image-2"
                            src="img3"
                          />
                          <div
                            class="pet-description"
                          >
                            age: 
                            Adult
                             
                            <br />
                            size: 
                            S
                             
                            <br />
                            sex: 
                            M
                          </div>
                        </div>
                      </article>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "addSelectedPet": [MockFunction],
                            "fetchSearchedPets": [MockFunction],
                            "hasErrored": "",
                            "isLoadingPets": false,
                            "searchedPets": Array [
                              Object {
                                "age": "Adult",
                                "animal": "Small & Furry",
                                "breed": "Rat",
                                "contactInfo": Object {
                                  "address": "1 dog st",
                                  "city": "The Colony",
                                  "email": "bob@gmail.com",
                                  "state": "TX",
                                  "zip": "75056",
                                },
                                "id": "42642357",
                                "name": "Curly",
                                "photos": Array [
                                  "img1",
                                  "img2",
                                  "img3",
                                  "img4",
                                  "img5",
                                ],
                                "sex": "M",
                                "shelterId": "TX2295",
                                "size": "S",
                              },
                            ],
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "addSelectedPet": [MockFunction],
                            "fetchSearchedPets": [MockFunction],
                            "hasErrored": "",
                            "isLoadingPets": false,
                            "searchedPets": Array [
                              Object {
                                "age": "Adult",
                                "animal": "Small & Furry",
                                "breed": "Rat",
                                "contactInfo": Object {
                                  "address": "1 dog st",
                                  "city": "The Colony",
                                  "email": "bob@gmail.com",
                                  "state": "TX",
                                  "zip": "75056",
                                },
                                "id": "42642357",
                                "name": "Curly",
                                "photos": Array [
                                  "img1",
                                  "img2",
                                  "img3",
                                  "img4",
                                  "img5",
                                ],
                                "sex": "M",
                                "shelterId": "TX2295",
                                "size": "S",
                              },
                            ],
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "addSelectedPet": [MockFunction],
                      "fetchSearchedPets": [MockFunction],
                      "hasErrored": "",
                      "isLoadingPets": false,
                      "searchedPets": Array [
                        Object {
                          "age": "Adult",
                          "animal": "Small & Furry",
                          "breed": "Rat",
                          "contactInfo": Object {
                            "address": "1 dog st",
                            "city": "The Colony",
                            "email": "bob@gmail.com",
                            "state": "TX",
                            "zip": "75056",
                          },
                          "id": "42642357",
                          "name": "Curly",
                          "photos": Array [
                            "img1",
                            "img2",
                            "img3",
                            "img4",
                            "img5",
                          ],
                          "sex": "M",
                          "shelterId": "TX2295",
                          "size": "S",
                        },
                      ],
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <form
                      class="selection-form"
                    >
                      <p
                        class="grid-item"
                      >
                        animal
                      </p>
                      <p
                        class="grid-item"
                      >
                        age 
                      </p>
                      <p
                        class="grid-item"
                      >
                        sex 
                      </p>
                      <select
                        class="grid-item"
                        name="animal"
                      >
                        <option
                          disabled=""
                          selected=""
                          value="all"
                        >
                          all animals
                        </option>
                        <option
                          value="dog"
                        >
                           dogs
                        </option>
                        <option
                          value="cat"
                        >
                           cats
                        </option>
                        <option
                          value="rabbit"
                        >
                           rabbits
                        </option>
                        <option
                          value="smallfurry"
                        >
                           small furry animals
                        </option>
                        <option
                          value="barnyard"
                        >
                           barnyard animals
                        </option>
                        <option
                          value="bird"
                        >
                           birds 
                        </option>
                      </select>
                      <select
                        class="grid-item"
                        name="age"
                      >
                        <option
                          disabled=""
                        >
                          choose an age..
                        </option>
                        <option
                          value="Baby"
                        >
                          baby
                        </option>
                        <option
                          value="Young"
                        >
                          young
                        </option>
                        <option
                          value="Adult"
                        >
                          adult
                        </option>
                        <option
                          value="Senior"
                        >
                          senior
                        </option>
                      </select>
                      <select
                        class="grid-item"
                        name="sex"
                      >
                        <option
                          value="M"
                        >
                          male
                        </option>
                        <option
                          value="F"
                        >
                          female
                        </option>
                      </select>
                      <button
                        type="submit"
                      >
                         search! 
                      </button>
                    </form>
                    <article
                      class="pet-display"
                    >
                      <div
                        class="pet-card"
                      >
                        <div>
                          <h1>
                             
                            Curly
                             
                          </h1>
                          <p
                            class="animal-type"
                          >
                              
                            Rat
                             
                          </p>
                        </div>
                        <img
                          alt="Pet"
                          class="display-img image-1"
                          src="img3"
                        />
                        <img
                          alt="Pet"
                          class="display-img image-2"
                          src="img3"
                        />
                        <div
                          class="pet-description"
                        >
                          age: 
                          Adult
                           
                          <br />
                          size: 
                          S
                           
                          <br />
                          sex: 
                          M
                        </div>
                      </div>
                    </article>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "addSelectedPet": [MockFunction],
                        "fetchSearchedPets": [MockFunction],
                        "hasErrored": "",
                        "isLoadingPets": false,
                        "searchedPets": Array [
                          Object {
                            "age": "Adult",
                            "animal": "Small & Furry",
                            "breed": "Rat",
                            "contactInfo": Object {
                              "address": "1 dog st",
                              "city": "The Colony",
                              "email": "bob@gmail.com",
                              "state": "TX",
                              "zip": "75056",
                            },
                            "id": "42642357",
                            "name": "Curly",
                            "photos": Array [
                              "img1",
                              "img2",
                              "img3",
                              "img4",
                              "img5",
                            ],
                            "sex": "M",
                            "shelterId": "TX2295",
                            "size": "S",
                          },
                        ],
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "addSelectedPet": [MockFunction],
                  "fetchSearchedPets": [MockFunction],
                  "hasErrored": "",
                  "isLoadingPets": false,
                  "searchedPets": Array [
                    Object {
                      "age": "Adult",
                      "animal": "Small & Furry",
                      "breed": "Rat",
                      "contactInfo": Object {
                        "address": "1 dog st",
                        "city": "The Colony",
                        "email": "bob@gmail.com",
                        "state": "TX",
                        "zip": "75056",
                      },
                      "id": "42642357",
                      "name": "Curly",
                      "photos": Array [
                        "img1",
                        "img2",
                        "img3",
                        "img4",
                        "img5",
                      ],
                      "sex": "M",
                      "shelterId": "TX2295",
                      "size": "S",
                    },
                  ],
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "addSelectedPet": [MockFunction],
                  "fetchSearchedPets": [MockFunction],
                  "hasErrored": "",
                  "isLoadingPets": false,
                  "searchedPets": Array [
                    Object {
                      "age": "Adult",
                      "animal": "Small & Furry",
                      "breed": "Rat",
                      "contactInfo": Object {
                        "address": "1 dog st",
                        "city": "The Colony",
                        "email": "bob@gmail.com",
                        "state": "TX",
                        "zip": "75056",
                      },
                      "id": "42642357",
                      "name": "Curly",
                      "photos": Array [
                        "img1",
                        "img2",
                        "img3",
                        "img4",
                        "img5",
                      ],
                      "sex": "M",
                      "shelterId": "TX2295",
                      "size": "S",
                    },
                  ],
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "_debugSource": null,
          "actualDuration": 0,
          "actualStartTime": -1,
          "alternate": null,
          "child": FiberNode {
            "_debugID": 51,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": [Circular],
            "_debugSource": Object {
              "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
              "lineNumber": 74,
            },
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": FiberNode {
              "_debugID": 52,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": [Circular],
              "_debugSource": Object {
                "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                "lineNumber": 75,
              },
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": null,
              "child": FiberNode {
                "_debugID": 54,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                  "lineNumber": 76,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "p",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": "animal",
                  "className": "grid-item",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": "animal",
                  "className": "grid-item",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": FiberNode {
                  "_debugID": 55,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                    "lineNumber": 77,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": null,
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "p",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 1,
                  "key": null,
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": "age ",
                    "className": "grid-item",
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": "age ",
                    "className": "grid-item",
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": FiberNode {
                    "_debugID": 56,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                      "lineNumber": 78,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": null,
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "p",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 2,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": "sex ",
                      "className": "grid-item",
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": "sex ",
                      "className": "grid-item",
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 57,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                        "lineNumber": 79,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 61,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                          "lineNumber": 80,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "option",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": "all animals",
                          "disabled": true,
                          "value": "all",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": "all animals",
                          "disabled": true,
                          "value": "all",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 62,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                            "lineNumber": 81,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "option",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": " dogs",
                            "value": "dog",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": " dogs",
                            "value": "dog",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 63,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                              "lineNumber": 82,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "option",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": " cats",
                              "value": "cat",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": " cats",
                              "value": "cat",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 64,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                                "lineNumber": 83,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "option",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 3,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": " rabbits",
                                "value": "rabbit",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": " rabbits",
                                "value": "rabbit",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 65,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                                  "lineNumber": 84,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "option",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 4,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": " small furry animals",
                                  "value": "smallfurry",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": " small furry animals",
                                  "value": "smallfurry",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugID": 66,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                                    "lineNumber": 85,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "elementType": "option",
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 5,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": " barnyard animals",
                                    "value": "barnyard",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": " barnyard animals",
                                    "value": "barnyard",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugID": 67,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": [Circular],
                                    "_debugSource": Object {
                                      "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                                      "lineNumber": 86,
                                    },
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childExpirationTime": 0,
                                    "effectTag": 0,
                                    "elementType": "option",
                                    "expirationTime": 0,
                                    "firstContextDependency": null,
                                    "firstEffect": null,
                                    "index": 6,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": Object {
                                      "children": " birds ",
                                      "value": "bird",
                                    },
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": Object {
                                      "children": " birds ",
                                      "value": "bird",
                                    },
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": null,
                                    "stateNode": <option
                                      value="bird"
                                    >
                                       birds 
                                    </option>,
                                    "tag": 5,
                                    "treeBaseDuration": 0,
                                    "type": "option",
                                    "updateQueue": null,
                                  },
                                  "stateNode": <option
                                    value="barnyard"
                                  >
                                     barnyard animals
                                  </option>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "option",
                                  "updateQueue": null,
                                },
                                "stateNode": <option
                                  value="smallfurry"
                                >
                                   small furry animals
                                </option>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "option",
                                "updateQueue": null,
                              },
                              "stateNode": <option
                                value="rabbit"
                              >
                                 rabbits
                              </option>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "option",
                              "updateQueue": null,
                            },
                            "stateNode": <option
                              value="cat"
                            >
                               cats
                            </option>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "option",
                            "updateQueue": null,
                          },
                          "stateNode": <option
                            value="dog"
                          >
                             dogs
                          </option>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "option",
                          "updateQueue": null,
                        },
                        "stateNode": <option
                          disabled=""
                          selected=""
                          value="all"
                        >
                          all animals
                        </option>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "option",
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "select",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 3,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          <option
                            disabled={true}
                            value="all"
                          >
                            all animals
                          </option>,
                          <option
                            value="dog"
                          >
                             dogs
                          </option>,
                          <option
                            value="cat"
                          >
                             cats
                          </option>,
                          <option
                            value="rabbit"
                          >
                             rabbits
                          </option>,
                          <option
                            value="smallfurry"
                          >
                             small furry animals
                          </option>,
                          <option
                            value="barnyard"
                          >
                             barnyard animals
                          </option>,
                          <option
                            value="bird"
                          >
                             birds 
                          </option>,
                        ],
                        "className": "grid-item",
                        "defaultValue": "all",
                        "name": "animal",
                        "onChange": [Function],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          <option
                            disabled={true}
                            value="all"
                          >
                            all animals
                          </option>,
                          <option
                            value="dog"
                          >
                             dogs
                          </option>,
                          <option
                            value="cat"
                          >
                             cats
                          </option>,
                          <option
                            value="rabbit"
                          >
                             rabbits
                          </option>,
                          <option
                            value="smallfurry"
                          >
                             small furry animals
                          </option>,
                          <option
                            value="barnyard"
                          >
                             barnyard animals
                          </option>,
                          <option
                            value="bird"
                          >
                             birds 
                          </option>,
                        ],
                        "className": "grid-item",
                        "defaultValue": "all",
                        "name": "animal",
                        "onChange": [Function],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 58,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                          "lineNumber": 88,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 68,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                            "lineNumber": 89,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "option",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": "choose an age..",
                            "disabled": true,
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": "choose an age..",
                            "disabled": true,
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 69,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                              "lineNumber": 90,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "option",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "baby",
                              "value": "Baby",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "baby",
                              "value": "Baby",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 70,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                                "lineNumber": 91,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "option",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 2,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "young",
                                "value": "Young",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "young",
                                "value": "Young",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 71,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": [Circular],
                                "_debugSource": Object {
                                  "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                                  "lineNumber": 92,
                                },
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": "option",
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 3,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": Object {
                                  "children": "adult",
                                  "value": "Adult",
                                },
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": Object {
                                  "children": "adult",
                                  "value": "Adult",
                                },
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugID": 72,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                                    "lineNumber": 93,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "elementType": "option",
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 4,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {
                                    "children": "senior",
                                    "value": "Senior",
                                  },
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {
                                    "children": "senior",
                                    "value": "Senior",
                                  },
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": null,
                                  "stateNode": <option
                                    value="Senior"
                                  >
                                    senior
                                  </option>,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "option",
                                  "updateQueue": null,
                                },
                                "stateNode": <option
                                  value="Adult"
                                >
                                  adult
                                </option>,
                                "tag": 5,
                                "treeBaseDuration": 0,
                                "type": "option",
                                "updateQueue": null,
                              },
                              "stateNode": <option
                                value="Young"
                              >
                                young
                              </option>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "option",
                              "updateQueue": null,
                            },
                            "stateNode": <option
                              value="Baby"
                            >
                              baby
                            </option>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "option",
                            "updateQueue": null,
                          },
                          "stateNode": <option
                            disabled=""
                          >
                            choose an age..
                          </option>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "option",
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "select",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 4,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            <option
                              disabled={true}
                            >
                              choose an age..
                            </option>,
                            <option
                              value="Baby"
                            >
                              baby
                            </option>,
                            <option
                              value="Young"
                            >
                              young
                            </option>,
                            <option
                              value="Adult"
                            >
                              adult
                            </option>,
                            <option
                              value="Senior"
                            >
                              senior
                            </option>,
                          ],
                          "className": "grid-item",
                          "name": "age",
                          "onChange": [Function],
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            <option
                              disabled={true}
                            >
                              choose an age..
                            </option>,
                            <option
                              value="Baby"
                            >
                              baby
                            </option>,
                            <option
                              value="Young"
                            >
                              young
                            </option>,
                            <option
                              value="Adult"
                            >
                              adult
                            </option>,
                            <option
                              value="Senior"
                            >
                              senior
                            </option>,
                          ],
                          "className": "grid-item",
                          "name": "age",
                          "onChange": [Function],
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 59,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                            "lineNumber": 95,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 73,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                              "lineNumber": 96,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "option",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": "male",
                              "value": "M",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": "male",
                              "value": "M",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 74,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": [Circular],
                              "_debugSource": Object {
                                "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                                "lineNumber": 97,
                              },
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": "option",
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": Object {
                                "children": "female",
                                "value": "F",
                              },
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": Object {
                                "children": "female",
                                "value": "F",
                              },
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode": <option
                                value="F"
                              >
                                female
                              </option>,
                              "tag": 5,
                              "treeBaseDuration": 0,
                              "type": "option",
                              "updateQueue": null,
                            },
                            "stateNode": <option
                              value="M"
                            >
                              male
                            </option>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "option",
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "select",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 5,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              <option
                                value="M"
                              >
                                male
                              </option>,
                              <option
                                value="F"
                              >
                                female
                              </option>,
                            ],
                            "className": "grid-item",
                            "name": "sex",
                            "onChange": [Function],
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              <option
                                value="M"
                              >
                                male
                              </option>,
                              <option
                                value="F"
                              >
                                female
                              </option>,
                            ],
                            "className": "grid-item",
                            "name": "sex",
                            "onChange": [Function],
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 60,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": [Circular],
                            "_debugSource": Object {
                              "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                              "lineNumber": 99,
                            },
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": "button",
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 6,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": Object {
                              "children": " search! ",
                              "type": "submit",
                            },
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": Object {
                              "children": " search! ",
                              "type": "submit",
                            },
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode": <button
                              type="submit"
                            >
                               search! 
                            </button>,
                            "tag": 5,
                            "treeBaseDuration": 0,
                            "type": "button",
                            "updateQueue": null,
                          },
                          "stateNode": <select
                            class="grid-item"
                            name="sex"
                          >
                            <option
                              value="M"
                            >
                              male
                            </option>
                            <option
                              value="F"
                            >
                              female
                            </option>
                          </select>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "select",
                          "updateQueue": null,
                        },
                        "stateNode": <select
                          class="grid-item"
                          name="age"
                        >
                          <option
                            disabled=""
                          >
                            choose an age..
                          </option>
                          <option
                            value="Baby"
                          >
                            baby
                          </option>
                          <option
                            value="Young"
                          >
                            young
                          </option>
                          <option
                            value="Adult"
                          >
                            adult
                          </option>
                          <option
                            value="Senior"
                          >
                            senior
                          </option>
                        </select>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "select",
                        "updateQueue": null,
                      },
                      "stateNode": <select
                        class="grid-item"
                        name="animal"
                      >
                        <option
                          disabled=""
                          selected=""
                          value="all"
                        >
                          all animals
                        </option>
                        <option
                          value="dog"
                        >
                           dogs
                        </option>
                        <option
                          value="cat"
                        >
                           cats
                        </option>
                        <option
                          value="rabbit"
                        >
                           rabbits
                        </option>
                        <option
                          value="smallfurry"
                        >
                           small furry animals
                        </option>
                        <option
                          value="barnyard"
                        >
                           barnyard animals
                        </option>
                        <option
                          value="bird"
                        >
                           birds 
                        </option>
                      </select>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "select",
                      "updateQueue": null,
                    },
                    "stateNode": <p
                      class="grid-item"
                    >
                      sex 
                    </p>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "p",
                    "updateQueue": null,
                  },
                  "stateNode": <p
                    class="grid-item"
                  >
                    age 
                  </p>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "p",
                  "updateQueue": null,
                },
                "stateNode": <p
                  class="grid-item"
                >
                  animal
                </p>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "p",
                "updateQueue": null,
              },
              "childExpirationTime": 0,
              "effectTag": 0,
              "elementType": "form",
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": null,
              "index": 0,
              "key": null,
              "lastEffect": null,
              "memoizedProps": Object {
                "children": Array [
                  <p
                    className="grid-item"
                  >
                    animal
                  </p>,
                  <p
                    className="grid-item"
                  >
                    age 
                  </p>,
                  <p
                    className="grid-item"
                  >
                    sex 
                  </p>,
                  <select
                    className="grid-item"
                    defaultValue="all"
                    name="animal"
                    onChange={[Function]}
                  >
                    <option
                      disabled={true}
                      value="all"
                    >
                      all animals
                    </option>
                    <option
                      value="dog"
                    >
                       dogs
                    </option>
                    <option
                      value="cat"
                    >
                       cats
                    </option>
                    <option
                      value="rabbit"
                    >
                       rabbits
                    </option>
                    <option
                      value="smallfurry"
                    >
                       small furry animals
                    </option>
                    <option
                      value="barnyard"
                    >
                       barnyard animals
                    </option>
                    <option
                      value="bird"
                    >
                       birds 
                    </option>
                  </select>,
                  <select
                    className="grid-item"
                    name="age"
                    onChange={[Function]}
                  >
                    <option
                      disabled={true}
                    >
                      choose an age..
                    </option>
                    <option
                      value="Baby"
                    >
                      baby
                    </option>
                    <option
                      value="Young"
                    >
                      young
                    </option>
                    <option
                      value="Adult"
                    >
                      adult
                    </option>
                    <option
                      value="Senior"
                    >
                      senior
                    </option>
                  </select>,
                  <select
                    className="grid-item"
                    name="sex"
                    onChange={[Function]}
                  >
                    <option
                      value="M"
                    >
                      male
                    </option>
                    <option
                      value="F"
                    >
                      female
                    </option>
                  </select>,
                  <button
                    type="submit"
                  >
                     search! 
                  </button>,
                ],
                "className": "selection-form",
                "onSubmit": [Function],
              },
              "memoizedState": null,
              "mode": 0,
              "nextEffect": null,
              "pendingProps": Object {
                "children": Array [
                  <p
                    className="grid-item"
                  >
                    animal
                  </p>,
                  <p
                    className="grid-item"
                  >
                    age 
                  </p>,
                  <p
                    className="grid-item"
                  >
                    sex 
                  </p>,
                  <select
                    className="grid-item"
                    defaultValue="all"
                    name="animal"
                    onChange={[Function]}
                  >
                    <option
                      disabled={true}
                      value="all"
                    >
                      all animals
                    </option>
                    <option
                      value="dog"
                    >
                       dogs
                    </option>
                    <option
                      value="cat"
                    >
                       cats
                    </option>
                    <option
                      value="rabbit"
                    >
                       rabbits
                    </option>
                    <option
                      value="smallfurry"
                    >
                       small furry animals
                    </option>
                    <option
                      value="barnyard"
                    >
                       barnyard animals
                    </option>
                    <option
                      value="bird"
                    >
                       birds 
                    </option>
                  </select>,
                  <select
                    className="grid-item"
                    name="age"
                    onChange={[Function]}
                  >
                    <option
                      disabled={true}
                    >
                      choose an age..
                    </option>
                    <option
                      value="Baby"
                    >
                      baby
                    </option>
                    <option
                      value="Young"
                    >
                      young
                    </option>
                    <option
                      value="Adult"
                    >
                      adult
                    </option>
                    <option
                      value="Senior"
                    >
                      senior
                    </option>
                  </select>,
                  <select
                    className="grid-item"
                    name="sex"
                    onChange={[Function]}
                  >
                    <option
                      value="M"
                    >
                      male
                    </option>
                    <option
                      value="F"
                    >
                      female
                    </option>
                  </select>,
                  <button
                    type="submit"
                  >
                     search! 
                  </button>,
                ],
                "className": "selection-form",
                "onSubmit": [Function],
              },
              "ref": null,
              "return": [Circular],
              "selfBaseDuration": 0,
              "sibling": FiberNode {
                "_debugID": 53,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": [Circular],
                "_debugSource": Object {
                  "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                  "lineNumber": 101,
                },
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": null,
                "child": FiberNode {
                  "_debugID": 75,
                  "_debugIsCurrentlyTiming": false,
                  "_debugOwner": [Circular],
                  "_debugSource": Object {
                    "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                    "lineNumber": 50,
                  },
                  "actualDuration": 0,
                  "actualStartTime": -1,
                  "alternate": null,
                  "child": FiberNode {
                    "_debugID": 76,
                    "_debugIsCurrentlyTiming": false,
                    "_debugOwner": [Circular],
                    "_debugSource": Object {
                      "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                      "lineNumber": 51,
                    },
                    "actualDuration": 0,
                    "actualStartTime": -1,
                    "alternate": null,
                    "child": FiberNode {
                      "_debugID": 80,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                        "lineNumber": 52,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": FiberNode {
                        "_debugID": 82,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": null,
                        "_debugSource": null,
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": null,
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 0,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": " ",
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": " ",
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 83,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 1,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": "Curly",
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": "Curly",
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 84,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": null,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 2,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": " ",
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": " ",
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": null,
                            "stateNode":  ,
                            "tag": 6,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": null,
                          },
                          "stateNode": Curly,
                          "tag": 6,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": null,
                        },
                        "stateNode":  ,
                        "tag": 6,
                        "treeBaseDuration": 0,
                        "type": null,
                        "updateQueue": null,
                      },
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "h1",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 0,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "children": Array [
                          " ",
                          "Curly",
                          " ",
                        ],
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "children": Array [
                          " ",
                          "Curly",
                          " ",
                        ],
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 81,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                          "lineNumber": 53,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": FiberNode {
                          "_debugID": 85,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": null,
                          "_debugSource": null,
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": null,
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": null,
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 0,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": "  ",
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": "  ",
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": FiberNode {
                            "_debugID": 86,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": null,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 1,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": "Rat",
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": "Rat",
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 87,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 2,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": " ",
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": " ",
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": null,
                              "stateNode":  ,
                              "tag": 6,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": null,
                            },
                            "stateNode": Rat,
                            "tag": 6,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": null,
                          },
                          "stateNode":   ,
                          "tag": 6,
                          "treeBaseDuration": 0,
                          "type": null,
                          "updateQueue": null,
                        },
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "p",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 1,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "children": Array [
                            "  ",
                            "Rat",
                            " ",
                          ],
                          "className": "animal-type",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "children": Array [
                            "  ",
                            "Rat",
                            " ",
                          ],
                          "className": "animal-type",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": null,
                        "stateNode": <p
                          class="animal-type"
                        >
                            
                          Rat
                           
                        </p>,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "p",
                        "updateQueue": null,
                      },
                      "stateNode": <h1>
                         
                        Curly
                         
                      </h1>,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "h1",
                      "updateQueue": null,
                    },
                    "childExpirationTime": 0,
                    "effectTag": 0,
                    "elementType": "div",
                    "expirationTime": 0,
                    "firstContextDependency": null,
                    "firstEffect": null,
                    "index": 0,
                    "key": null,
                    "lastEffect": null,
                    "memoizedProps": Object {
                      "children": Array [
                        <h1>
                           
                          Curly
                           
                        </h1>,
                        <p
                          className="animal-type"
                        >
                            
                          Rat
                           
                        </p>,
                      ],
                    },
                    "memoizedState": null,
                    "mode": 0,
                    "nextEffect": null,
                    "pendingProps": Object {
                      "children": Array [
                        <h1>
                           
                          Curly
                           
                        </h1>,
                        <p
                          className="animal-type"
                        >
                            
                          Rat
                           
                        </p>,
                      ],
                    },
                    "ref": null,
                    "return": [Circular],
                    "selfBaseDuration": 0,
                    "sibling": FiberNode {
                      "_debugID": 77,
                      "_debugIsCurrentlyTiming": false,
                      "_debugOwner": [Circular],
                      "_debugSource": Object {
                        "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                        "lineNumber": 55,
                      },
                      "actualDuration": 0,
                      "actualStartTime": -1,
                      "alternate": null,
                      "child": null,
                      "childExpirationTime": 0,
                      "effectTag": 0,
                      "elementType": "img",
                      "expirationTime": 0,
                      "firstContextDependency": null,
                      "firstEffect": null,
                      "index": 1,
                      "key": null,
                      "lastEffect": null,
                      "memoizedProps": Object {
                        "alt": "Pet",
                        "className": "display-img image-1",
                        "src": "img3",
                      },
                      "memoizedState": null,
                      "mode": 0,
                      "nextEffect": null,
                      "pendingProps": Object {
                        "alt": "Pet",
                        "className": "display-img image-1",
                        "src": "img3",
                      },
                      "ref": null,
                      "return": [Circular],
                      "selfBaseDuration": 0,
                      "sibling": FiberNode {
                        "_debugID": 78,
                        "_debugIsCurrentlyTiming": false,
                        "_debugOwner": [Circular],
                        "_debugSource": Object {
                          "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                          "lineNumber": 56,
                        },
                        "actualDuration": 0,
                        "actualStartTime": -1,
                        "alternate": null,
                        "child": null,
                        "childExpirationTime": 0,
                        "effectTag": 0,
                        "elementType": "img",
                        "expirationTime": 0,
                        "firstContextDependency": null,
                        "firstEffect": null,
                        "index": 2,
                        "key": null,
                        "lastEffect": null,
                        "memoizedProps": Object {
                          "alt": "Pet",
                          "className": "display-img image-2",
                          "src": "img3",
                        },
                        "memoizedState": null,
                        "mode": 0,
                        "nextEffect": null,
                        "pendingProps": Object {
                          "alt": "Pet",
                          "className": "display-img image-2",
                          "src": "img3",
                        },
                        "ref": null,
                        "return": [Circular],
                        "selfBaseDuration": 0,
                        "sibling": FiberNode {
                          "_debugID": 79,
                          "_debugIsCurrentlyTiming": false,
                          "_debugOwner": [Circular],
                          "_debugSource": Object {
                            "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                            "lineNumber": 57,
                          },
                          "actualDuration": 0,
                          "actualStartTime": -1,
                          "alternate": null,
                          "child": FiberNode {
                            "_debugID": 88,
                            "_debugIsCurrentlyTiming": false,
                            "_debugOwner": null,
                            "_debugSource": null,
                            "actualDuration": 0,
                            "actualStartTime": -1,
                            "alternate": null,
                            "child": null,
                            "childExpirationTime": 0,
                            "effectTag": 0,
                            "elementType": null,
                            "expirationTime": 0,
                            "firstContextDependency": null,
                            "firstEffect": null,
                            "index": 0,
                            "key": null,
                            "lastEffect": null,
                            "memoizedProps": "age: ",
                            "memoizedState": null,
                            "mode": 0,
                            "nextEffect": null,
                            "pendingProps": "age: ",
                            "ref": null,
                            "return": [Circular],
                            "selfBaseDuration": 0,
                            "sibling": FiberNode {
                              "_debugID": 89,
                              "_debugIsCurrentlyTiming": false,
                              "_debugOwner": null,
                              "_debugSource": null,
                              "actualDuration": 0,
                              "actualStartTime": -1,
                              "alternate": null,
                              "child": null,
                              "childExpirationTime": 0,
                              "effectTag": 0,
                              "elementType": null,
                              "expirationTime": 0,
                              "firstContextDependency": null,
                              "firstEffect": null,
                              "index": 1,
                              "key": null,
                              "lastEffect": null,
                              "memoizedProps": "Adult",
                              "memoizedState": null,
                              "mode": 0,
                              "nextEffect": null,
                              "pendingProps": "Adult",
                              "ref": null,
                              "return": [Circular],
                              "selfBaseDuration": 0,
                              "sibling": FiberNode {
                                "_debugID": 90,
                                "_debugIsCurrentlyTiming": false,
                                "_debugOwner": null,
                                "_debugSource": null,
                                "actualDuration": 0,
                                "actualStartTime": -1,
                                "alternate": null,
                                "child": null,
                                "childExpirationTime": 0,
                                "effectTag": 0,
                                "elementType": null,
                                "expirationTime": 0,
                                "firstContextDependency": null,
                                "firstEffect": null,
                                "index": 2,
                                "key": null,
                                "lastEffect": null,
                                "memoizedProps": " ",
                                "memoizedState": null,
                                "mode": 0,
                                "nextEffect": null,
                                "pendingProps": " ",
                                "ref": null,
                                "return": [Circular],
                                "selfBaseDuration": 0,
                                "sibling": FiberNode {
                                  "_debugID": 91,
                                  "_debugIsCurrentlyTiming": false,
                                  "_debugOwner": [Circular],
                                  "_debugSource": Object {
                                    "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                                    "lineNumber": 58,
                                  },
                                  "actualDuration": 0,
                                  "actualStartTime": -1,
                                  "alternate": null,
                                  "child": null,
                                  "childExpirationTime": 0,
                                  "effectTag": 0,
                                  "elementType": "br",
                                  "expirationTime": 0,
                                  "firstContextDependency": null,
                                  "firstEffect": null,
                                  "index": 3,
                                  "key": null,
                                  "lastEffect": null,
                                  "memoizedProps": Object {},
                                  "memoizedState": null,
                                  "mode": 0,
                                  "nextEffect": null,
                                  "pendingProps": Object {},
                                  "ref": null,
                                  "return": [Circular],
                                  "selfBaseDuration": 0,
                                  "sibling": FiberNode {
                                    "_debugID": 92,
                                    "_debugIsCurrentlyTiming": false,
                                    "_debugOwner": null,
                                    "_debugSource": null,
                                    "actualDuration": 0,
                                    "actualStartTime": -1,
                                    "alternate": null,
                                    "child": null,
                                    "childExpirationTime": 0,
                                    "effectTag": 0,
                                    "elementType": null,
                                    "expirationTime": 0,
                                    "firstContextDependency": null,
                                    "firstEffect": null,
                                    "index": 4,
                                    "key": null,
                                    "lastEffect": null,
                                    "memoizedProps": "size: ",
                                    "memoizedState": null,
                                    "mode": 0,
                                    "nextEffect": null,
                                    "pendingProps": "size: ",
                                    "ref": null,
                                    "return": [Circular],
                                    "selfBaseDuration": 0,
                                    "sibling": FiberNode {
                                      "_debugID": 93,
                                      "_debugIsCurrentlyTiming": false,
                                      "_debugOwner": null,
                                      "_debugSource": null,
                                      "actualDuration": 0,
                                      "actualStartTime": -1,
                                      "alternate": null,
                                      "child": null,
                                      "childExpirationTime": 0,
                                      "effectTag": 0,
                                      "elementType": null,
                                      "expirationTime": 0,
                                      "firstContextDependency": null,
                                      "firstEffect": null,
                                      "index": 5,
                                      "key": null,
                                      "lastEffect": null,
                                      "memoizedProps": "S",
                                      "memoizedState": null,
                                      "mode": 0,
                                      "nextEffect": null,
                                      "pendingProps": "S",
                                      "ref": null,
                                      "return": [Circular],
                                      "selfBaseDuration": 0,
                                      "sibling": FiberNode {
                                        "_debugID": 94,
                                        "_debugIsCurrentlyTiming": false,
                                        "_debugOwner": null,
                                        "_debugSource": null,
                                        "actualDuration": 0,
                                        "actualStartTime": -1,
                                        "alternate": null,
                                        "child": null,
                                        "childExpirationTime": 0,
                                        "effectTag": 0,
                                        "elementType": null,
                                        "expirationTime": 0,
                                        "firstContextDependency": null,
                                        "firstEffect": null,
                                        "index": 6,
                                        "key": null,
                                        "lastEffect": null,
                                        "memoizedProps": " ",
                                        "memoizedState": null,
                                        "mode": 0,
                                        "nextEffect": null,
                                        "pendingProps": " ",
                                        "ref": null,
                                        "return": [Circular],
                                        "selfBaseDuration": 0,
                                        "sibling": FiberNode {
                                          "_debugID": 95,
                                          "_debugIsCurrentlyTiming": false,
                                          "_debugOwner": [Circular],
                                          "_debugSource": Object {
                                            "fileName": "/Users/colevanacore/mod-3-projects/pet-finder/src/containers/petDisplay/petDisplay.js",
                                            "lineNumber": 59,
                                          },
                                          "actualDuration": 0,
                                          "actualStartTime": -1,
                                          "alternate": null,
                                          "child": null,
                                          "childExpirationTime": 0,
                                          "effectTag": 0,
                                          "elementType": "br",
                                          "expirationTime": 0,
                                          "firstContextDependency": null,
                                          "firstEffect": null,
                                          "index": 7,
                                          "key": null,
                                          "lastEffect": null,
                                          "memoizedProps": Object {},
                                          "memoizedState": null,
                                          "mode": 0,
                                          "nextEffect": null,
                                          "pendingProps": Object {},
                                          "ref": null,
                                          "return": [Circular],
                                          "selfBaseDuration": 0,
                                          "sibling": FiberNode {
                                            "_debugID": 96,
                                            "_debugIsCurrentlyTiming": false,
                                            "_debugOwner": null,
                                            "_debugSource": null,
                                            "actualDuration": 0,
                                            "actualStartTime": -1,
                                            "alternate": null,
                                            "child": null,
                                            "childExpirationTime": 0,
                                            "effectTag": 0,
                                            "elementType": null,
                                            "expirationTime": 0,
                                            "firstContextDependency": null,
                                            "firstEffect": null,
                                            "index": 8,
                                            "key": null,
                                            "lastEffect": null,
                                            "memoizedProps": "sex: ",
                                            "memoizedState": null,
                                            "mode": 0,
                                            "nextEffect": null,
                                            "pendingProps": "sex: ",
                                            "ref": null,
                                            "return": [Circular],
                                            "selfBaseDuration": 0,
                                            "sibling": FiberNode {
                                              "_debugID": 97,
                                              "_debugIsCurrentlyTiming": false,
                                              "_debugOwner": null,
                                              "_debugSource": null,
                                              "actualDuration": 0,
                                              "actualStartTime": -1,
                                              "alternate": null,
                                              "child": null,
                                              "childExpirationTime": 0,
                                              "effectTag": 0,
                                              "elementType": null,
                                              "expirationTime": 0,
                                              "firstContextDependency": null,
                                              "firstEffect": null,
                                              "index": 9,
                                              "key": null,
                                              "lastEffect": null,
                                              "memoizedProps": "M",
                                              "memoizedState": null,
                                              "mode": 0,
                                              "nextEffect": null,
                                              "pendingProps": "M",
                                              "ref": null,
                                              "return": [Circular],
                                              "selfBaseDuration": 0,
                                              "sibling": null,
                                              "stateNode": M,
                                              "tag": 6,
                                              "treeBaseDuration": 0,
                                              "type": null,
                                              "updateQueue": null,
                                            },
                                            "stateNode": sex: ,
                                            "tag": 6,
                                            "treeBaseDuration": 0,
                                            "type": null,
                                            "updateQueue": null,
                                          },
                                          "stateNode": <br />,
                                          "tag": 5,
                                          "treeBaseDuration": 0,
                                          "type": "br",
                                          "updateQueue": null,
                                        },
                                        "stateNode":  ,
                                        "tag": 6,
                                        "treeBaseDuration": 0,
                                        "type": null,
                                        "updateQueue": null,
                                      },
                                      "stateNode": S,
                                      "tag": 6,
                                      "treeBaseDuration": 0,
                                      "type": null,
                                      "updateQueue": null,
                                    },
                                    "stateNode": size: ,
                                    "tag": 6,
                                    "treeBaseDuration": 0,
                                    "type": null,
                                    "updateQueue": null,
                                  },
                                  "stateNode": <br />,
                                  "tag": 5,
                                  "treeBaseDuration": 0,
                                  "type": "br",
                                  "updateQueue": null,
                                },
                                "stateNode":  ,
                                "tag": 6,
                                "treeBaseDuration": 0,
                                "type": null,
                                "updateQueue": null,
                              },
                              "stateNode": Adult,
                              "tag": 6,
                              "treeBaseDuration": 0,
                              "type": null,
                              "updateQueue": null,
                            },
                            "stateNode": age: ,
                            "tag": 6,
                            "treeBaseDuration": 0,
                            "type": null,
                            "updateQueue": null,
                          },
                          "childExpirationTime": 0,
                          "effectTag": 0,
                          "elementType": "div",
                          "expirationTime": 0,
                          "firstContextDependency": null,
                          "firstEffect": null,
                          "index": 3,
                          "key": null,
                          "lastEffect": null,
                          "memoizedProps": Object {
                            "children": Array [
                              "age: ",
                              "Adult",
                              " ",
                              <br />,
                              "size: ",
                              "S",
                              " ",
                              <br />,
                              "sex: ",
                              "M",
                            ],
                            "className": "pet-description",
                          },
                          "memoizedState": null,
                          "mode": 0,
                          "nextEffect": null,
                          "pendingProps": Object {
                            "children": Array [
                              "age: ",
                              "Adult",
                              " ",
                              <br />,
                              "size: ",
                              "S",
                              " ",
                              <br />,
                              "sex: ",
                              "M",
                            ],
                            "className": "pet-description",
                          },
                          "ref": null,
                          "return": [Circular],
                          "selfBaseDuration": 0,
                          "sibling": null,
                          "stateNode": <div
                            class="pet-description"
                          >
                            age: 
                            Adult
                             
                            <br />
                            size: 
                            S
                             
                            <br />
                            sex: 
                            M
                          </div>,
                          "tag": 5,
                          "treeBaseDuration": 0,
                          "type": "div",
                          "updateQueue": null,
                        },
                        "stateNode": <img
                          alt="Pet"
                          class="display-img image-2"
                          src="img3"
                        />,
                        "tag": 5,
                        "treeBaseDuration": 0,
                        "type": "img",
                        "updateQueue": null,
                      },
                      "stateNode": <img
                        alt="Pet"
                        class="display-img image-1"
                        src="img3"
                      />,
                      "tag": 5,
                      "treeBaseDuration": 0,
                      "type": "img",
                      "updateQueue": null,
                    },
                    "stateNode": <div>
                      <h1>
                         
                        Curly
                         
                      </h1>
                      <p
                        class="animal-type"
                      >
                          
                        Rat
                         
                      </p>
                    </div>,
                    "tag": 5,
                    "treeBaseDuration": 0,
                    "type": "div",
                    "updateQueue": null,
                  },
                  "childExpirationTime": 0,
                  "effectTag": 0,
                  "elementType": "div",
                  "expirationTime": 0,
                  "firstContextDependency": null,
                  "firstEffect": null,
                  "index": 0,
                  "key": "42642357",
                  "lastEffect": null,
                  "memoizedProps": Object {
                    "children": Array [
                      <div>
                        <h1>
                           
                          Curly
                           
                        </h1>
                        <p
                          className="animal-type"
                        >
                            
                          Rat
                           
                        </p>
                      </div>,
                      <img
                        alt="Pet"
                        className="display-img image-1"
                        src="img3"
                      />,
                      <img
                        alt="Pet"
                        className="display-img image-2"
                        src="img3"
                      />,
                      <div
                        className="pet-description"
                      >
                        age: 
                        Adult
                         
                        <br />
                        size: 
                        S
                         
                        <br />
                        sex: 
                        M
                      </div>,
                    ],
                    "className": "pet-card",
                    "onClick": [Function],
                  },
                  "memoizedState": null,
                  "mode": 0,
                  "nextEffect": null,
                  "pendingProps": Object {
                    "children": Array [
                      <div>
                        <h1>
                           
                          Curly
                           
                        </h1>
                        <p
                          className="animal-type"
                        >
                            
                          Rat
                           
                        </p>
                      </div>,
                      <img
                        alt="Pet"
                        className="display-img image-1"
                        src="img3"
                      />,
                      <img
                        alt="Pet"
                        className="display-img image-2"
                        src="img3"
                      />,
                      <div
                        className="pet-description"
                      >
                        age: 
                        Adult
                         
                        <br />
                        size: 
                        S
                         
                        <br />
                        sex: 
                        M
                      </div>,
                    ],
                    "className": "pet-card",
                    "onClick": [Function],
                  },
                  "ref": null,
                  "return": [Circular],
                  "selfBaseDuration": 0,
                  "sibling": null,
                  "stateNode": <div
                    class="pet-card"
                  >
                    <div>
                      <h1>
                         
                        Curly
                         
                      </h1>
                      <p
                        class="animal-type"
                      >
                          
                        Rat
                         
                      </p>
                    </div>
                    <img
                      alt="Pet"
                      class="display-img image-1"
                      src="img3"
                    />
                    <img
                      alt="Pet"
                      class="display-img image-2"
                      src="img3"
                    />
                    <div
                      class="pet-description"
                    >
                      age: 
                      Adult
                       
                      <br />
                      size: 
                      S
                       
                      <br />
                      sex: 
                      M
                    </div>
                  </div>,
                  "tag": 5,
                  "treeBaseDuration": 0,
                  "type": "div",
                  "updateQueue": null,
                },
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": "article",
                "expirationTime": 0,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 1,
                "key": null,
                "lastEffect": null,
                "memoizedProps": Object {
                  "children": Array [
                    <div
                      className="pet-card"
                      onClick={[Function]}
                    >
                      <div>
                        <h1>
                           
                          Curly
                           
                        </h1>
                        <p
                          className="animal-type"
                        >
                            
                          Rat
                           
                        </p>
                      </div>
                      <img
                        alt="Pet"
                        className="display-img image-1"
                        src="img3"
                      />
                      <img
                        alt="Pet"
                        className="display-img image-2"
                        src="img3"
                      />
                      <div
                        className="pet-description"
                      >
                        age: 
                        Adult
                         
                        <br />
                        size: 
                        S
                         
                        <br />
                        sex: 
                        M
                      </div>
                    </div>,
                  ],
                  "className": "pet-display",
                },
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": Object {
                  "children": Array [
                    <div
                      className="pet-card"
                      onClick={[Function]}
                    >
                      <div>
                        <h1>
                           
                          Curly
                           
                        </h1>
                        <p
                          className="animal-type"
                        >
                            
                          Rat
                           
                        </p>
                      </div>
                      <img
                        alt="Pet"
                        className="display-img image-1"
                        src="img3"
                      />
                      <img
                        alt="Pet"
                        className="display-img image-2"
                        src="img3"
                      />
                      <div
                        className="pet-description"
                      >
                        age: 
                        Adult
                         
                        <br />
                        size: 
                        S
                         
                        <br />
                        sex: 
                        M
                      </div>
                    </div>,
                  ],
                  "className": "pet-display",
                },
                "ref": null,
                "return": [Circular],
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": <article
                  class="pet-display"
                >
                  <div
                    class="pet-card"
                  >
                    <div>
                      <h1>
                         
                        Curly
                         
                      </h1>
                      <p
                        class="animal-type"
                      >
                          
                        Rat
                         
                      </p>
                    </div>
                    <img
                      alt="Pet"
                      class="display-img image-1"
                      src="img3"
                    />
                    <img
                      alt="Pet"
                      class="display-img image-2"
                      src="img3"
                    />
                    <div
                      class="pet-description"
                    >
                      age: 
                      Adult
                       
                      <br />
                      size: 
                      S
                       
                      <br />
                      sex: 
                      M
                    </div>
                  </div>
                </article>,
                "tag": 5,
                "treeBaseDuration": 0,
                "type": "article",
                "updateQueue": null,
              },
              "stateNode": <form
                class="selection-form"
              >
                <p
                  class="grid-item"
                >
                  animal
                </p>
                <p
                  class="grid-item"
                >
                  age 
                </p>
                <p
                  class="grid-item"
                >
                  sex 
                </p>
                <select
                  class="grid-item"
                  name="animal"
                >
                  <option
                    disabled=""
                    selected=""
                    value="all"
                  >
                    all animals
                  </option>
                  <option
                    value="dog"
                  >
                     dogs
                  </option>
                  <option
                    value="cat"
                  >
                     cats
                  </option>
                  <option
                    value="rabbit"
                  >
                     rabbits
                  </option>
                  <option
                    value="smallfurry"
                  >
                     small furry animals
                  </option>
                  <option
                    value="barnyard"
                  >
                     barnyard animals
                  </option>
                  <option
                    value="bird"
                  >
                     birds 
                  </option>
                </select>
                <select
                  class="grid-item"
                  name="age"
                >
                  <option
                    disabled=""
                  >
                    choose an age..
                  </option>
                  <option
                    value="Baby"
                  >
                    baby
                  </option>
                  <option
                    value="Young"
                  >
                    young
                  </option>
                  <option
                    value="Adult"
                  >
                    adult
                  </option>
                  <option
                    value="Senior"
                  >
                    senior
                  </option>
                </select>
                <select
                  class="grid-item"
                  name="sex"
                >
                  <option
                    value="M"
                  >
                    male
                  </option>
                  <option
                    value="F"
                  >
                    female
                  </option>
                </select>
                <button
                  type="submit"
                >
                   search! 
                </button>
              </form>,
              "tag": 5,
              "treeBaseDuration": 0,
              "type": "form",
              "updateQueue": null,
            },
            "childExpirationTime": 0,
            "effectTag": 0,
            "elementType": "div",
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "children": Array [
                <form
                  className="selection-form"
                  onSubmit={[Function]}
                >
                  <p
                    className="grid-item"
                  >
                    animal
                  </p>
                  <p
                    className="grid-item"
                  >
                    age 
                  </p>
                  <p
                    className="grid-item"
                  >
                    sex 
                  </p>
                  <select
                    className="grid-item"
                    defaultValue="all"
                    name="animal"
                    onChange={[Function]}
                  >
                    <option
                      disabled={true}
                      value="all"
                    >
                      all animals
                    </option>
                    <option
                      value="dog"
                    >
                       dogs
                    </option>
                    <option
                      value="cat"
                    >
                       cats
                    </option>
                    <option
                      value="rabbit"
                    >
                       rabbits
                    </option>
                    <option
                      value="smallfurry"
                    >
                       small furry animals
                    </option>
                    <option
                      value="barnyard"
                    >
                       barnyard animals
                    </option>
                    <option
                      value="bird"
                    >
                       birds 
                    </option>
                  </select>
                  <select
                    className="grid-item"
                    name="age"
                    onChange={[Function]}
                  >
                    <option
                      disabled={true}
                    >
                      choose an age..
                    </option>
                    <option
                      value="Baby"
                    >
                      baby
                    </option>
                    <option
                      value="Young"
                    >
                      young
                    </option>
                    <option
                      value="Adult"
                    >
                      adult
                    </option>
                    <option
                      value="Senior"
                    >
                      senior
                    </option>
                  </select>
                  <select
                    className="grid-item"
                    name="sex"
                    onChange={[Function]}
                  >
                    <option
                      value="M"
                    >
                      male
                    </option>
                    <option
                      value="F"
                    >
                      female
                    </option>
                  </select>
                  <button
                    type="submit"
                  >
                     search! 
                  </button>
                </form>,
                <article
                  className="pet-display"
                >
                  <div
                    className="pet-card"
                    onClick={[Function]}
                  >
                    <div>
                      <h1>
                         
                        Curly
                         
                      </h1>
                      <p
                        className="animal-type"
                      >
                          
                        Rat
                         
                      </p>
                    </div>
                    <img
                      alt="Pet"
                      className="display-img image-1"
                      src="img3"
                    />
                    <img
                      alt="Pet"
                      className="display-img image-2"
                      src="img3"
                    />
                    <div
                      className="pet-description"
                    >
                      age: 
                      Adult
                       
                      <br />
                      size: 
                      S
                       
                      <br />
                      sex: 
                      M
                    </div>
                  </div>
                </article>,
              ],
            },
            "memoizedState": null,
            "mode": 0,
            "nextEffect": null,
            "pendingProps": Object {
              "children": Array [
                <form
                  className="selection-form"
                  onSubmit={[Function]}
                >
                  <p
                    className="grid-item"
                  >
                    animal
                  </p>
                  <p
                    className="grid-item"
                  >
                    age 
                  </p>
                  <p
                    className="grid-item"
                  >
                    sex 
                  </p>
                  <select
                    className="grid-item"
                    defaultValue="all"
                    name="animal"
                    onChange={[Function]}
                  >
                    <option
                      disabled={true}
                      value="all"
                    >
                      all animals
                    </option>
                    <option
                      value="dog"
                    >
                       dogs
                    </option>
                    <option
                      value="cat"
                    >
                       cats
                    </option>
                    <option
                      value="rabbit"
                    >
                       rabbits
                    </option>
                    <option
                      value="smallfurry"
                    >
                       small furry animals
                    </option>
                    <option
                      value="barnyard"
                    >
                       barnyard animals
                    </option>
                    <option
                      value="bird"
                    >
                       birds 
                    </option>
                  </select>
                  <select
                    className="grid-item"
                    name="age"
                    onChange={[Function]}
                  >
                    <option
                      disabled={true}
                    >
                      choose an age..
                    </option>
                    <option
                      value="Baby"
                    >
                      baby
                    </option>
                    <option
                      value="Young"
                    >
                      young
                    </option>
                    <option
                      value="Adult"
                    >
                      adult
                    </option>
                    <option
                      value="Senior"
                    >
                      senior
                    </option>
                  </select>
                  <select
                    className="grid-item"
                    name="sex"
                    onChange={[Function]}
                  >
                    <option
                      value="M"
                    >
                      male
                    </option>
                    <option
                      value="F"
                    >
                      female
                    </option>
                  </select>
                  <button
                    type="submit"
                  >
                     search! 
                  </button>
                </form>,
                <article
                  className="pet-display"
                >
                  <div
                    className="pet-card"
                    onClick={[Function]}
                  >
                    <div>
                      <h1>
                         
                        Curly
                         
                      </h1>
                      <p
                        className="animal-type"
                      >
                          
                        Rat
                         
                      </p>
                    </div>
                    <img
                      alt="Pet"
                      className="display-img image-1"
                      src="img3"
                    />
                    <img
                      alt="Pet"
                      className="display-img image-2"
                      src="img3"
                    />
                    <div
                      className="pet-description"
                    >
                      age: 
                      Adult
                       
                      <br />
                      size: 
                      S
                       
                      <br />
                      sex: 
                      M
                    </div>
                  </div>
                </article>,
              ],
            },
            "ref": null,
            "return": [Circular],
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": <div>
              <form
                class="selection-form"
              >
                <p
                  class="grid-item"
                >
                  animal
                </p>
                <p
                  class="grid-item"
                >
                  age 
                </p>
                <p
                  class="grid-item"
                >
                  sex 
                </p>
                <select
                  class="grid-item"
                  name="animal"
                >
                  <option
                    disabled=""
                    selected=""
                    value="all"
                  >
                    all animals
                  </option>
                  <option
                    value="dog"
                  >
                     dogs
                  </option>
                  <option
                    value="cat"
                  >
                     cats
                  </option>
                  <option
                    value="rabbit"
                  >
                     rabbits
                  </option>
                  <option
                    value="smallfurry"
                  >
                     small furry animals
                  </option>
                  <option
                    value="barnyard"
                  >
                     barnyard animals
                  </option>
                  <option
                    value="bird"
                  >
                     birds 
                  </option>
                </select>
                <select
                  class="grid-item"
                  name="age"
                >
                  <option
                    disabled=""
                  >
                    choose an age..
                  </option>
                  <option
                    value="Baby"
                  >
                    baby
                  </option>
                  <option
                    value="Young"
                  >
                    young
                  </option>
                  <option
                    value="Adult"
                  >
                    adult
                  </option>
                  <option
                    value="Senior"
                  >
                    senior
                  </option>
                </select>
                <select
                  class="grid-item"
                  name="sex"
                >
                  <option
                    value="M"
                  >
                    male
                  </option>
                  <option
                    value="F"
                  >
                    female
                  </option>
                </select>
                <button
                  type="submit"
                >
                   search! 
                </button>
              </form>
              <article
                class="pet-display"
              >
                <div
                  class="pet-card"
                >
                  <div>
                    <h1>
                       
                      Curly
                       
                    </h1>
                    <p
                      class="animal-type"
                    >
                        
                      Rat
                       
                    </p>
                  </div>
                  <img
                    alt="Pet"
                    class="display-img image-1"
                    src="img3"
                  />
                  <img
                    alt="Pet"
                    class="display-img image-2"
                    src="img3"
                  />
                  <div
                    class="pet-description"
                  >
                    age: 
                    Adult
                     
                    <br />
                    size: 
                    S
                     
                    <br />
                    sex: 
                    M
                  </div>
                </div>
              </article>
            </div>,
            "tag": 5,
            "treeBaseDuration": 0,
            "type": "div",
            "updateQueue": null,
          },
          "childExpirationTime": 0,
          "effectTag": 1,
          "elementType": [Function],
          "expirationTime": 0,
          "firstContextDependency": null,
          "firstEffect": null,
          "index": 0,
          "key": null,
          "lastEffect": null,
          "memoizedProps": Object {
            "addSelectedPet": [MockFunction],
            "fetchSearchedPets": [MockFunction],
            "hasErrored": "",
            "isLoadingPets": false,
            "searchedPets": Array [
              Object {
                "age": "Adult",
                "animal": "Small & Furry",
                "breed": "Rat",
                "contactInfo": Object {
                  "address": "1 dog st",
                  "city": "The Colony",
                  "email": "bob@gmail.com",
                  "state": "TX",
                  "zip": "75056",
                },
                "id": "42642357",
                "name": "Curly",
                "photos": Array [
                  "img1",
                  "img2",
                  "img3",
                  "img4",
                  "img5",
                ],
                "sex": "M",
                "shelterId": "TX2295",
                "size": "S",
              },
            ],
          },
          "memoizedState": Object {
            "age": "",
            "animal": "",
            "location": "",
            "sex": "",
          },
          "mode": 0,
          "nextEffect": null,
          "pendingProps": Object {
            "addSelectedPet": [MockFunction],
            "fetchSearchedPets": [MockFunction],
            "hasErrored": "",
            "isLoadingPets": false,
            "searchedPets": Array [
              Object {
                "age": "Adult",
                "animal": "Small & Furry",
                "breed": "Rat",
                "contactInfo": Object {
                  "address": "1 dog st",
                  "city": "The Colony",
                  "email": "bob@gmail.com",
                  "state": "TX",
                  "zip": "75056",
                },
                "id": "42642357",
                "name": "Curly",
                "photos": Array [
                  "img1",
                  "img2",
                  "img3",
                  "img4",
                  "img5",
                ],
                "sex": "M",
                "shelterId": "TX2295",
                "size": "S",
              },
            ],
          },
          "ref": null,
          "return": FiberNode {
            "_debugID": 49,
            "_debugIsCurrentlyTiming": false,
            "_debugOwner": null,
            "_debugSource": null,
            "actualDuration": 0,
            "actualStartTime": -1,
            "alternate": null,
            "child": [Circular],
            "childExpirationTime": 0,
            "effectTag": 1,
            "elementType": [Function],
            "expirationTime": 0,
            "firstContextDependency": null,
            "firstEffect": null,
            "index": 0,
            "key": null,
            "lastEffect": null,
            "memoizedProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "addSelectedPet": [MockFunction],
                "fetchSearchedPets": [MockFunction],
                "hasErrored": "",
                "isLoadingPets": false,
                "searchedPets": Array [
                  Object {
                    "age": "Adult",
                    "animal": "Small & Furry",
                    "breed": "Rat",
                    "contactInfo": Object {
                      "address": "1 dog st",
                      "city": "The Colony",
                      "email": "bob@gmail.com",
                      "state": "TX",
                      "zip": "75056",
                    },
                    "id": "42642357",
                    "name": "Curly",
                    "photos": Array [
                      "img1",
                      "img2",
                      "img3",
                      "img4",
                      "img5",
                    ],
                    "sex": "M",
                    "shelterId": "TX2295",
                    "size": "S",
                  },
                ],
              },
            },
            "memoizedState": Object {
              "context": null,
              "mount": true,
              "props": Object {
                "addSelectedPet": [MockFunction],
                "fetchSearchedPets": [MockFunction],
                "hasErrored": "",
                "isLoadingPets": false,
                "searchedPets": Array [
                  Object {
                    "age": "Adult",
                    "animal": "Small & Furry",
                    "breed": "Rat",
                    "contactInfo": Object {
                      "address": "1 dog st",
                      "city": "The Colony",
                      "email": "bob@gmail.com",
                      "state": "TX",
                      "zip": "75056",
                    },
                    "id": "42642357",
                    "name": "Curly",
                    "photos": Array [
                      "img1",
                      "img2",
                      "img3",
                      "img4",
                      "img5",
                    ],
                    "sex": "M",
                    "shelterId": "TX2295",
                    "size": "S",
                  },
                ],
              },
            },
            "mode": 0,
            "nextEffect": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <form
                        class="selection-form"
                      >
                        <p
                          class="grid-item"
                        >
                          animal
                        </p>
                        <p
                          class="grid-item"
                        >
                          age 
                        </p>
                        <p
                          class="grid-item"
                        >
                          sex 
                        </p>
                        <select
                          class="grid-item"
                          name="animal"
                        >
                          <option
                            disabled=""
                            selected=""
                            value="all"
                          >
                            all animals
                          </option>
                          <option
                            value="dog"
                          >
                             dogs
                          </option>
                          <option
                            value="cat"
                          >
                             cats
                          </option>
                          <option
                            value="rabbit"
                          >
                             rabbits
                          </option>
                          <option
                            value="smallfurry"
                          >
                             small furry animals
                          </option>
                          <option
                            value="barnyard"
                          >
                             barnyard animals
                          </option>
                          <option
                            value="bird"
                          >
                             birds 
                          </option>
                        </select>
                        <select
                          class="grid-item"
                          name="age"
                        >
                          <option
                            disabled=""
                          >
                            choose an age..
                          </option>
                          <option
                            value="Baby"
                          >
                            baby
                          </option>
                          <option
                            value="Young"
                          >
                            young
                          </option>
                          <option
                            value="Adult"
                          >
                            adult
                          </option>
                          <option
                            value="Senior"
                          >
                            senior
                          </option>
                        </select>
                        <select
                          class="grid-item"
                          name="sex"
                        >
                          <option
                            value="M"
                          >
                            male
                          </option>
                          <option
                            value="F"
                          >
                            female
                          </option>
                        </select>
                        <button
                          type="submit"
                        >
                           search! 
                        </button>
                      </form>
                      <article
                        class="pet-display"
                      >
                        <div
                          class="pet-card"
                        >
                          <div>
                            <h1>
                               
                              Curly
                               
                            </h1>
                            <p
                              class="animal-type"
                            >
                                
                              Rat
                               
                            </p>
                          </div>
                          <img
                            alt="Pet"
                            class="display-img image-1"
                            src="img3"
                          />
                          <img
                            alt="Pet"
                            class="display-img image-2"
                            src="img3"
                          />
                          <div
                            class="pet-description"
                          >
                            age: 
                            Adult
                             
                            <br />
                            size: 
                            S
                             
                            <br />
                            sex: 
                            M
                          </div>
                        </div>
                      </article>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "addSelectedPet": [MockFunction],
                            "fetchSearchedPets": [MockFunction],
                            "hasErrored": "",
                            "isLoadingPets": false,
                            "searchedPets": Array [
                              Object {
                                "age": "Adult",
                                "animal": "Small & Furry",
                                "breed": "Rat",
                                "contactInfo": Object {
                                  "address": "1 dog st",
                                  "city": "The Colony",
                                  "email": "bob@gmail.com",
                                  "state": "TX",
                                  "zip": "75056",
                                },
                                "id": "42642357",
                                "name": "Curly",
                                "photos": Array [
                                  "img1",
                                  "img2",
                                  "img3",
                                  "img4",
                                  "img5",
                                ],
                                "sex": "M",
                                "shelterId": "TX2295",
                                "size": "S",
                              },
                            ],
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "addSelectedPet": [MockFunction],
                            "fetchSearchedPets": [MockFunction],
                            "hasErrored": "",
                            "isLoadingPets": false,
                            "searchedPets": Array [
                              Object {
                                "age": "Adult",
                                "animal": "Small & Furry",
                                "breed": "Rat",
                                "contactInfo": Object {
                                  "address": "1 dog st",
                                  "city": "The Colony",
                                  "email": "bob@gmail.com",
                                  "state": "TX",
                                  "zip": "75056",
                                },
                                "id": "42642357",
                                "name": "Curly",
                                "photos": Array [
                                  "img1",
                                  "img2",
                                  "img3",
                                  "img4",
                                  "img5",
                                ],
                                "sex": "M",
                                "shelterId": "TX2295",
                                "size": "S",
                              },
                            ],
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "addSelectedPet": [MockFunction],
                      "fetchSearchedPets": [MockFunction],
                      "hasErrored": "",
                      "isLoadingPets": false,
                      "searchedPets": Array [
                        Object {
                          "age": "Adult",
                          "animal": "Small & Furry",
                          "breed": "Rat",
                          "contactInfo": Object {
                            "address": "1 dog st",
                            "city": "The Colony",
                            "email": "bob@gmail.com",
                            "state": "TX",
                            "zip": "75056",
                          },
                          "id": "42642357",
                          "name": "Curly",
                          "photos": Array [
                            "img1",
                            "img2",
                            "img3",
                            "img4",
                            "img5",
                          ],
                          "sex": "M",
                          "shelterId": "TX2295",
                          "size": "S",
                        },
                      ],
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <form
                      class="selection-form"
                    >
                      <p
                        class="grid-item"
                      >
                        animal
                      </p>
                      <p
                        class="grid-item"
                      >
                        age 
                      </p>
                      <p
                        class="grid-item"
                      >
                        sex 
                      </p>
                      <select
                        class="grid-item"
                        name="animal"
                      >
                        <option
                          disabled=""
                          selected=""
                          value="all"
                        >
                          all animals
                        </option>
                        <option
                          value="dog"
                        >
                           dogs
                        </option>
                        <option
                          value="cat"
                        >
                           cats
                        </option>
                        <option
                          value="rabbit"
                        >
                           rabbits
                        </option>
                        <option
                          value="smallfurry"
                        >
                           small furry animals
                        </option>
                        <option
                          value="barnyard"
                        >
                           barnyard animals
                        </option>
                        <option
                          value="bird"
                        >
                           birds 
                        </option>
                      </select>
                      <select
                        class="grid-item"
                        name="age"
                      >
                        <option
                          disabled=""
                        >
                          choose an age..
                        </option>
                        <option
                          value="Baby"
                        >
                          baby
                        </option>
                        <option
                          value="Young"
                        >
                          young
                        </option>
                        <option
                          value="Adult"
                        >
                          adult
                        </option>
                        <option
                          value="Senior"
                        >
                          senior
                        </option>
                      </select>
                      <select
                        class="grid-item"
                        name="sex"
                      >
                        <option
                          value="M"
                        >
                          male
                        </option>
                        <option
                          value="F"
                        >
                          female
                        </option>
                      </select>
                      <button
                        type="submit"
                      >
                         search! 
                      </button>
                    </form>
                    <article
                      class="pet-display"
                    >
                      <div
                        class="pet-card"
                      >
                        <div>
                          <h1>
                             
                            Curly
                             
                          </h1>
                          <p
                            class="animal-type"
                          >
                              
                            Rat
                             
                          </p>
                        </div>
                        <img
                          alt="Pet"
                          class="display-img image-1"
                          src="img3"
                        />
                        <img
                          alt="Pet"
                          class="display-img image-2"
                          src="img3"
                        />
                        <div
                          class="pet-description"
                        >
                          age: 
                          Adult
                           
                          <br />
                          size: 
                          S
                           
                          <br />
                          sex: 
                          M
                        </div>
                      </div>
                    </article>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "addSelectedPet": [MockFunction],
                        "fetchSearchedPets": [MockFunction],
                        "hasErrored": "",
                        "isLoadingPets": false,
                        "searchedPets": Array [
                          Object {
                            "age": "Adult",
                            "animal": "Small & Furry",
                            "breed": "Rat",
                            "contactInfo": Object {
                              "address": "1 dog st",
                              "city": "The Colony",
                              "email": "bob@gmail.com",
                              "state": "TX",
                              "zip": "75056",
                            },
                            "id": "42642357",
                            "name": "Curly",
                            "photos": Array [
                              "img1",
                              "img2",
                              "img3",
                              "img4",
                              "img5",
                            ],
                            "sex": "M",
                            "shelterId": "TX2295",
                            "size": "S",
                          },
                        ],
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "pendingProps": Object {
              "Component": [Function],
              "context": null,
              "props": Object {
                "addSelectedPet": [MockFunction],
                "fetchSearchedPets": [MockFunction],
                "hasErrored": "",
                "isLoadingPets": false,
                "searchedPets": Array [
                  Object {
                    "age": "Adult",
                    "animal": "Small & Furry",
                    "breed": "Rat",
                    "contactInfo": Object {
                      "address": "1 dog st",
                      "city": "The Colony",
                      "email": "bob@gmail.com",
                      "state": "TX",
                      "zip": "75056",
                    },
                    "id": "42642357",
                    "name": "Curly",
                    "photos": Array [
                      "img1",
                      "img2",
                      "img3",
                      "img4",
                      "img5",
                    ],
                    "sex": "M",
                    "shelterId": "TX2295",
                    "size": "S",
                  },
                ],
              },
            },
            "ref": null,
            "return": FiberNode {
              "_debugID": 47,
              "_debugIsCurrentlyTiming": false,
              "_debugOwner": null,
              "_debugSource": null,
              "actualDuration": 0,
              "actualStartTime": -1,
              "alternate": FiberNode {
                "_debugID": 47,
                "_debugIsCurrentlyTiming": false,
                "_debugOwner": null,
                "_debugSource": null,
                "actualDuration": 0,
                "actualStartTime": -1,
                "alternate": [Circular],
                "child": null,
                "childExpirationTime": 0,
                "effectTag": 0,
                "elementType": null,
                "expirationTime": 1073741823,
                "firstContextDependency": null,
                "firstEffect": null,
                "index": 0,
                "key": null,
                "lastEffect": null,
                "memoizedProps": null,
                "memoizedState": null,
                "mode": 0,
                "nextEffect": null,
                "pendingProps": null,
                "ref": null,
                "return": null,
                "selfBaseDuration": 0,
                "sibling": null,
                "stateNode": Object {
                  "containerInfo": <div>
                    <div>
                      <form
                        class="selection-form"
                      >
                        <p
                          class="grid-item"
                        >
                          animal
                        </p>
                        <p
                          class="grid-item"
                        >
                          age 
                        </p>
                        <p
                          class="grid-item"
                        >
                          sex 
                        </p>
                        <select
                          class="grid-item"
                          name="animal"
                        >
                          <option
                            disabled=""
                            selected=""
                            value="all"
                          >
                            all animals
                          </option>
                          <option
                            value="dog"
                          >
                             dogs
                          </option>
                          <option
                            value="cat"
                          >
                             cats
                          </option>
                          <option
                            value="rabbit"
                          >
                             rabbits
                          </option>
                          <option
                            value="smallfurry"
                          >
                             small furry animals
                          </option>
                          <option
                            value="barnyard"
                          >
                             barnyard animals
                          </option>
                          <option
                            value="bird"
                          >
                             birds 
                          </option>
                        </select>
                        <select
                          class="grid-item"
                          name="age"
                        >
                          <option
                            disabled=""
                          >
                            choose an age..
                          </option>
                          <option
                            value="Baby"
                          >
                            baby
                          </option>
                          <option
                            value="Young"
                          >
                            young
                          </option>
                          <option
                            value="Adult"
                          >
                            adult
                          </option>
                          <option
                            value="Senior"
                          >
                            senior
                          </option>
                        </select>
                        <select
                          class="grid-item"
                          name="sex"
                        >
                          <option
                            value="M"
                          >
                            male
                          </option>
                          <option
                            value="F"
                          >
                            female
                          </option>
                        </select>
                        <button
                          type="submit"
                        >
                           search! 
                        </button>
                      </form>
                      <article
                        class="pet-display"
                      >
                        <div
                          class="pet-card"
                        >
                          <div>
                            <h1>
                               
                              Curly
                               
                            </h1>
                            <p
                              class="animal-type"
                            >
                                
                              Rat
                               
                            </p>
                          </div>
                          <img
                            alt="Pet"
                            class="display-img image-1"
                            src="img3"
                          />
                          <img
                            alt="Pet"
                            class="display-img image-2"
                            src="img3"
                          />
                          <div
                            class="pet-description"
                          >
                            age: 
                            Adult
                             
                            <br />
                            size: 
                            S
                             
                            <br />
                            sex: 
                            M
                          </div>
                        </div>
                      </article>
                    </div>
                  </div>,
                  "context": Object {},
                  "current": [Circular],
                  "didError": false,
                  "earliestPendingTime": 0,
                  "earliestSuspendedTime": 0,
                  "expirationTime": 0,
                  "finishedWork": null,
                  "firstBatch": null,
                  "hydrate": false,
                  "interactionThreadID": 12,
                  "latestPendingTime": 0,
                  "latestPingedTime": 0,
                  "latestSuspendedTime": 0,
                  "memoizedInteractions": Set {},
                  "nextExpirationTimeToWorkOn": 0,
                  "nextScheduledRoot": null,
                  "pendingChildren": null,
                  "pendingCommitExpirationTime": 0,
                  "pendingContext": null,
                  "pendingInteractionMap": Map {},
                  "pingCache": null,
                  "timeoutHandle": -1,
                },
                "tag": 3,
                "treeBaseDuration": 0,
                "type": null,
                "updateQueue": Object {
                  "baseState": null,
                  "firstCapturedEffect": null,
                  "firstCapturedUpdate": null,
                  "firstEffect": null,
                  "firstUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "addSelectedPet": [MockFunction],
                            "fetchSearchedPets": [MockFunction],
                            "hasErrored": "",
                            "isLoadingPets": false,
                            "searchedPets": Array [
                              Object {
                                "age": "Adult",
                                "animal": "Small & Furry",
                                "breed": "Rat",
                                "contactInfo": Object {
                                  "address": "1 dog st",
                                  "city": "The Colony",
                                  "email": "bob@gmail.com",
                                  "state": "TX",
                                  "zip": "75056",
                                },
                                "id": "42642357",
                                "name": "Curly",
                                "photos": Array [
                                  "img1",
                                  "img2",
                                  "img3",
                                  "img4",
                                  "img5",
                                ],
                                "sex": "M",
                                "shelterId": "TX2295",
                                "size": "S",
                              },
                            ],
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                  "lastCapturedEffect": null,
                  "lastCapturedUpdate": null,
                  "lastEffect": null,
                  "lastUpdate": Object {
                    "callback": null,
                    "expirationTime": 1073741823,
                    "next": null,
                    "nextEffect": null,
                    "payload": Object {
                      "element": <WrapperComponent
                        Component={[Function]}
                        context={null}
                        props={
                          Object {
                            "addSelectedPet": [MockFunction],
                            "fetchSearchedPets": [MockFunction],
                            "hasErrored": "",
                            "isLoadingPets": false,
                            "searchedPets": Array [
                              Object {
                                "age": "Adult",
                                "animal": "Small & Furry",
                                "breed": "Rat",
                                "contactInfo": Object {
                                  "address": "1 dog st",
                                  "city": "The Colony",
                                  "email": "bob@gmail.com",
                                  "state": "TX",
                                  "zip": "75056",
                                },
                                "id": "42642357",
                                "name": "Curly",
                                "photos": Array [
                                  "img1",
                                  "img2",
                                  "img3",
                                  "img4",
                                  "img5",
                                ],
                                "sex": "M",
                                "shelterId": "TX2295",
                                "size": "S",
                              },
                            ],
                          }
                        }
                      />,
                    },
                    "tag": 0,
                  },
                },
              },
              "child": [Circular],
              "childExpirationTime": 0,
              "effectTag": 32,
              "elementType": null,
              "expirationTime": 0,
              "firstContextDependency": null,
              "firstEffect": [Circular],
              "index": 0,
              "key": null,
              "lastEffect": [Circular],
              "memoizedProps": null,
              "memoizedState": Object {
                "element": <WrapperComponent
                  Component={[Function]}
                  context={null}
                  props={
                    Object {
                      "addSelectedPet": [MockFunction],
                      "fetchSearchedPets": [MockFunction],
                      "hasErrored": "",
                      "isLoadingPets": false,
                      "searchedPets": Array [
                        Object {
                          "age": "Adult",
                          "animal": "Small & Furry",
                          "breed": "Rat",
                          "contactInfo": Object {
                            "address": "1 dog st",
                            "city": "The Colony",
                            "email": "bob@gmail.com",
                            "state": "TX",
                            "zip": "75056",
                          },
                          "id": "42642357",
                          "name": "Curly",
                          "photos": Array [
                            "img1",
                            "img2",
                            "img3",
                            "img4",
                            "img5",
                          ],
                          "sex": "M",
                          "shelterId": "TX2295",
                          "size": "S",
                        },
                      ],
                    }
                  }
                />,
              },
              "mode": 0,
              "nextEffect": null,
              "pendingProps": null,
              "ref": null,
              "return": null,
              "selfBaseDuration": 0,
              "sibling": null,
              "stateNode": Object {
                "containerInfo": <div>
                  <div>
                    <form
                      class="selection-form"
                    >
                      <p
                        class="grid-item"
                      >
                        animal
                      </p>
                      <p
                        class="grid-item"
                      >
                        age 
                      </p>
                      <p
                        class="grid-item"
                      >
                        sex 
                      </p>
                      <select
                        class="grid-item"
                        name="animal"
                      >
                        <option
                          disabled=""
                          selected=""
                          value="all"
                        >
                          all animals
                        </option>
                        <option
                          value="dog"
                        >
                           dogs
                        </option>
                        <option
                          value="cat"
                        >
                           cats
                        </option>
                        <option
                          value="rabbit"
                        >
                           rabbits
                        </option>
                        <option
                          value="smallfurry"
                        >
                           small furry animals
                        </option>
                        <option
                          value="barnyard"
                        >
                           barnyard animals
                        </option>
                        <option
                          value="bird"
                        >
                           birds 
                        </option>
                      </select>
                      <select
                        class="grid-item"
                        name="age"
                      >
                        <option
                          disabled=""
                        >
                          choose an age..
                        </option>
                        <option
                          value="Baby"
                        >
                          baby
                        </option>
                        <option
                          value="Young"
                        >
                          young
                        </option>
                        <option
                          value="Adult"
                        >
                          adult
                        </option>
                        <option
                          value="Senior"
                        >
                          senior
                        </option>
                      </select>
                      <select
                        class="grid-item"
                        name="sex"
                      >
                        <option
                          value="M"
                        >
                          male
                        </option>
                        <option
                          value="F"
                        >
                          female
                        </option>
                      </select>
                      <button
                        type="submit"
                      >
                         search! 
                      </button>
                    </form>
                    <article
                      class="pet-display"
                    >
                      <div
                        class="pet-card"
                      >
                        <div>
                          <h1>
                             
                            Curly
                             
                          </h1>
                          <p
                            class="animal-type"
                          >
                              
                            Rat
                             
                          </p>
                        </div>
                        <img
                          alt="Pet"
                          class="display-img image-1"
                          src="img3"
                        />
                        <img
                          alt="Pet"
                          class="display-img image-2"
                          src="img3"
                        />
                        <div
                          class="pet-description"
                        >
                          age: 
                          Adult
                           
                          <br />
                          size: 
                          S
                           
                          <br />
                          sex: 
                          M
                        </div>
                      </div>
                    </article>
                  </div>
                </div>,
                "context": Object {},
                "current": [Circular],
                "didError": false,
                "earliestPendingTime": 0,
                "earliestSuspendedTime": 0,
                "expirationTime": 0,
                "finishedWork": null,
                "firstBatch": null,
                "hydrate": false,
                "interactionThreadID": 12,
                "latestPendingTime": 0,
                "latestPingedTime": 0,
                "latestSuspendedTime": 0,
                "memoizedInteractions": Set {},
                "nextExpirationTimeToWorkOn": 0,
                "nextScheduledRoot": null,
                "pendingChildren": null,
                "pendingCommitExpirationTime": 0,
                "pendingContext": null,
                "pendingInteractionMap": Map {},
                "pingCache": null,
                "timeoutHandle": -1,
              },
              "tag": 3,
              "treeBaseDuration": 0,
              "type": null,
              "updateQueue": Object {
                "baseState": Object {
                  "element": <WrapperComponent
                    Component={[Function]}
                    context={null}
                    props={
                      Object {
                        "addSelectedPet": [MockFunction],
                        "fetchSearchedPets": [MockFunction],
                        "hasErrored": "",
                        "isLoadingPets": false,
                        "searchedPets": Array [
                          Object {
                            "age": "Adult",
                            "animal": "Small & Furry",
                            "breed": "Rat",
                            "contactInfo": Object {
                              "address": "1 dog st",
                              "city": "The Colony",
                              "email": "bob@gmail.com",
                              "state": "TX",
                              "zip": "75056",
                            },
                            "id": "42642357",
                            "name": "Curly",
                            "photos": Array [
                              "img1",
                              "img2",
                              "img3",
                              "img4",
                              "img5",
                            ],
                            "sex": "M",
                            "shelterId": "TX2295",
                            "size": "S",
                          },
                        ],
                      }
                    }
                  />,
                },
                "firstCapturedEffect": null,
                "firstCapturedUpdate": null,
                "firstEffect": null,
                "firstUpdate": null,
                "lastCapturedEffect": null,
                "lastCapturedUpdate": null,
                "lastEffect": null,
                "lastUpdate": null,
              },
            },
            "selfBaseDuration": 0,
            "sibling": null,
            "stateNode": WrapperComponent {
              "_reactInternalFiber": [Circular],
              "_reactInternalInstance": Object {},
              "context": Object {},
              "props": Object {
                "Component": [Function],
                "context": null,
                "props": Object {
                  "addSelectedPet": [MockFunction],
                  "fetchSearchedPets": [MockFunction],
                  "hasErrored": "",
                  "isLoadingPets": false,
                  "searchedPets": Array [
                    Object {
                      "age": "Adult",
                      "animal": "Small & Furry",
                      "breed": "Rat",
                      "contactInfo": Object {
                        "address": "1 dog st",
                        "city": "The Colony",
                        "email": "bob@gmail.com",
                        "state": "TX",
                        "zip": "75056",
                      },
                      "id": "42642357",
                      "name": "Curly",
                      "photos": Array [
                        "img1",
                        "img2",
                        "img3",
                        "img4",
                        "img5",
                      ],
                      "sex": "M",
                      "shelterId": "TX2295",
                      "size": "S",
                    },
                  ],
                },
              },
              "refs": Object {},
              "state": Object {
                "context": null,
                "mount": true,
                "props": Object {
                  "addSelectedPet": [MockFunction],
                  "fetchSearchedPets": [MockFunction],
                  "hasErrored": "",
                  "isLoadingPets": false,
                  "searchedPets": Array [
                    Object {
                      "age": "Adult",
                      "animal": "Small & Furry",
                      "breed": "Rat",
                      "contactInfo": Object {
                        "address": "1 dog st",
                        "city": "The Colony",
                        "email": "bob@gmail.com",
                        "state": "TX",
                        "zip": "75056",
                      },
                      "id": "42642357",
                      "name": "Curly",
                      "photos": Array [
                        "img1",
                        "img2",
                        "img3",
                        "img4",
                        "img5",
                      ],
                      "sex": "M",
                      "shelterId": "TX2295",
                      "size": "S",
                    },
                  ],
                },
              },
              "updater": Object {
                "enqueueForceUpdate": [Function],
                "enqueueReplaceState": [Function],
                "enqueueSetState": [Function],
                "isMounted": [Function],
              },
            },
            "tag": 1,
            "treeBaseDuration": 0,
            "type": [Function],
            "updateQueue": null,
          },
          "selfBaseDuration": 0,
          "sibling": null,
          "stateNode": [Circular],
          "tag": 1,
          "treeBaseDuration": 0,
          "type": [Function],
          "updateQueue": null,
        },
        "_reactInternalInstance": Object {},
        "context": Object {},
        "displayMore": [Function],
        "handleChange": [Function],
        "handleSubmit": [Function],
        "props": Object {
          "addSelectedPet": [MockFunction],
          "fetchSearchedPets": [MockFunction],
          "hasErrored": "",
          "isLoadingPets": false,
          "searchedPets": Array [
            Object {
              "age": "Adult",
              "animal": "Small & Furry",
              "breed": "Rat",
              "contactInfo": Object {
                "address": "1 dog st",
                "city": "The Colony",
                "email": "bob@gmail.com",
                "state": "TX",
                "zip": "75056",
              },
              "id": "42642357",
              "name": "Curly",
              "photos": Array [
                "img1",
                "img2",
                "img3",
                "img4",
                "img5",
              ],
              "sex": "M",
              "shelterId": "TX2295",
              "size": "S",
            },
          ],
        },
        "refs": Object {},
        "state": Object {
          "age": "",
          "animal": "",
          "location": "",
          "sex": "",
        },
        "updater": Object {
          "enqueueForceUpdate": [Function],
          "enqueueReplaceState": [Function],
          "enqueueSetState": [Function],
          "isMounted": [Function],
        },
      },
      "key": undefined,
      "nodeType": "class",
      "props": Object {
        "addSelectedPet": [MockFunction],
        "fetchSearchedPets": [MockFunction],
        "hasErrored": "",
        "isLoadingPets": false,
        "searchedPets": Array [
          Object {
            "age": "Adult",
            "animal": "Small & Furry",
            "breed": "Rat",
            "contactInfo": Object {
              "address": "1 dog st",
              "city": "The Colony",
              "email": "bob@gmail.com",
              "state": "TX",
              "zip": "75056",
            },
            "id": "42642357",
            "name": "Curly",
            "photos": Array [
              "img1",
              "img2",
              "img3",
              "img4",
              "img5",
            ],
            "sex": "M",
            "shelterId": "TX2295",
            "size": "S",
          },
        ],
      },
      "ref": null,
      "rendered": Object {
        "instance": <div>
          <form
            class="selection-form"
          >
            <p
              class="grid-item"
            >
              animal
            </p>
            <p
              class="grid-item"
            >
              age 
            </p>
            <p
              class="grid-item"
            >
              sex 
            </p>
            <select
              class="grid-item"
              name="animal"
            >
              <option
                disabled=""
                selected=""
                value="all"
              >
                all animals
              </option>
              <option
                value="dog"
              >
                 dogs
              </option>
              <option
                value="cat"
              >
                 cats
              </option>
              <option
                value="rabbit"
              >
                 rabbits
              </option>
              <option
                value="smallfurry"
              >
                 small furry animals
              </option>
              <option
                value="barnyard"
              >
                 barnyard animals
              </option>
              <option
                value="bird"
              >
                 birds 
              </option>
            </select>
            <select
              class="grid-item"
              name="age"
            >
              <option
                disabled=""
              >
                choose an age..
              </option>
              <option
                value="Baby"
              >
                baby
              </option>
              <option
                value="Young"
              >
                young
              </option>
              <option
                value="Adult"
              >
                adult
              </option>
              <option
                value="Senior"
              >
                senior
              </option>
            </select>
            <select
              class="grid-item"
              name="sex"
            >
              <option
                value="M"
              >
                male
              </option>
              <option
                value="F"
              >
                female
              </option>
            </select>
            <button
              type="submit"
            >
               search! 
            </button>
          </form>
          <article
            class="pet-display"
          >
            <div
              class="pet-card"
            >
              <div>
                <h1>
                   
                  Curly
                   
                </h1>
                <p
                  class="animal-type"
                >
                    
                  Rat
                   
                </p>
              </div>
              <img
                alt="Pet"
                class="display-img image-1"
                src="img3"
              />
              <img
                alt="Pet"
                class="display-img image-2"
                src="img3"
              />
              <div
                class="pet-description"
              >
                age: 
                Adult
                 
                <br />
                size: 
                S
                 
                <br />
                sex: 
                M
              </div>
            </div>
          </article>
        </div>,
        "key": undefined,
        "nodeType": "host",
        "props": Object {
          "children": Array [
            <form
              className="selection-form"
              onSubmit={[Function]}
            >
              <p
                className="grid-item"
              >
                animal
              </p>
              <p
                className="grid-item"
              >
                age 
              </p>
              <p
                className="grid-item"
              >
                sex 
              </p>
              <select
                className="grid-item"
                defaultValue="all"
                name="animal"
                onChange={[Function]}
              >
                <option
                  disabled={true}
                  value="all"
                >
                  all animals
                </option>
                <option
                  value="dog"
                >
                   dogs
                </option>
                <option
                  value="cat"
                >
                   cats
                </option>
                <option
                  value="rabbit"
                >
                   rabbits
                </option>
                <option
                  value="smallfurry"
                >
                   small furry animals
                </option>
                <option
                  value="barnyard"
                >
                   barnyard animals
                </option>
                <option
                  value="bird"
                >
                   birds 
                </option>
              </select>
              <select
                className="grid-item"
                name="age"
                onChange={[Function]}
              >
                <option
                  disabled={true}
                >
                  choose an age..
                </option>
                <option
                  value="Baby"
                >
                  baby
                </option>
                <option
                  value="Young"
                >
                  young
                </option>
                <option
                  value="Adult"
                >
                  adult
                </option>
                <option
                  value="Senior"
                >
                  senior
                </option>
              </select>
              <select
                className="grid-item"
                name="sex"
                onChange={[Function]}
              >
                <option
                  value="M"
                >
                  male
                </option>
                <option
                  value="F"
                >
                  female
                </option>
              </select>
              <button
                type="submit"
              >
                 search! 
              </button>
            </form>,
            <article
              className="pet-display"
            >
              <div
                className="pet-card"
                onClick={[Function]}
              >
                <div>
                  <h1>
                     
                    Curly
                     
                  </h1>
                  <p
                    className="animal-type"
                  >
                      
                    Rat
                     
                  </p>
                </div>
                <img
                  alt="Pet"
                  className="display-img image-1"
                  src="img3"
                />
                <img
                  alt="Pet"
                  className="display-img image-2"
                  src="img3"
                />
                <div
                  className="pet-description"
                >
                  age: 
                  Adult
                   
                  <br />
                  size: 
                  S
                   
                  <br />
                  sex: 
                  M
                </div>
              </div>
            </article>,
          ],
        },
        "ref": null,
        "rendered": Array [
          Object {
            "instance": <form
              class="selection-form"
            >
              <p
                class="grid-item"
              >
                animal
              </p>
              <p
                class="grid-item"
              >
                age 
              </p>
              <p
                class="grid-item"
              >
                sex 
              </p>
              <select
                class="grid-item"
                name="animal"
              >
                <option
                  disabled=""
                  selected=""
                  value="all"
                >
                  all animals
                </option>
                <option
                  value="dog"
                >
                   dogs
                </option>
                <option
                  value="cat"
                >
                   cats
                </option>
                <option
                  value="rabbit"
                >
                   rabbits
                </option>
                <option
                  value="smallfurry"
                >
                   small furry animals
                </option>
                <option
                  value="barnyard"
                >
                   barnyard animals
                </option>
                <option
                  value="bird"
                >
                   birds 
                </option>
              </select>
              <select
                class="grid-item"
                name="age"
              >
                <option
                  disabled=""
                >
                  choose an age..
                </option>
                <option
                  value="Baby"
                >
                  baby
                </option>
                <option
                  value="Young"
                >
                  young
                </option>
                <option
                  value="Adult"
                >
                  adult
                </option>
                <option
                  value="Senior"
                >
                  senior
                </option>
              </select>
              <select
                class="grid-item"
                name="sex"
              >
                <option
                  value="M"
                >
                  male
                </option>
                <option
                  value="F"
                >
                  female
                </option>
              </select>
              <button
                type="submit"
              >
                 search! 
              </button>
            </form>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <p
                  className="grid-item"
                >
                  animal
                </p>,
                <p
                  className="grid-item"
                >
                  age 
                </p>,
                <p
                  className="grid-item"
                >
                  sex 
                </p>,
                <select
                  className="grid-item"
                  defaultValue="all"
                  name="animal"
                  onChange={[Function]}
                >
                  <option
                    disabled={true}
                    value="all"
                  >
                    all animals
                  </option>
                  <option
                    value="dog"
                  >
                     dogs
                  </option>
                  <option
                    value="cat"
                  >
                     cats
                  </option>
                  <option
                    value="rabbit"
                  >
                     rabbits
                  </option>
                  <option
                    value="smallfurry"
                  >
                     small furry animals
                  </option>
                  <option
                    value="barnyard"
                  >
                     barnyard animals
                  </option>
                  <option
                    value="bird"
                  >
                     birds 
                  </option>
                </select>,
                <select
                  className="grid-item"
                  name="age"
                  onChange={[Function]}
                >
                  <option
                    disabled={true}
                  >
                    choose an age..
                  </option>
                  <option
                    value="Baby"
                  >
                    baby
                  </option>
                  <option
                    value="Young"
                  >
                    young
                  </option>
                  <option
                    value="Adult"
                  >
                    adult
                  </option>
                  <option
                    value="Senior"
                  >
                    senior
                  </option>
                </select>,
                <select
                  className="grid-item"
                  name="sex"
                  onChange={[Function]}
                >
                  <option
                    value="M"
                  >
                    male
                  </option>
                  <option
                    value="F"
                  >
                    female
                  </option>
                </select>,
                <button
                  type="submit"
                >
                   search! 
                </button>,
              ],
              "className": "selection-form",
              "onSubmit": [Function],
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <p
                  class="grid-item"
                >
                  animal
                </p>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "animal",
                  "className": "grid-item",
                },
                "ref": null,
                "rendered": Array [
                  "animal",
                ],
                "type": "p",
              },
              Object {
                "instance": <p
                  class="grid-item"
                >
                  age 
                </p>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "age ",
                  "className": "grid-item",
                },
                "ref": null,
                "rendered": Array [
                  "age ",
                ],
                "type": "p",
              },
              Object {
                "instance": <p
                  class="grid-item"
                >
                  sex 
                </p>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": "sex ",
                  "className": "grid-item",
                },
                "ref": null,
                "rendered": Array [
                  "sex ",
                ],
                "type": "p",
              },
              Object {
                "instance": <select
                  class="grid-item"
                  name="animal"
                >
                  <option
                    disabled=""
                    selected=""
                    value="all"
                  >
                    all animals
                  </option>
                  <option
                    value="dog"
                  >
                     dogs
                  </option>
                  <option
                    value="cat"
                  >
                     cats
                  </option>
                  <option
                    value="rabbit"
                  >
                     rabbits
                  </option>
                  <option
                    value="smallfurry"
                  >
                     small furry animals
                  </option>
                  <option
                    value="barnyard"
                  >
                     barnyard animals
                  </option>
                  <option
                    value="bird"
                  >
                     birds 
                  </option>
                </select>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option
                      disabled={true}
                      value="all"
                    >
                      all animals
                    </option>,
                    <option
                      value="dog"
                    >
                       dogs
                    </option>,
                    <option
                      value="cat"
                    >
                       cats
                    </option>,
                    <option
                      value="rabbit"
                    >
                       rabbits
                    </option>,
                    <option
                      value="smallfurry"
                    >
                       small furry animals
                    </option>,
                    <option
                      value="barnyard"
                    >
                       barnyard animals
                    </option>,
                    <option
                      value="bird"
                    >
                       birds 
                    </option>,
                  ],
                  "className": "grid-item",
                  "defaultValue": "all",
                  "name": "animal",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <option
                      disabled=""
                      selected=""
                      value="all"
                    >
                      all animals
                    </option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "all animals",
                      "disabled": true,
                      "value": "all",
                    },
                    "ref": null,
                    "rendered": Array [
                      "all animals",
                    ],
                    "type": "option",
                  },
                  Object {
                    "instance": <option
                      value="dog"
                    >
                       dogs
                    </option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": " dogs",
                      "value": "dog",
                    },
                    "ref": null,
                    "rendered": Array [
                      " dogs",
                    ],
                    "type": "option",
                  },
                  Object {
                    "instance": <option
                      value="cat"
                    >
                       cats
                    </option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": " cats",
                      "value": "cat",
                    },
                    "ref": null,
                    "rendered": Array [
                      " cats",
                    ],
                    "type": "option",
                  },
                  Object {
                    "instance": <option
                      value="rabbit"
                    >
                       rabbits
                    </option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": " rabbits",
                      "value": "rabbit",
                    },
                    "ref": null,
                    "rendered": Array [
                      " rabbits",
                    ],
                    "type": "option",
                  },
                  Object {
                    "instance": <option
                      value="smallfurry"
                    >
                       small furry animals
                    </option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": " small furry animals",
                      "value": "smallfurry",
                    },
                    "ref": null,
                    "rendered": Array [
                      " small furry animals",
                    ],
                    "type": "option",
                  },
                  Object {
                    "instance": <option
                      value="barnyard"
                    >
                       barnyard animals
                    </option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": " barnyard animals",
                      "value": "barnyard",
                    },
                    "ref": null,
                    "rendered": Array [
                      " barnyard animals",
                    ],
                    "type": "option",
                  },
                  Object {
                    "instance": <option
                      value="bird"
                    >
                       birds 
                    </option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": " birds ",
                      "value": "bird",
                    },
                    "ref": null,
                    "rendered": Array [
                      " birds ",
                    ],
                    "type": "option",
                  },
                ],
                "type": "select",
              },
              Object {
                "instance": <select
                  class="grid-item"
                  name="age"
                >
                  <option
                    disabled=""
                  >
                    choose an age..
                  </option>
                  <option
                    value="Baby"
                  >
                    baby
                  </option>
                  <option
                    value="Young"
                  >
                    young
                  </option>
                  <option
                    value="Adult"
                  >
                    adult
                  </option>
                  <option
                    value="Senior"
                  >
                    senior
                  </option>
                </select>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option
                      disabled={true}
                    >
                      choose an age..
                    </option>,
                    <option
                      value="Baby"
                    >
                      baby
                    </option>,
                    <option
                      value="Young"
                    >
                      young
                    </option>,
                    <option
                      value="Adult"
                    >
                      adult
                    </option>,
                    <option
                      value="Senior"
                    >
                      senior
                    </option>,
                  ],
                  "className": "grid-item",
                  "name": "age",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <option
                      disabled=""
                    >
                      choose an age..
                    </option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "choose an age..",
                      "disabled": true,
                    },
                    "ref": null,
                    "rendered": Array [
                      "choose an age..",
                    ],
                    "type": "option",
                  },
                  Object {
                    "instance": <option
                      value="Baby"
                    >
                      baby
                    </option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "baby",
                      "value": "Baby",
                    },
                    "ref": null,
                    "rendered": Array [
                      "baby",
                    ],
                    "type": "option",
                  },
                  Object {
                    "instance": <option
                      value="Young"
                    >
                      young
                    </option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "young",
                      "value": "Young",
                    },
                    "ref": null,
                    "rendered": Array [
                      "young",
                    ],
                    "type": "option",
                  },
                  Object {
                    "instance": <option
                      value="Adult"
                    >
                      adult
                    </option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "adult",
                      "value": "Adult",
                    },
                    "ref": null,
                    "rendered": Array [
                      "adult",
                    ],
                    "type": "option",
                  },
                  Object {
                    "instance": <option
                      value="Senior"
                    >
                      senior
                    </option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "senior",
                      "value": "Senior",
                    },
                    "ref": null,
                    "rendered": Array [
                      "senior",
                    ],
                    "type": "option",
                  },
                ],
                "type": "select",
              },
              Object {
                "instance": <select
                  class="grid-item"
                  name="sex"
                >
                  <option
                    value="M"
                  >
                    male
                  </option>
                  <option
                    value="F"
                  >
                    female
                  </option>
                </select>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <option
                      value="M"
                    >
                      male
                    </option>,
                    <option
                      value="F"
                    >
                      female
                    </option>,
                  ],
                  "className": "grid-item",
                  "name": "sex",
                  "onChange": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <option
                      value="M"
                    >
                      male
                    </option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "male",
                      "value": "M",
                    },
                    "ref": null,
                    "rendered": Array [
                      "male",
                    ],
                    "type": "option",
                  },
                  Object {
                    "instance": <option
                      value="F"
                    >
                      female
                    </option>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": "female",
                      "value": "F",
                    },
                    "ref": null,
                    "rendered": Array [
                      "female",
                    ],
                    "type": "option",
                  },
                ],
                "type": "select",
              },
              Object {
                "instance": <button
                  type="submit"
                >
                   search! 
                </button>,
                "key": undefined,
                "nodeType": "host",
                "props": Object {
                  "children": " search! ",
                  "type": "submit",
                },
                "ref": null,
                "rendered": Array [
                  " search! ",
                ],
                "type": "button",
              },
            ],
            "type": "form",
          },
          Object {
            "instance": <article
              class="pet-display"
            >
              <div
                class="pet-card"
              >
                <div>
                  <h1>
                     
                    Curly
                     
                  </h1>
                  <p
                    class="animal-type"
                  >
                      
                    Rat
                     
                  </p>
                </div>
                <img
                  alt="Pet"
                  class="display-img image-1"
                  src="img3"
                />
                <img
                  alt="Pet"
                  class="display-img image-2"
                  src="img3"
                />
                <div
                  class="pet-description"
                >
                  age: 
                  Adult
                   
                  <br />
                  size: 
                  S
                   
                  <br />
                  sex: 
                  M
                </div>
              </div>
            </article>,
            "key": undefined,
            "nodeType": "host",
            "props": Object {
              "children": Array [
                <div
                  className="pet-card"
                  onClick={[Function]}
                >
                  <div>
                    <h1>
                       
                      Curly
                       
                    </h1>
                    <p
                      className="animal-type"
                    >
                        
                      Rat
                       
                    </p>
                  </div>
                  <img
                    alt="Pet"
                    className="display-img image-1"
                    src="img3"
                  />
                  <img
                    alt="Pet"
                    className="display-img image-2"
                    src="img3"
                  />
                  <div
                    className="pet-description"
                  >
                    age: 
                    Adult
                     
                    <br />
                    size: 
                    S
                     
                    <br />
                    sex: 
                    M
                  </div>
                </div>,
              ],
              "className": "pet-display",
            },
            "ref": null,
            "rendered": Array [
              Object {
                "instance": <div
                  class="pet-card"
                >
                  <div>
                    <h1>
                       
                      Curly
                       
                    </h1>
                    <p
                      class="animal-type"
                    >
                        
                      Rat
                       
                    </p>
                  </div>
                  <img
                    alt="Pet"
                    class="display-img image-1"
                    src="img3"
                  />
                  <img
                    alt="Pet"
                    class="display-img image-2"
                    src="img3"
                  />
                  <div
                    class="pet-description"
                  >
                    age: 
                    Adult
                     
                    <br />
                    size: 
                    S
                     
                    <br />
                    sex: 
                    M
                  </div>
                </div>,
                "key": "42642357",
                "nodeType": "host",
                "props": Object {
                  "children": Array [
                    <div>
                      <h1>
                         
                        Curly
                         
                      </h1>
                      <p
                        className="animal-type"
                      >
                          
                        Rat
                         
                      </p>
                    </div>,
                    <img
                      alt="Pet"
                      className="display-img image-1"
                      src="img3"
                    />,
                    <img
                      alt="Pet"
                      className="display-img image-2"
                      src="img3"
                    />,
                    <div
                      className="pet-description"
                    >
                      age: 
                      Adult
                       
                      <br />
                      size: 
                      S
                       
                      <br />
                      sex: 
                      M
                    </div>,
                  ],
                  "className": "pet-card",
                  "onClick": [Function],
                },
                "ref": null,
                "rendered": Array [
                  Object {
                    "instance": <div>
                      <h1>
                         
                        Curly
                         
                      </h1>
                      <p
                        class="animal-type"
                      >
                          
                        Rat
                         
                      </p>
                    </div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        <h1>
                           
                          Curly
                           
                        </h1>,
                        <p
                          className="animal-type"
                        >
                            
                          Rat
                           
                        </p>,
                      ],
                    },
                    "ref": null,
                    "rendered": Array [
                      Object {
                        "instance": <h1>
                           
                          Curly
                           
                        </h1>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            " ",
                            "Curly",
                            " ",
                          ],
                        },
                        "ref": null,
                        "rendered": Array [
                          " ",
                          "Curly",
                          " ",
                        ],
                        "type": "h1",
                      },
                      Object {
                        "instance": <p
                          class="animal-type"
                        >
                            
                          Rat
                           
                        </p>,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {
                          "children": Array [
                            "  ",
                            "Rat",
                            " ",
                          ],
                          "className": "animal-type",
                        },
                        "ref": null,
                        "rendered": Array [
                          "  ",
                          "Rat",
                          " ",
                        ],
                        "type": "p",
                      },
                    ],
                    "type": "div",
                  },
                  Object {
                    "instance": <img
                      alt="Pet"
                      class="display-img image-1"
                      src="img3"
                    />,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "alt": "Pet",
                      "className": "display-img image-1",
                      "src": "img3",
                    },
                    "ref": null,
                    "rendered": Array [
                      undefined,
                    ],
                    "type": "img",
                  },
                  Object {
                    "instance": <img
                      alt="Pet"
                      class="display-img image-2"
                      src="img3"
                    />,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "alt": "Pet",
                      "className": "display-img image-2",
                      "src": "img3",
                    },
                    "ref": null,
                    "rendered": Array [
                      undefined,
                    ],
                    "type": "img",
                  },
                  Object {
                    "instance": <div
                      class="pet-description"
                    >
                      age: 
                      Adult
                       
                      <br />
                      size: 
                      S
                       
                      <br />
                      sex: 
                      M
                    </div>,
                    "key": undefined,
                    "nodeType": "host",
                    "props": Object {
                      "children": Array [
                        "age: ",
                        "Adult",
                        " ",
                        <br />,
                        "size: ",
                        "S",
                        " ",
                        <br />,
                        "sex: ",
                        "M",
                      ],
                      "className": "pet-description",
                    },
                    "ref": null,
                    "rendered": Array [
                      "age: ",
                      "Adult",
                      " ",
                      Object {
                        "instance": <br />,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": Array [
                          undefined,
                        ],
                        "type": "br",
                      },
                      "size: ",
                      "S",
                      " ",
                      Object {
                        "instance": <br />,
                        "key": undefined,
                        "nodeType": "host",
                        "props": Object {},
                        "ref": null,
                        "rendered": Array [
                          undefined,
                        ],
                        "type": "br",
                      },
                      "sex: ",
                      "M",
                    ],
                    "type": "div",
                  },
                ],
                "type": "div",
              },
            ],
            "type": "article",
          },
        ],
        "type": "div",
      },
      "type": [Function],
    },
  ],
  Symbol(enzyme.__options__): Object {
    "adapter": ReactSixteenAdapter {
      "options": Object {
        "enableComponentDidUpdateOnSetState": true,
        "lifecycles": Object {
          "componentDidUpdate": Object {
            "onSetState": true,
          },
          "getDerivedStateFromProps": true,
          "getSnapshotBeforeUpdate": true,
          "setState": Object {
            "skipsComponentDidUpdateOnNullish": true,
          },
        },
      },
    },
  },
}
`;
